
generate solver for
  uNode  in uNodeEquation  and
  uEdgeX in uEdgeXEquation and
  uEdgeY in uEdgeYEquation and
  uEdgeD in uEdgeDEquation with {
  solver_targetResReduction     = 1e-8
  solver_maxNumIts              = 100
  solver_smoother_jacobiType    = false
  solver_smoother_numPre        = 3
  solver_smoother_numPost       = 3
  solver_smoother_damping       = 1.0 // 0.8 // 0.6667
  solver_smoother_coloring      = "red-black" // "9-way"
  solver_cgs                    = "CG" // "BiCGStab"
  solver_cgs_maxNumIts          = 10000
  solver_cgs_targetResReduction = 1e-3
} modifiers {
  replace 'restriction' @all {
    myRestr_FE@current ( )
  }
  replace 'correction' @all {
    myCorr_FE@current ( )
  }

  append to 'cycle' @finest {
    NormError_Max@finest ( )
  }
}
/*smootherStage {
  loopBase uNode
  solveFor {
    uNode@[0,0] uNode@[-1,0] uNode@[0,-1] uNode@[1,0] uNode@[0,1] uNode@[-1,-1] uNode@[1,1]
    uEdgeX@[0,0] uEdgeX@[1,0] uEdgeX@[0,-1] uEdgeX@[-1,-1]
    uEdgeY@[0,0] uEdgeY@[0,1] uEdgeY@[-1,0] uEdgeY@[-1,-1]
    uEdgeD@[0,0] uEdgeD@[-1,0] uEdgeD@[0,-1] uEdgeD@[-1,-1]
  }
}*/

/*smootherStage {
  loopBase uNode
  solveFor {
    uNode
    uEdgeX@[0,0] uEdgeX@[0,-1]
    uEdgeY@[0,0] uEdgeY@[-1,0]
    uEdgeD@[0,0] uEdgeD@[-1,0] uEdgeD@[0,-1] uEdgeD@[-1,-1]
  }
}*/

/*smootherStage {
  loopBase uEdgeD
  solveFor {
    uNode@[0,0] uNode@[1,0] uNode@[1,1]
    uEdgeX@[1,0]
    uEdgeY@[0,0]
    uEdgeD@[0,0]
  }
}
smootherStage {
  loopBase uEdgeD
  solveFor {
    uNode@[0,0] uNode@[0,1] uNode@[1,1]
    uEdgeX@[0,0]
    uEdgeY@[0,1]
    uEdgeD@[0,0]
  }
}*/

smootherStage {
  loopBase uNode  solveFor { uNode  }
} smootherStage {
  loopBase uEdgeX solveFor { uEdgeX }
} smootherStage {
  loopBase uEdgeY solveFor { uEdgeY }
} smootherStage {
  loopBase uEdgeD solveFor { uEdgeD }
}

/*smootherStage {
  loopBase uEdgeD
  solveFor {
    uNode@[0,0]
    uEdgeX@[1,0]
    uEdgeY@[0,0]
    uEdgeD@[0,0]
  }
}*/