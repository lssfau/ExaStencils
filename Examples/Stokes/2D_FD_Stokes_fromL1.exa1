
/// problem specification

Domain \Omega = ( 0, 1 ) \times ( 0, 1 )

Field u \in \Omega = 0.0
Field v \in \Omega = 0.0
Field p \in \Omega = 0.0

Field u \in \partial \Omega = sin ( 2.0 * PI * x ) - cos (       PI * y )
Field v \in \partial \Omega = cos (       PI * x ) - sin ( 2.0 * PI * y )
Field p \in \partial \Omega = Neumann

// TODO: handle virtual fields properly and make @current implicit again
Field f_u \in \Omega = 4.0 * PI**2 * sin ( 2.0 * PI * x ) -       PI**2 * cos (       PI * y ) + 4.0 * PI * cos ( 4.0 * PI * x )
Field f_v \in \Omega =       PI**2 * cos (       PI * x ) - 4.0 * PI**2 * sin ( 2.0 * PI * y ) + 4.0 * PI * cos ( 4.0 * PI * y )
Field f_p \in \Omega = 2.0 * PI    * cos ( 2.0 * PI * x ) - 2.0 * PI    * cos ( 2.0 * PI * y )

Operator Laplace = - \Delta // alt: - ( \partial_{xx} + \partial_{yy} )

Operator dxBwd = \partial_{x}
Operator dyBwd = \partial_{y}
Operator dxFwd = \partial_{x}
Operator dyFwd = \partial_{y}

Equation uEq Laplace * u + dxBwd * p == f_u
Equation vEq Laplace * v + dyBwd * p == f_v
Equation pEq dxFwd   * u + dyFwd * v == f_p

/// configuration of inter-layer transformations

DiscretizationHints { // alt: Discretize, L2Hint(s)
  u on Face_x
  v on Face_y
  p on Cell

  f_u on Face_x
  f_v on Face_y
  f_p on Cell

  Laplace on \Omega order 2
  dxFwd   on \Omega order 1 direction 1
  dyFwd   on \Omega order 1 direction 1
  dxBwd   on \Omega order 1 direction -1
  dyBwd   on \Omega order 1 direction -1

  uEq
  vEq
  pEq

  // parameters
  discr_type = "FiniteDifferences"
}

SolverHints {
  generate solver for u in uEq and v in vEq and p in pEq

  // parameters
  solver_generateDbgOutputs     = true

  solver_targetResReduction     = 1e-12
  solver_absResThreshold        = 1e-12
  solver_maxNumIts              = 30
  
  solver_smoother_jacobiType    = false
  solver_smoother_numPre        = 4
  solver_smoother_numPost       = 4
  solver_smoother_damping       = 0.8
  solver_smoother_coloring      = "red-black" // "9-way" // "red-black"

  solver_cgs                    = "BiCGStab"
  solver_cgs_maxNumIts          = 10000
  solver_cgs_targetResReduction = 1e-12 // 3
  solver_cgs_restart            = true
  solver_cgs_restartAfter       = 256
  solver_cgs_absResThreshold    = 1e-12
}

ApplicationHints {
  // parameters
  l4_genDefaultApplication = true
}
