#######################################
##                                   ##
##            Templates              ##
##                                   ##
#######################################

.module_tree_build:
    variables:
        - PYTHON_PACKAGES: sympy numpy influxdb machinestate
    before_script:
        - JAVA_HOME=$HOME/jdk-11.0.14 ; export JAVA_HOME
        - SBT_HOME=$HOME/sbt ; export SBT_HOME
        - PATH=$JAVA_HOME/bin:$SBT_HOME/bin:$PATH ; export PATH
        - module load python/3.8-anaconda
        - |
            for PACKAGE in $PYTHON_PACKAGES
            do
                python3 -m pip install --user $PACKAGE
            done
    after_script:
        - |
            for PACKAGE in $PYTHON_PACKAGES
            do
                python3 -m pip uninstall $PACKAGE # cleanup
            done

.module_mpi: &module_load_mpi
    - module load openmpi/4.1.1-gcc
    - mpirun --version

.module_likwid: &module_load_likwid
    - module load likwid/5.2.1
    - likwid-features --version

.module_cuda: &module_load_cuda
    - module load module load cuda/11.4
    - nvcc --version
    - nvidia-smi
    - updatedb

.gen_bench_job_template:
    dependencies:
        - build:generator
    stage: bench_gen
    tags:
        - testcluster
    before_script:
        - cd Benchmark
        - !reference [ .module_tree_build, before_script ]
        - 'curl -L --header "PRIVATE-TOKEN: $API_TOKEN" "https://gitlab.rrze.fau.de/api/v4/projects/ExaStencils%2Fpfgen/jobs/artifacts/master/download?job=collect-artifacts" --output artifacts.zip'
        - python3 unzip.py artifacts.zip Platform
    script:
        - |
            for pf in Platform/*.platform
            do
                python3 run_benchmark.py $EXA_PROBLEM_NAME $EXA_PROBLEM_PATH "$EXASLANG_FILES" $KNOWLEDGE_FILE $pf $OUTPUT_PATH --generate
            done
        - chmod +x generate_bench_jobs_for_hosts.sh
        - ./generate_bench_jobs_for_hosts.sh $EXA_PROBLEM_NAME $EXA_PROBLEM_PATH > $EXA_PROBLEM_NAME-pipe.yml
    after_script:
        - !reference [ .module_tree_build, after_script ]
    artifacts:
        paths:
            - Benchmark/$EXA_PROBLEM_NAME-pipe.yml
            - Benchmark/$OUTPUT_PATH/Debug/*
            - Benchmark/$OUTPUT_PATH/generated/*
        expire_in: 1 weeks
    variables:
        NO_SLURM_SUBMIT: 1
        EXA_PROBLEM_NAME: "TO_BE_REPLACED"
        EXA_PROBLEM_PATH: "TO_BE_REPLACED"
        EXASLANG_FILES: "TO_BE_REPLACED"
        KNOWLEDGE_FILE: "TO_BE_REPLACED"
        OUTPUT_PATH: "output"
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID

.pipe_bench_job_template:
    stage: bench_pipe
    trigger:
        include:
            artifact: Benchmark/$EXA_PROBLEM_NAME-pipe.yml
            job: bench_gen:$EXA_PROBLEM_NAME
        strategy: depend
    variables:
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID
        EXA_PROBLEM_NAME: "TO_BE_REPLACED"
        EXA_PROBLEM_PATH: "TO_BE_REPLACED"

.bench_pipe_template:
    tags:
        - testcluster
    variables:
        SLURM_NODELIST: "TO_BE_REPLACED"
        EXA_PROBLEM_NAME: "TO_BE_REPLACED"
        EXA_PROBLEM_PATH: "TO_BE_REPLACED"
        EXASLANG_FILES: "TO_BE_REPLACED"
        KNOWLEDGE_FILE: "TO_BE_REPLACED"
        OUTPUT_PATH: "output"
    before_script:
        - cd Benchmark
        - !reference [ .module_tree_build, before_script ]
        - 'curl -L --header "PRIVATE-TOKEN: $API_TOKEN" "https://gitlab.rrze.fau.de/api/v4/projects/ExaStencils%2Fpfgen/jobs/artifacts/master/download?job=collect-artifacts" --output artifacts.zip'
        - python3 unzip.py artifacts.zip Platform
    script:
        - |
            if [[ ! -f "Platform/$HOSTNAME.platform" ]]; then
                echo "Skipping host without corresponding platform file"
                exit 0
            fi
        - echo $(hostname)
        #- *module_load_mpi
        - *module_load_likwid
        - python3 run_benchmark.py $EXA_PROBLEM_NAME $EXA_PROBLEM_PATH "$EXASLANG_FILES" $KNOWLEDGE_FILE Platform/$HOSTNAME.platform $OUTPUT_PATH --compile --run
    after_script:
        - !reference [ .module_tree_build, after_script ]