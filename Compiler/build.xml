<?xml version="1.0" encoding="UTF-8"?>

<project name="ExaStencils Compiler" default="build" basedir=".">
  <description>ExaStencils Compiler</description>

  <!-- targets -->
  <target name="build" depends="package" description="Build whole project"/>

  <target name="clean" depends="init" description="Remove previous build files">
    <delete dir="${build.dir}" includeemptydirs="true" quiet="true"/>
    <delete file="${compiler.jar}" quiet="true"/>
  </target>

  <target name="init">
    <property environment="env"/>

    <!-- check for required tools -->
    <fail message="Missing SCALA_HOME variable in OS environment">
      <condition><isset property="${env.SCALA_HOME}"/></condition>
    </fail>
    <fail message="Missing JAVA_HOME variable in OS environment">
      <condition><isset property="${env.JAVA_HOME}"/></condition>
    </fail>

    <!-- variables for paths and files -->
    <property name="src.dir" location="${basedir}/src"/>
    <property name="macros-src.dir" location="../CompilerMacros/CompilerMacros/src"/> <!-- source for macros -->
    <property name="lib.dir" location="${basedir}/lib"/>
    <property name="build.dir" location="${basedir}/build"/>
    <property name="build-classes.dir" location="${build.dir}/classes"/>
    <property name="java.dir" location="${env.JAVA_HOME}"/>
    <property name="scala.dir" location="${env.SCALA_HOME}"/>
    <property name="compiler.jar" location="${basedir}/compiler.jar"/> <!-- result file -->
    <property name="scala-library.jar" location="${scala.dir}/lib/scala-library.jar"/>
    <property name="scala-reflect.jar" location="${scala.dir}/lib/scala-reflect.jar"/>
    <property name="scala-compiler.jar" location="${scala.dir}/lib/scala-compiler.jar"/>

    <path id="compiler.classpath" cache="true">
      <pathelement location="${scala-library.jar}"/>
      <pathelement location="${scala-reflect.jar}"/>
      <pathelement location="${build-classes.dir}"/> <!-- used during recompilation -->
      <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <path id="scala.classpath" cache="true">
      <pathelement location="${scala-compiler.jar}"/>
      <pathelement location="${scala-reflect.jar}"/>
      <pathelement location="${scala-library.jar}"/>
    </path>

    <!-- load scala's ant tasks -->
    <taskdef resource="scala/tools/ant/antlib.xml" classpathref="scala.classpath"/>

    <!-- print where this project will get scala and java from -->
    <echo message="Init project"/>
    <echo message=" with scala.dir = ${scala.dir}"/>
    <echo message=" with java.dir = ${java.dir}"/>
  </target>

  <target name="compileMacros" depends="init">
    <mkdir dir="${build-classes.dir}"/>
    <scalac
      destdir="${build-classes.dir}"
      classpathref="compiler.classpath">
      <include name="**/*.scala"/>
      <src><pathelement location="${macros-src.dir}"/></src>
    </scalac>
  </target>

  <target name="compile" depends="compileMacros">
    <scalac
      destdir="${build-classes.dir}"
      classpathref="compiler.classpath">
      <include name="**/*.scala"/>
      <src><pathelement location="${src.dir}"/></src>
    </scalac>
  </target>

  <target name="package" depends="compile">
    <jar destfile="${compiler.jar}">
      <fileset dir="${build-classes.dir}"/>
      <!-- include all jars into generated one (to allow running it without any other files present) -->
      <zipgroupfileset dir="${lib.dir}" includes="*.jar"/>
      <!-- dont't forget scala libraries -->
      <zipgroupfileset file="${scala-library.jar}"/>
      <zipgroupfileset file="${scala-reflect.jar}"/>
    </jar>
  </target>
</project>
