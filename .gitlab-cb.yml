variables:
    GIT_STRATEGY: fetch
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - setup
    - pipeline
    - cleanup

include:
    - 'Benchmark/.benchmark_templates.yml'
    - 'Benchmark/lock.yml'

compiler_build:
    stage: setup
    tags:
        - testcluster
    script:
        - echo $CI_PIPELINE_ID
        - echo $PARENT_PIPELINE_ID
        - !reference [ .module_tree_build, before_script ]
        - sbt sbtVersion
        - java -version
        - sbt assembly
        - cp Compiler/Compiler.jar $WORK/ci-pipeline-$CI_PIPELINE_ID
    variables:
        NO_SLURM_SUBMIT: 1
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID

pipeline_gen:
    stage: pipeline
    tags:
        - testcluster
    script:
        - echo $CI_PIPELINE_ID
        - echo $PARENT_PIPELINE_ID
        - chmod +x Benchmark/generate_cb_yml_stages.sh
        - ./Benchmark/generate_cb_yml_stages.sh > pipeline.yml
    artifacts:
        when: always
        paths:
            - pipeline.yml
        expire_in: 1 weeks
    variables:
        NO_SLURM_SUBMIT: 1
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID

pipeline_exec:
    stage: pipeline
    trigger:
        include:
            - artifact: pipeline.yml
              job: pipeline_gen
        strategy: depend
    variables:
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    needs:
        - pipeline_gen

compiler_delete:
    stage: cleanup
    tags:
        - testcluster
    script:
        - echo $CI_PIPELINE_ID
        - echo $PARENT_PIPELINE_ID
        - rm -rf $WORK/ci-pipeline-$CI_PIPELINE_ID
    variables:
        NO_SLURM_SUBMIT: 1
        PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    when: always
