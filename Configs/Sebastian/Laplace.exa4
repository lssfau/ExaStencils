Domain global< [ 0, 0, 0 ] to [ 1, 1, 1 ] >

Function NormError@finest ( ) : Real {
	communicate Solution@current
	Variable err : Real = 0
	loop over Solution@current where x > 0 && y > 0 && z > 0 with reduction( + : err ) {
		Variable curErr : Real = Solution[active]@current - ( vf_nodePosition_x@current * vf_nodePosition_x@current - 0.5 * vf_nodePosition_y@current * vf_nodePosition_y@current - 0.5 * vf_nodePosition_z@current * vf_nodePosition_z@current )
		err += curErr * curErr
	}
	return sqrt ( err )
}

Function Application ( ) : Unit {
	initGlobals ( )
	initDomain ( )
	initFieldsWithZero ( )
	InitFields ( )
	apply bc to Solution[0]@finest
	apply bc to Solution[1]@finest
	//apply bc to VecP@coarsest
	Solve ( )
	destroyGlobals ( )
}
