
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Layout mat1x1Layout< Matrix<Double, 1, 1>, Node >@all {
	ghostLayers = [0, 0]
}
Layout mat3x1Layout< Matrix<Double, 3, 1>, Node >@all {
	ghostLayers = [0, 0]
}

Field mat1x1Field< global, mat1x1Layout, mat1x1 >[2]@all
Field mat3x1Field< global, mat3x1Layout, mat3x1 >[2]@all



Globals {
	Var mat1x1 : Matrix<Double, 1, 1> = {{1}}
	Var mat3x1 : Matrix<Double, 3, 1> = {{1},{2},{3}}

}

Function checkMat1x1Field@(coarsest to finest) {
	loop over mat1x1Field starting [-1,-1] ending [-1,-1] where ( ( i0 == 0 ) || ( i1 == 0 ) ){
       if(abs(mat1x1Field - 1) > 0.0005) {
            print('boundary value differs from expected value')
            return
       }
	if(abs(mat1x1Field<1> - 1) > 0.0005) {
            print('boundary value differs from expected value')
            return
       }
	}
}

Function checkMat3x1Field@(coarsest to finest) {
	loop over mat3x1Field starting [-1,-1] ending [-1,-1] where ( ( i0 == 0 ) || ( i1 == 0 ) ){
	
       if(abs(fnorm(mat3x1Field) - 3.7416) > 0.0005) {
            print('boundary value differs from expected value')
            return
       }
	if(abs(fnorm(mat3x1Field<1>) - 3.7416) > 0.0005) {
            print('boundary value differs from expected value')
            return
       }
	}
}
/// main function

Function Application ( ) : Unit {
    initGlobals (  )
    initDomain (  )
    initFieldsWithZero (  )
    apply bc to mat1x1Field@1
    apply bc to mat1x1Field<1>@1
    checkMat1x1Field@1 ()
    print('stage 0 done')

    apply bc to mat3x1Field@3
    apply bc to mat3x1Field<1>@3
    checkMat3x1Field@3 ()
    print('stage 1 done')
	destroyGlobals (  )
}