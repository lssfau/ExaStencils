#include "User/User.h"

int main (int argc, char** argv) {
	__matrix_double_4_4_t t1 {12.0, 2.0, 0.0, 0.0, 4.0, 3.0, 0.0, 0.0, 0.0, 0.0, 1.0, 3.0, 0.0, 0.0, 5.0, 2.0};
	__matrix_double_4_4_t t1_inverse {((((t1[4]/t1[0])*(t1[1]/(t1[5]-(t1[1]*(t1[4]/t1[0])))))+1.0)/(t1[0]-((t1[4]-t1[4])*(t1[1]/(t1[5]-(t1[1]*(t1[4]/t1[0]))))))), (-((t1[1]/(t1[5]-(t1[1]*(t1[4]/t1[0]))))/(t1[0]-((t1[4]-t1[4])*(t1[1]/(t1[5]-(t1[1]*(t1[4]/t1[0])))))))), t1[2], t1[3], (-((t1[4]/t1[0])/(t1[5]-(t1[1]*(t1[4]/t1[0]))))), (1.0/(t1[5]-(t1[1]*(t1[4]/t1[0])))), t1[6], t1[7], t1[8], t1[9], ((((t1[14]/t1[10])*(t1[11]/(t1[15]-(t1[11]*(t1[14]/t1[10])))))+1.0)/(t1[10]-((t1[14]-t1[14])*(t1[11]/(t1[15]-(t1[11]*(t1[14]/t1[10]))))))), (-((t1[11]/(t1[15]-(t1[11]*(t1[14]/t1[10]))))/(t1[10]-((t1[14]-t1[14])*(t1[11]/(t1[15]-(t1[11]*(t1[14]/t1[10])))))))), t1[12], t1[13], (-((t1[14]/t1[10])/(t1[15]-(t1[11]*(t1[14]/t1[10]))))), (1.0/(t1[15]-(t1[11]*(t1[14]/t1[10]))))};
	__matrix_double_8_8_t t2 {12.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0, 5.0};
	__matrix_double_8_8_t t2_inverse {((((t2[8]/t2[0])*(t2[1]/(t2[9]-(t2[1]*(t2[8]/t2[0])))))+1.0)/(t2[0]-((t2[8]-t2[8])*(t2[1]/(t2[9]-(t2[1]*(t2[8]/t2[0]))))))), (-((t2[1]/(t2[9]-(t2[1]*(t2[8]/t2[0]))))/(t2[0]-((t2[8]-t2[8])*(t2[1]/(t2[9]-(t2[1]*(t2[8]/t2[0])))))))), t2[2], t2[3], t2[4], t2[5], t2[6], t2[7], (-((t2[8]/t2[0])/(t2[9]-(t2[1]*(t2[8]/t2[0]))))), (1.0/(t2[9]-(t2[1]*(t2[8]/t2[0])))), t2[10], t2[11], t2[12], t2[13], t2[14], t2[15], t2[16], t2[17], ((((t2[26]/t2[18])*(t2[19]/(t2[27]-(t2[19]*(t2[26]/t2[18])))))+1.0)/(t2[18]-((t2[26]-t2[26])*(t2[19]/(t2[27]-(t2[19]*(t2[26]/t2[18]))))))), (-((t2[19]/(t2[27]-(t2[19]*(t2[26]/t2[18]))))/(t2[18]-((t2[26]-t2[26])*(t2[19]/(t2[27]-(t2[19]*(t2[26]/t2[18])))))))), t2[20], t2[21], t2[22], t2[23], t2[24], t2[25], (-((t2[26]/t2[18])/(t2[27]-(t2[19]*(t2[26]/t2[18]))))), (1.0/(t2[27]-(t2[19]*(t2[26]/t2[18])))), t2[28], t2[29], t2[30], t2[31], t2[32], t2[33], t2[34], t2[35], ((((t2[44]/t2[36])*(t2[37]/(t2[45]-(t2[37]*(t2[44]/t2[36])))))+1.0)/(t2[36]-((t2[44]-t2[44])*(t2[37]/(t2[45]-(t2[37]*(t2[44]/t2[36]))))))), (-((t2[37]/(t2[45]-(t2[37]*(t2[44]/t2[36]))))/(t2[36]-((t2[44]-t2[44])*(t2[37]/(t2[45]-(t2[37]*(t2[44]/t2[36])))))))), t2[38], t2[39], t2[40], t2[41], t2[42], t2[43], (-((t2[44]/t2[36])/(t2[45]-(t2[37]*(t2[44]/t2[36]))))), (1.0/(t2[45]-(t2[37]*(t2[44]/t2[36])))), t2[46], t2[47], t2[48], t2[49], t2[50], t2[51], t2[52], t2[53], ((((t2[62]/t2[54])*(t2[55]/(t2[63]-(t2[55]*(t2[62]/t2[54])))))+1.0)/(t2[54]-((t2[62]-t2[62])*(t2[55]/(t2[63]-(t2[55]*(t2[62]/t2[54]))))))), (-((t2[55]/(t2[63]-(t2[55]*(t2[62]/t2[54]))))/(t2[54]-((t2[62]-t2[62])*(t2[55]/(t2[63]-(t2[55]*(t2[62]/t2[54])))))))), t2[56], t2[57], t2[58], t2[59], t2[60], t2[61], (-((t2[62]/t2[54])/(t2[63]-(t2[55]*(t2[62]/t2[54]))))), (1.0/(t2[63]-(t2[55]*(t2[62]/t2[54]))))};
	return 0;
}
