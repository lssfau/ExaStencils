
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Globals {
}

/// main function

Function Application ( ) : Unit {

	Var nopiv : Matrix<Real, 5, 5> = {{576.0, -144, 0, 0, 12}, {-144, 576, 0, 0, -12}, {0, 0, 576, -144, 12 }, {0, 0, -144, 576, -12}, {-12, 12, -12, 12, 0	}}
	Var nopiv_i : Matrix<Real, 5 ,5> 
	//nopiv_i = inverse({{576.0, -144, 0, 0, 12}, {-144, 576, 0, 0, -12}, {0, 0, 576, -144, 12 }, {0, 0, -144, 576, -12}, {-12, 12, -12, 12, 0	}})
	nopiv_i = inverse(nopiv,"shape=gaussJordan")
	nopiv_i = inverse(nopiv,"shape=cofactors")		
	nopiv_i = inverse(nopiv)
		
Var nopiv_sol : Matrix<Real, 5, 5> = {{ 0.0015046296296296296296,	0.00081018518518518518513,	-0.00034722222222222222218,	0.00034722222222222222218,	-0.020833333333333333332},
{	0.00081018518518518518514,	0.0015046296296296296296,	0.00034722222222222222218,	-0.00034722222222222222218,	0.020833333333333333332},
{	-0.00034722222222222222218,	0.00034722222222222222218,	0.0015046296296296296296,	0.00081018518518518518513,	-0.020833333333333333332},
{	0.00034722222222222222218,	-0.00034722222222222222218,	0.00081018518518518518514,	0.0015046296296296296296,	0.020833333333333333332},
{	0.020833333333333333332,	-0.020833333333333333332,	0.020833333333333333332,	-0.020833333333333333332,	1.25}}
Var i_1 : Int
	repeat 5 times count i_1 {
		Var j : Int
		repeat 5 times count j {
			print(getElement(nopiv_i, i_1, j))
			print(getElement(nopiv_sol, i_1, j))
		}
	}	
	compare(nopiv_i, nopiv_sol, 0.000001)
	print('no piv done')
/*
	Var entry0 : Double = 2.0
	Var piv : Matrix<Real, 5, 5> = {{1.0, entry0, 1, 3,3}, {4, 2, 1, 2,1}, {4, 1, 3, 2, 7.0}, {1, 1, 2, 3,2}, {1, 1, 2, 3,9}}
	Var piv_i : Matrix<Real, 5 ,5> 
	piv_i = inverse(piv)
	Var piv_sol : Matrix<Real, 5, 5> = {{-0.7,	0.6,	-0.3,	0.12857142857142857144,	0.37142857142857142856},
			{	2	,-1,	1,	-0.8571428571428571429,	-1.1428571428571428571},
{	1,	-1,	1,	0,	-1},
{	-1.1,	0.8,	-0.9,	0.67142857142857142859,	0.82857142857142857141},
{	0,	0,	0,	-0.14285714285714285714,	0.14285714285714285714}}

	Var i_2 : Int
	repeat 5 times count i_2 {
		Var j : Int
		repeat 5 times count j {
			print(getElement(piv_i, i_2, j))
			print(getElement(piv_sol, i_2, j))
		}
	}
	compare(piv_i, piv_sol, 0.000001)
	print('piv 1 done')

	// nan nan ...?
	Var piv_2 : Matrix<Real, 5, 5> = {{3.0, 2, 1, 0,1}, {4, 2, 1, 2,1}, {4, 1, 3, 2,1}, {1, 1, 2, 3,2}, {1, 1, 2, 3,9}}
	//piv_2 = 1
	Var piv_2_i : Matrix<Real, 5 ,5> 
	piv_2_i = inverse(piv_2)
	Var piv_2_sol : Matrix<Real, 5, 5> = {{-0.2413793103448275862,	0.31034482758620689654,	0.20689655172413793104,	-0.40394088669950738916,	0.059113300492610837438},
{	0.68965517241379310344,	-0.17241379310344827586,	-0.44827586206896551724,	0.54187192118226600985,	-0.12807881773399014778},
{0.34482758620689655171,	-0.58620689655172413792,	0.27586206896551724136,	0.27093596059113300493,	-0.064039408866995073891},
{-0.37931034482758620689,	0.34482758620689655172,	-0.10344827586206896551,	0.20197044334975369457,	-0.029556650246305418717},
{	0,	0,	0,	-0.14285714285714285714,	0.14285714285714285714}}
Var i_3 : Int
repeat 5 times count i_3 {
		Var j : Int
		repeat 5 times count j {
			print(getElement(piv_2_i, i_3, j))
			print(getElement(piv_2_sol, i_3, j))
				
		}
	}	
	compare(piv_2_i, piv_2_sol, 0.000001)


	print('piv 2 done')
*/
/*
	Var entry1 : Real = 0.0
	Var entry2 : Real = 0.0
	Var piv_3 : Matrix<Real, 3, 3> = {{0, 1, 3}, {entry1,0,1}, {0,entry2,1}}
	Var piv_3_i : Matrix<Real, 3, 3>
		piv_3_i = inverse(piv_3)
	print('piv 3 done')
*/
}

