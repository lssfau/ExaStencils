// domain declarations

Domain global< [0.0, 0.0, 0.0] to [0.1, 0.1, 0.1] >

// field declarations

Field u@1 with Real on Face_x of global = 0.0

Field u@1 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@1@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@1@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@1@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@1@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@1@[0, 0, 0] ) ) )

Field u@2 with Real on Face_x of global = 0.0

Field u@2 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@2@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@2@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@2@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@2@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@2@[0, 0, 0] ) ) )

Field u@3 with Real on Face_x of global = 0.0

Field u@3 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@3@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@3@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@3@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@3@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@3@[0, 0, 0] ) ) )

Field u@4 with Real on Face_x of global = 0.0

Field u@4 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@4@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@4@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@4@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@4@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@4@[0, 0, 0] ) ) )

Field u@5 with Real on Face_x of global = 0.0

Field u@5 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@5@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@5@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@5@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@5@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@5@[0, 0, 0] ) ) )

Field u@6 with Real on Face_x of global = 0.0

Field u@6 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@6@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@6@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@6@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@6@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@6@[0, 0, 0] ) ) )

Field v@1 with Real on Face_y of global = 0.0

Field v@1 on boundary = 0.0

Field v@2 with Real on Face_y of global = 0.0

Field v@2 on boundary = 0.0

Field v@3 with Real on Face_y of global = 0.0

Field v@3 on boundary = 0.0

Field v@4 with Real on Face_y of global = 0.0

Field v@4 on boundary = 0.0

Field v@5 with Real on Face_y of global = 0.0

Field v@5 on boundary = 0.0

Field v@6 with Real on Face_y of global = 0.0

Field v@6 on boundary = 0.0

Field w@1 with Real on Face_z of global = 0.0

Field w@1 on boundary = 0.0

Field w@2 with Real on Face_z of global = 0.0

Field w@2 on boundary = 0.0

Field w@3 with Real on Face_z of global = 0.0

Field w@3 on boundary = 0.0

Field w@4 with Real on Face_z of global = 0.0

Field w@4 on boundary = 0.0

Field w@5 with Real on Face_z of global = 0.0

Field w@5 on boundary = 0.0

Field w@6 with Real on Face_z of global = 0.0

Field w@6 on boundary = 0.0

Field p@1 with Real on Cell of global = 0.0

Field p@1 on boundary = Neumann(1)

Field p@2 with Real on Cell of global = 0.0

Field p@2 on boundary = Neumann(1)

Field p@3 with Real on Cell of global = 0.0

Field p@3 on boundary = Neumann(1)

Field p@4 with Real on Cell of global = 0.0

Field p@4 on boundary = Neumann(1)

Field p@5 with Real on Cell of global = 0.0

Field p@5 on boundary = Neumann(1)

Field p@6 with Real on Cell of global = 0.0

Field p@6 on boundary = Neumann(1)

Field uOld@1 with Real on Face_x of global = 0.0

Field uOld@1 on boundary = None

Field uOld@2 with Real on Face_x of global = 0.0

Field uOld@2 on boundary = None

Field uOld@3 with Real on Face_x of global = 0.0

Field uOld@3 on boundary = None

Field uOld@4 with Real on Face_x of global = 0.0

Field uOld@4 on boundary = None

Field uOld@5 with Real on Face_x of global = 0.0

Field uOld@5 on boundary = None

Field uOld@6 with Real on Face_x of global = 0.0

Field uOld@6 on boundary = None

Field vOld@1 with Real on Face_y of global = 0.0

Field vOld@1 on boundary = None

Field vOld@2 with Real on Face_y of global = 0.0

Field vOld@2 on boundary = None

Field vOld@3 with Real on Face_y of global = 0.0

Field vOld@3 on boundary = None

Field vOld@4 with Real on Face_y of global = 0.0

Field vOld@4 on boundary = None

Field vOld@5 with Real on Face_y of global = 0.0

Field vOld@5 on boundary = None

Field vOld@6 with Real on Face_y of global = 0.0

Field vOld@6 on boundary = None

Field wOld@1 with Real on Face_z of global = 0.0

Field wOld@1 on boundary = None

Field wOld@2 with Real on Face_z of global = 0.0

Field wOld@2 on boundary = None

Field wOld@3 with Real on Face_z of global = 0.0

Field wOld@3 on boundary = None

Field wOld@4 with Real on Face_z of global = 0.0

Field wOld@4 on boundary = None

Field wOld@5 with Real on Face_z of global = 0.0

Field wOld@5 on boundary = None

Field wOld@6 with Real on Face_z of global = 0.0

Field wOld@6 on boundary = None

Field pOld@1 with Real on Cell of global = 0.0

Field pOld@1 on boundary = None

Field pOld@2 with Real on Cell of global = 0.0

Field pOld@2 on boundary = None

Field pOld@3 with Real on Cell of global = 0.0

Field pOld@3 on boundary = None

Field pOld@4 with Real on Cell of global = 0.0

Field pOld@4 on boundary = None

Field pOld@5 with Real on Cell of global = 0.0

Field pOld@5 on boundary = None

Field pOld@6 with Real on Cell of global = 0.0

Field pOld@6 on boundary = None

Field gen_rhs_u@1 with Real on Face_x of global = 0.0

Field gen_rhs_u@1 on boundary = None

Field gen_residual_u@1 with Real on Face_x of global = 0.0

Field gen_residual_u@1 on boundary = 0.0

Field gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_error_u@1 on boundary = 0.0

Field gen_approx_u@1 with Real on Face_x of global = 0.0

Field gen_approx_u@1 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@1@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@1@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@1@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@1@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@1@[0, 0, 0] ) ) )

Field gen_rhs_u@2 with Real on Face_x of global = 0.0

Field gen_rhs_u@2 on boundary = None

Field gen_residual_u@2 with Real on Face_x of global = 0.0

Field gen_residual_u@2 on boundary = 0.0

Field gen_error_u@2 with Real on Face_x of global = 0.0

Field gen_error_u@2 on boundary = 0.0

Field gen_approx_u@2 with Real on Face_x of global = 0.0

Field gen_approx_u@2 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@2@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@2@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@2@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@2@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@2@[0, 0, 0] ) ) )

Field gen_rhs_u@3 with Real on Face_x of global = 0.0

Field gen_rhs_u@3 on boundary = None

Field gen_residual_u@3 with Real on Face_x of global = 0.0

Field gen_residual_u@3 on boundary = 0.0

Field gen_error_u@3 with Real on Face_x of global = 0.0

Field gen_error_u@3 on boundary = 0.0

Field gen_approx_u@3 with Real on Face_x of global = 0.0

Field gen_approx_u@3 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@3@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@3@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@3@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@3@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@3@[0, 0, 0] ) ) )

Field gen_rhs_u@4 with Real on Face_x of global = 0.0

Field gen_rhs_u@4 on boundary = None

Field gen_residual_u@4 with Real on Face_x of global = 0.0

Field gen_residual_u@4 on boundary = 0.0

Field gen_error_u@4 with Real on Face_x of global = 0.0

Field gen_error_u@4 on boundary = 0.0

Field gen_approx_u@4 with Real on Face_x of global = 0.0

Field gen_approx_u@4 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@4@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@4@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@4@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@4@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@4@[0, 0, 0] ) ) )

Field gen_rhs_u@5 with Real on Face_x of global = 0.0

Field gen_rhs_u@5 on boundary = None

Field gen_residual_u@5 with Real on Face_x of global = 0.0

Field gen_residual_u@5 on boundary = 0.0

Field gen_error_u@5 with Real on Face_x of global = 0.0

Field gen_error_u@5 on boundary = 0.0

Field gen_approx_u@5 with Real on Face_x of global = 0.0

Field gen_approx_u@5 on boundary = ( topVel * ( ( ( ( ( 4 * ( ( 10 * vf_boundaryPosition_0@5@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_0@5@[0, 0, 0] ) ) ) ) * 4 ) * ( ( 10 * vf_boundaryPosition_1@5@[0, 0, 0] ) * ( 1.0 - ( 10 * vf_boundaryPosition_1@5@[0, 0, 0] ) ) ) ) * 1 ) * ( 10 * vf_boundaryPosition_2@5@[0, 0, 0] ) ) )

Field gen_residual_u@6 with Real on Face_x of global = 0.0

Field gen_residual_u@6 on boundary = 0.0

Field gen_rhs_v@1 with Real on Face_y of global = 0.0

Field gen_rhs_v@1 on boundary = None

Field gen_residual_v@1 with Real on Face_y of global = 0.0

Field gen_residual_v@1 on boundary = 0.0

Field gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_error_v@1 on boundary = 0.0

Field gen_approx_v@1 with Real on Face_y of global = 0.0

Field gen_approx_v@1 on boundary = 0.0

Field gen_rhs_v@2 with Real on Face_y of global = 0.0

Field gen_rhs_v@2 on boundary = None

Field gen_residual_v@2 with Real on Face_y of global = 0.0

Field gen_residual_v@2 on boundary = 0.0

Field gen_error_v@2 with Real on Face_y of global = 0.0

Field gen_error_v@2 on boundary = 0.0

Field gen_approx_v@2 with Real on Face_y of global = 0.0

Field gen_approx_v@2 on boundary = 0.0

Field gen_rhs_v@3 with Real on Face_y of global = 0.0

Field gen_rhs_v@3 on boundary = None

Field gen_residual_v@3 with Real on Face_y of global = 0.0

Field gen_residual_v@3 on boundary = 0.0

Field gen_error_v@3 with Real on Face_y of global = 0.0

Field gen_error_v@3 on boundary = 0.0

Field gen_approx_v@3 with Real on Face_y of global = 0.0

Field gen_approx_v@3 on boundary = 0.0

Field gen_rhs_v@4 with Real on Face_y of global = 0.0

Field gen_rhs_v@4 on boundary = None

Field gen_residual_v@4 with Real on Face_y of global = 0.0

Field gen_residual_v@4 on boundary = 0.0

Field gen_error_v@4 with Real on Face_y of global = 0.0

Field gen_error_v@4 on boundary = 0.0

Field gen_approx_v@4 with Real on Face_y of global = 0.0

Field gen_approx_v@4 on boundary = 0.0

Field gen_rhs_v@5 with Real on Face_y of global = 0.0

Field gen_rhs_v@5 on boundary = None

Field gen_residual_v@5 with Real on Face_y of global = 0.0

Field gen_residual_v@5 on boundary = 0.0

Field gen_error_v@5 with Real on Face_y of global = 0.0

Field gen_error_v@5 on boundary = 0.0

Field gen_approx_v@5 with Real on Face_y of global = 0.0

Field gen_approx_v@5 on boundary = 0.0

Field gen_residual_v@6 with Real on Face_y of global = 0.0

Field gen_residual_v@6 on boundary = 0.0

Field gen_rhs_w@1 with Real on Face_z of global = 0.0

Field gen_rhs_w@1 on boundary = None

Field gen_residual_w@1 with Real on Face_z of global = 0.0

Field gen_residual_w@1 on boundary = 0.0

Field gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_error_w@1 on boundary = 0.0

Field gen_approx_w@1 with Real on Face_z of global = 0.0

Field gen_approx_w@1 on boundary = 0.0

Field gen_rhs_w@2 with Real on Face_z of global = 0.0

Field gen_rhs_w@2 on boundary = None

Field gen_residual_w@2 with Real on Face_z of global = 0.0

Field gen_residual_w@2 on boundary = 0.0

Field gen_error_w@2 with Real on Face_z of global = 0.0

Field gen_error_w@2 on boundary = 0.0

Field gen_approx_w@2 with Real on Face_z of global = 0.0

Field gen_approx_w@2 on boundary = 0.0

Field gen_rhs_w@3 with Real on Face_z of global = 0.0

Field gen_rhs_w@3 on boundary = None

Field gen_residual_w@3 with Real on Face_z of global = 0.0

Field gen_residual_w@3 on boundary = 0.0

Field gen_error_w@3 with Real on Face_z of global = 0.0

Field gen_error_w@3 on boundary = 0.0

Field gen_approx_w@3 with Real on Face_z of global = 0.0

Field gen_approx_w@3 on boundary = 0.0

Field gen_rhs_w@4 with Real on Face_z of global = 0.0

Field gen_rhs_w@4 on boundary = None

Field gen_residual_w@4 with Real on Face_z of global = 0.0

Field gen_residual_w@4 on boundary = 0.0

Field gen_error_w@4 with Real on Face_z of global = 0.0

Field gen_error_w@4 on boundary = 0.0

Field gen_approx_w@4 with Real on Face_z of global = 0.0

Field gen_approx_w@4 on boundary = 0.0

Field gen_rhs_w@5 with Real on Face_z of global = 0.0

Field gen_rhs_w@5 on boundary = None

Field gen_residual_w@5 with Real on Face_z of global = 0.0

Field gen_residual_w@5 on boundary = 0.0

Field gen_error_w@5 with Real on Face_z of global = 0.0

Field gen_error_w@5 on boundary = 0.0

Field gen_approx_w@5 with Real on Face_z of global = 0.0

Field gen_approx_w@5 on boundary = 0.0

Field gen_residual_w@6 with Real on Face_z of global = 0.0

Field gen_residual_w@6 on boundary = 0.0

Field gen_rhs_p@1 with Real on Cell of global = 0.0

Field gen_rhs_p@1 on boundary = None

Field gen_residual_p@1 with Real on Cell of global = 0.0

Field gen_residual_p@1 on boundary = Neumann(1)

Field gen_error_p@1 with Real on Cell of global = 0.0

Field gen_error_p@1 on boundary = Neumann(1)

Field gen_approx_p@1 with Real on Cell of global = 0.0

Field gen_approx_p@1 on boundary = Neumann(1)

Field gen_rhs_p@2 with Real on Cell of global = 0.0

Field gen_rhs_p@2 on boundary = None

Field gen_residual_p@2 with Real on Cell of global = 0.0

Field gen_residual_p@2 on boundary = Neumann(1)

Field gen_error_p@2 with Real on Cell of global = 0.0

Field gen_error_p@2 on boundary = Neumann(1)

Field gen_approx_p@2 with Real on Cell of global = 0.0

Field gen_approx_p@2 on boundary = Neumann(1)

Field gen_rhs_p@3 with Real on Cell of global = 0.0

Field gen_rhs_p@3 on boundary = None

Field gen_residual_p@3 with Real on Cell of global = 0.0

Field gen_residual_p@3 on boundary = Neumann(1)

Field gen_error_p@3 with Real on Cell of global = 0.0

Field gen_error_p@3 on boundary = Neumann(1)

Field gen_approx_p@3 with Real on Cell of global = 0.0

Field gen_approx_p@3 on boundary = Neumann(1)

Field gen_rhs_p@4 with Real on Cell of global = 0.0

Field gen_rhs_p@4 on boundary = None

Field gen_residual_p@4 with Real on Cell of global = 0.0

Field gen_residual_p@4 on boundary = Neumann(1)

Field gen_error_p@4 with Real on Cell of global = 0.0

Field gen_error_p@4 on boundary = Neumann(1)

Field gen_approx_p@4 with Real on Cell of global = 0.0

Field gen_approx_p@4 on boundary = Neumann(1)

Field gen_rhs_p@5 with Real on Cell of global = 0.0

Field gen_rhs_p@5 on boundary = None

Field gen_residual_p@5 with Real on Cell of global = 0.0

Field gen_residual_p@5 on boundary = Neumann(1)

Field gen_error_p@5 with Real on Cell of global = 0.0

Field gen_error_p@5 on boundary = Neumann(1)

Field gen_approx_p@5 with Real on Cell of global = 0.0

Field gen_approx_p@5 on boundary = Neumann(1)

Field gen_residual_p@6 with Real on Cell of global = 0.0

Field gen_residual_p@6 on boundary = Neumann(1)

Field gen_v_gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_v_gen_error_u@1 on boundary = None

Field gen_p_gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_p_gen_error_u@1 on boundary = 0.0

Field gen_s_gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_s_gen_error_u@1 on boundary = 0.0

Field gen_t_gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_t_gen_error_u@1 on boundary = None

Field gen_resHat_gen_error_u@1 with Real on Face_x of global = 0.0

Field gen_resHat_gen_error_u@1 on boundary = None

Field gen_v_gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_v_gen_error_v@1 on boundary = None

Field gen_p_gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_p_gen_error_v@1 on boundary = 0.0

Field gen_s_gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_s_gen_error_v@1 on boundary = 0.0

Field gen_t_gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_t_gen_error_v@1 on boundary = None

Field gen_resHat_gen_error_v@1 with Real on Face_y of global = 0.0

Field gen_resHat_gen_error_v@1 on boundary = None

Field gen_v_gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_v_gen_error_w@1 on boundary = None

Field gen_p_gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_p_gen_error_w@1 on boundary = 0.0

Field gen_s_gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_s_gen_error_w@1 on boundary = 0.0

Field gen_t_gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_t_gen_error_w@1 on boundary = None

Field gen_resHat_gen_error_w@1 with Real on Face_z of global = 0.0

Field gen_resHat_gen_error_w@1 on boundary = None

Field gen_v_gen_error_p@1 with Real on Cell of global = 0.0

Field gen_v_gen_error_p@1 on boundary = None

Field gen_p_gen_error_p@1 with Real on Cell of global = 0.0

Field gen_p_gen_error_p@1 on boundary = Neumann(1)

Field gen_s_gen_error_p@1 with Real on Cell of global = 0.0

Field gen_s_gen_error_p@1 on boundary = Neumann(1)

Field gen_t_gen_error_p@1 with Real on Cell of global = 0.0

Field gen_t_gen_error_p@1 on boundary = None

Field gen_resHat_gen_error_p@1 with Real on Cell of global = 0.0

Field gen_resHat_gen_error_p@1 on boundary = None

// field combinations
// stencil declarations

Operator gen_restrictionForRes_u@1 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@1 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@1 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@1 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@1 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@1 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@1 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

Operator gen_restrictionForRes_u@2 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@2 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@2 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@2 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@2 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@2 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@2 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

Operator gen_restrictionForRes_u@3 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@3 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@3 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@3 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@3 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@3 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@3 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

Operator gen_restrictionForRes_u@4 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@4 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@4 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@4 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@4 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@4 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@4 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

Operator gen_restrictionForRes_u@5 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@5 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@5 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@5 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@5 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@5 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@5 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

Operator gen_restrictionForRes_u@6 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_u@6 from Stencil {
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) - 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_u@6 from Stencil {
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 + 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_v@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_v@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) - 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_v@6 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 + 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_w@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.5
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.5
}

Operator gen_restrictionForSol_w@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) - 1.0 )] with 0.0625
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.0625
}

Operator gen_prolongationForSol_w@6 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 + 1.0 ) )] with 0.5
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 0.5
}

Operator gen_restrictionForRes_p@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 1
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 1
}

Operator gen_restrictionForSol_p@6 from Stencil {
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( 2.0 * i0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( 2.0 * i1 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( 2.0 * i2 )] with 0.125
	[i0, i1, i2] from [( ( 2.0 * i0 ) + 1.0 ), ( ( 2.0 * i1 ) + 1.0 ), ( ( 2.0 * i2 ) + 1.0 )] with 0.125
}

Operator gen_prolongationForSol_p@6 from Stencil {
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * i0 ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * i1 ), ( 0.5 * ( i2 - 1.0 ) )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * i2 )] with 1
	[i0, i1, i2] from [( 0.5 * ( i0 - 1.0 ) ), ( 0.5 * ( i1 - 1.0 ) ), ( 0.5 * ( i2 - 1.0 ) )] with 1
}

// stencil field declarations

// equations declarations

Equation pEquation@1 {
	( ( ( ( ( ( ( 0.05 * 0.05 ) * u@1@[1, 0, 0] ) - ( ( 0.05 * 0.05 ) * u@1@[0, 0, 0] ) ) + ( ( 0.05 * 0.05 ) * v@1@[0, 1, 0] ) ) - ( ( 0.05 * 0.05 ) * v@1@[0, 0, 0] ) ) + ( ( 0.05 * 0.05 ) * w@1@[0, 0, 1] ) ) - ( ( 0.05 * 0.05 ) * w@1@[0, 0, 0] ) ) == 0.0
}

Equation pEquation@2 {
	( ( ( ( ( ( ( 0.025 * 0.025 ) * u@2@[1, 0, 0] ) - ( ( 0.025 * 0.025 ) * u@2@[0, 0, 0] ) ) + ( ( 0.025 * 0.025 ) * v@2@[0, 1, 0] ) ) - ( ( 0.025 * 0.025 ) * v@2@[0, 0, 0] ) ) + ( ( 0.025 * 0.025 ) * w@2@[0, 0, 1] ) ) - ( ( 0.025 * 0.025 ) * w@2@[0, 0, 0] ) ) == 0.0
}

Equation pEquation@3 {
	( ( ( ( ( ( ( 0.0125 * 0.0125 ) * u@3@[1, 0, 0] ) - ( ( 0.0125 * 0.0125 ) * u@3@[0, 0, 0] ) ) + ( ( 0.0125 * 0.0125 ) * v@3@[0, 1, 0] ) ) - ( ( 0.0125 * 0.0125 ) * v@3@[0, 0, 0] ) ) + ( ( 0.0125 * 0.0125 ) * w@3@[0, 0, 1] ) ) - ( ( 0.0125 * 0.0125 ) * w@3@[0, 0, 0] ) ) == 0.0
}

Equation pEquation@4 {
	( ( ( ( ( ( ( 0.00625 * 0.00625 ) * u@4@[1, 0, 0] ) - ( ( 0.00625 * 0.00625 ) * u@4@[0, 0, 0] ) ) + ( ( 0.00625 * 0.00625 ) * v@4@[0, 1, 0] ) ) - ( ( 0.00625 * 0.00625 ) * v@4@[0, 0, 0] ) ) + ( ( 0.00625 * 0.00625 ) * w@4@[0, 0, 1] ) ) - ( ( 0.00625 * 0.00625 ) * w@4@[0, 0, 0] ) ) == 0.0
}

Equation pEquation@5 {
	( ( ( ( ( ( ( 0.003125 * 0.003125 ) * u@5@[1, 0, 0] ) - ( ( 0.003125 * 0.003125 ) * u@5@[0, 0, 0] ) ) + ( ( 0.003125 * 0.003125 ) * v@5@[0, 1, 0] ) ) - ( ( 0.003125 * 0.003125 ) * v@5@[0, 0, 0] ) ) + ( ( 0.003125 * 0.003125 ) * w@5@[0, 0, 1] ) ) - ( ( 0.003125 * 0.003125 ) * w@5@[0, 0, 0] ) ) == 0.0
}

Equation pEquation@6 {
	( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) == 0.0
}

Equation uEquation@1 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@1@[0, 0, 0] - uOld@1 ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * 0.05 ) ) / dt ) + ( ( ( u@1@[0, 0, 0] - u@1@[-1, 0, 0] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) + ( ( ( u@1@[0, 0, 0] - u@1@[1, 0, 0] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) + ( ( ( u@1@[0, 0, 0] - u@1@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( u@1@[0, 0, 0] - u@1@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( u@1@[0, 0, 0] - u@1@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( u@1@[0, 0, 0] - u@1@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) - ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 0] ) + ( 0.5 * u@1@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@1@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@1@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * u@1@[1, 0, 0] ) + ( 0.5 * u@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@1@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@1@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 0] ) + ( 0.5 * u@1@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 0] ) + ( 0.5 * u@1@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 0, 0] ) ) ) ) ) ) + ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 1, 0] ) + ( 0.5 * u@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 1, 0] ) + ( 0.5 * u@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 1, 0] ) ) ) ) ) ) - ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 0] ) + ( 0.5 * u@1@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 0] ) + ( 0.5 * u@1@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, 0, 0] ) ) ) ) ) ) + ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 1] ) + ( 0.5 * u@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * u@1@[0, 0, 1] ) + ( 0.5 * u@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( p@1@[0, 0, 0] / rho ) ) ) - ( ( 0.05 * 0.05 ) * ( p@1@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * 0.05 ) )
}

Equation uEquation@2 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@2@[0, 0, 0] - uOld@2 ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * 0.025 ) ) / dt ) + ( ( ( u@2@[0, 0, 0] - u@2@[-1, 0, 0] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) + ( ( ( u@2@[0, 0, 0] - u@2@[1, 0, 0] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) + ( ( ( u@2@[0, 0, 0] - u@2@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( u@2@[0, 0, 0] - u@2@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( u@2@[0, 0, 0] - u@2@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( u@2@[0, 0, 0] - u@2@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) - ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 0] ) + ( 0.5 * u@2@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@2@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@2@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * u@2@[1, 0, 0] ) + ( 0.5 * u@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@2@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@2@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 0] ) + ( 0.5 * u@2@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 0] ) + ( 0.5 * u@2@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 0, 0] ) ) ) ) ) ) + ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 1, 0] ) + ( 0.5 * u@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 1, 0] ) + ( 0.5 * u@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 1, 0] ) ) ) ) ) ) - ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 0] ) + ( 0.5 * u@2@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 0] ) + ( 0.5 * u@2@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, 0, 0] ) ) ) ) ) ) + ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 1] ) + ( 0.5 * u@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * u@2@[0, 0, 1] ) + ( 0.5 * u@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( p@2@[0, 0, 0] / rho ) ) ) - ( ( 0.025 * 0.025 ) * ( p@2@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * 0.025 ) )
}

Equation uEquation@3 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@3@[0, 0, 0] - uOld@3 ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * 0.0125 ) ) / dt ) + ( ( ( u@3@[0, 0, 0] - u@3@[-1, 0, 0] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) + ( ( ( u@3@[0, 0, 0] - u@3@[1, 0, 0] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) + ( ( ( u@3@[0, 0, 0] - u@3@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( u@3@[0, 0, 0] - u@3@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( u@3@[0, 0, 0] - u@3@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( u@3@[0, 0, 0] - u@3@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) - ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 0] ) + ( 0.5 * u@3@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@3@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@3@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[1, 0, 0] ) + ( 0.5 * u@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@3@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@3@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 0] ) + ( 0.5 * u@3@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 0] ) + ( 0.5 * u@3@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 0, 0] ) ) ) ) ) ) + ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 1, 0] ) + ( 0.5 * u@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 1, 0] ) + ( 0.5 * u@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 1, 0] ) ) ) ) ) ) - ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 0] ) + ( 0.5 * u@3@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 0] ) + ( 0.5 * u@3@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, 0, 0] ) ) ) ) ) ) + ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 1] ) + ( 0.5 * u@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * u@3@[0, 0, 1] ) + ( 0.5 * u@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( p@3@[0, 0, 0] / rho ) ) ) - ( ( 0.0125 * 0.0125 ) * ( p@3@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * 0.0125 ) )
}

Equation uEquation@4 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@4@[0, 0, 0] - uOld@4 ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * 0.00625 ) ) / dt ) + ( ( ( u@4@[0, 0, 0] - u@4@[-1, 0, 0] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) + ( ( ( u@4@[0, 0, 0] - u@4@[1, 0, 0] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) + ( ( ( u@4@[0, 0, 0] - u@4@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( u@4@[0, 0, 0] - u@4@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( u@4@[0, 0, 0] - u@4@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( u@4@[0, 0, 0] - u@4@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) - ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 0] ) + ( 0.5 * u@4@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@4@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@4@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[1, 0, 0] ) + ( 0.5 * u@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@4@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@4@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 0] ) + ( 0.5 * u@4@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 0] ) + ( 0.5 * u@4@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 0, 0] ) ) ) ) ) ) + ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 1, 0] ) + ( 0.5 * u@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 1, 0] ) + ( 0.5 * u@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 1, 0] ) ) ) ) ) ) - ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 0] ) + ( 0.5 * u@4@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 0] ) + ( 0.5 * u@4@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, 0, 0] ) ) ) ) ) ) + ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 1] ) + ( 0.5 * u@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * u@4@[0, 0, 1] ) + ( 0.5 * u@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( p@4@[0, 0, 0] / rho ) ) ) - ( ( 0.00625 * 0.00625 ) * ( p@4@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * 0.00625 ) )
}

Equation uEquation@5 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@5@[0, 0, 0] - uOld@5 ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * 0.003125 ) ) / dt ) + ( ( ( u@5@[0, 0, 0] - u@5@[-1, 0, 0] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) + ( ( ( u@5@[0, 0, 0] - u@5@[1, 0, 0] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) + ( ( ( u@5@[0, 0, 0] - u@5@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( u@5@[0, 0, 0] - u@5@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( u@5@[0, 0, 0] - u@5@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( u@5@[0, 0, 0] - u@5@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) - ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 0] ) + ( 0.5 * u@5@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@5@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@5@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[1, 0, 0] ) + ( 0.5 * u@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@5@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@5@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 0] ) + ( 0.5 * u@5@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 0] ) + ( 0.5 * u@5@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 0, 0] ) ) ) ) ) ) + ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 1, 0] ) + ( 0.5 * u@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 1, 0] ) + ( 0.5 * u@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 1, 0] ) ) ) ) ) ) - ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 0] ) + ( 0.5 * u@5@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 0] ) + ( 0.5 * u@5@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, 0, 0] ) ) ) ) ) ) + ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 1] ) + ( 0.5 * u@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * u@5@[0, 0, 1] ) + ( 0.5 * u@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( p@5@[0, 0, 0] / rho ) ) ) - ( ( 0.003125 * 0.003125 ) * ( p@5@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * 0.003125 ) )
}

Equation uEquation@6 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6 ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) )
}

Equation vEquation@1 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@1@[0, 0, 0] - vOld@1 ) * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * 0.05 ) ) / dt ) + ( ( ( v@1@[0, 0, 0] - v@1@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( v@1@[0, 0, 0] - v@1@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( v@1@[0, 0, 0] - v@1@[0, -1, 0] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) + ( ( ( v@1@[0, 0, 0] - v@1@[0, 1, 0] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) + ( ( ( v@1@[0, 0, 0] - v@1@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( v@1@[0, 0, 0] - v@1@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.05 + 0.05 ) ) * 0.05 ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) - ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * v@1@[0, 0, 0] ) + ( 0.5 * v@1@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * v@1@[0, 0, 0] ) + ( 0.5 * v@1@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[0, 0, 0] ) ) ) ) ) ) + ( 0.05 * ( ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * v@1@[1, 0, 0] ) + ( 0.5 * v@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.05 ) * ( ( ( ( 0.5 * v@1@[1, 0, 0] ) + ( 0.5 * v@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * v@1@[0, 0, 0] ) + ( 0.5 * v@1@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@1@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@1@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * v@1@[0, 1, 0] ) + ( 0.5 * v@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@1@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@1@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * v@1@[0, 0, 0] ) + ( 0.5 * v@1@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * v@1@[0, 0, 0] ) + ( 0.5 * v@1@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * v@1@[0, 0, 1] ) + ( 0.5 * v@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * v@1@[0, 0, 1] ) + ( 0.5 * v@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@1@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( p@1@[0, 0, 0] / rho ) ) ) - ( ( 0.05 * 0.05 ) * ( p@1@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * 0.05 ) )
}

Equation vEquation@2 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@2@[0, 0, 0] - vOld@2 ) * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * 0.025 ) ) / dt ) + ( ( ( v@2@[0, 0, 0] - v@2@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( v@2@[0, 0, 0] - v@2@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( v@2@[0, 0, 0] - v@2@[0, -1, 0] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) + ( ( ( v@2@[0, 0, 0] - v@2@[0, 1, 0] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) + ( ( ( v@2@[0, 0, 0] - v@2@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( v@2@[0, 0, 0] - v@2@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.025 + 0.025 ) ) * 0.025 ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) - ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * v@2@[0, 0, 0] ) + ( 0.5 * v@2@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * v@2@[0, 0, 0] ) + ( 0.5 * v@2@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[0, 0, 0] ) ) ) ) ) ) + ( 0.025 * ( ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * v@2@[1, 0, 0] ) + ( 0.5 * v@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.025 ) * ( ( ( ( 0.5 * v@2@[1, 0, 0] ) + ( 0.5 * v@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * v@2@[0, 0, 0] ) + ( 0.5 * v@2@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@2@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@2@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * v@2@[0, 1, 0] ) + ( 0.5 * v@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@2@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@2@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * v@2@[0, 0, 0] ) + ( 0.5 * v@2@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * v@2@[0, 0, 0] ) + ( 0.5 * v@2@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * v@2@[0, 0, 1] ) + ( 0.5 * v@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * v@2@[0, 0, 1] ) + ( 0.5 * v@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@2@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( p@2@[0, 0, 0] / rho ) ) ) - ( ( 0.025 * 0.025 ) * ( p@2@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * 0.025 ) )
}

Equation vEquation@3 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@3@[0, 0, 0] - vOld@3 ) * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * 0.0125 ) ) / dt ) + ( ( ( v@3@[0, 0, 0] - v@3@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( v@3@[0, 0, 0] - v@3@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( v@3@[0, 0, 0] - v@3@[0, -1, 0] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) + ( ( ( v@3@[0, 0, 0] - v@3@[0, 1, 0] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) + ( ( ( v@3@[0, 0, 0] - v@3@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( v@3@[0, 0, 0] - v@3@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0125 + 0.0125 ) ) * 0.0125 ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) - ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[0, 0, 0] ) + ( 0.5 * v@3@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[0, 0, 0] ) + ( 0.5 * v@3@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[0, 0, 0] ) ) ) ) ) ) + ( 0.0125 * ( ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[1, 0, 0] ) + ( 0.5 * v@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[1, 0, 0] ) + ( 0.5 * v@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[0, 0, 0] ) + ( 0.5 * v@3@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@3@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@3@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * v@3@[0, 1, 0] ) + ( 0.5 * v@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@3@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@3@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * v@3@[0, 0, 0] ) + ( 0.5 * v@3@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * v@3@[0, 0, 0] ) + ( 0.5 * v@3@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * v@3@[0, 0, 1] ) + ( 0.5 * v@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * v@3@[0, 0, 1] ) + ( 0.5 * v@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@3@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( p@3@[0, 0, 0] / rho ) ) ) - ( ( 0.0125 * 0.0125 ) * ( p@3@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * 0.0125 ) )
}

Equation vEquation@4 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@4@[0, 0, 0] - vOld@4 ) * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * 0.00625 ) ) / dt ) + ( ( ( v@4@[0, 0, 0] - v@4@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( v@4@[0, 0, 0] - v@4@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( v@4@[0, 0, 0] - v@4@[0, -1, 0] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) + ( ( ( v@4@[0, 0, 0] - v@4@[0, 1, 0] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) + ( ( ( v@4@[0, 0, 0] - v@4@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( v@4@[0, 0, 0] - v@4@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.00625 + 0.00625 ) ) * 0.00625 ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) - ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[0, 0, 0] ) + ( 0.5 * v@4@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[0, 0, 0] ) + ( 0.5 * v@4@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[0, 0, 0] ) ) ) ) ) ) + ( 0.00625 * ( ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[1, 0, 0] ) + ( 0.5 * v@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[1, 0, 0] ) + ( 0.5 * v@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[0, 0, 0] ) + ( 0.5 * v@4@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@4@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@4@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * v@4@[0, 1, 0] ) + ( 0.5 * v@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@4@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@4@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * v@4@[0, 0, 0] ) + ( 0.5 * v@4@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * v@4@[0, 0, 0] ) + ( 0.5 * v@4@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * v@4@[0, 0, 1] ) + ( 0.5 * v@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * v@4@[0, 0, 1] ) + ( 0.5 * v@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@4@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( p@4@[0, 0, 0] / rho ) ) ) - ( ( 0.00625 * 0.00625 ) * ( p@4@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * 0.00625 ) )
}

Equation vEquation@5 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@5@[0, 0, 0] - vOld@5 ) * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * 0.003125 ) ) / dt ) + ( ( ( v@5@[0, 0, 0] - v@5@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( v@5@[0, 0, 0] - v@5@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( v@5@[0, 0, 0] - v@5@[0, -1, 0] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) + ( ( ( v@5@[0, 0, 0] - v@5@[0, 1, 0] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) + ( ( ( v@5@[0, 0, 0] - v@5@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( v@5@[0, 0, 0] - v@5@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.003125 + 0.003125 ) ) * 0.003125 ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) - ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[0, 0, 0] ) + ( 0.5 * v@5@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[0, 0, 0] ) + ( 0.5 * v@5@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[0, 0, 0] ) ) ) ) ) ) + ( 0.003125 * ( ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[1, 0, 0] ) + ( 0.5 * v@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[1, 0, 0] ) + ( 0.5 * v@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[0, 0, 0] ) + ( 0.5 * v@5@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@5@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@5@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * v@5@[0, 1, 0] ) + ( 0.5 * v@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@5@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@5@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * v@5@[0, 0, 0] ) + ( 0.5 * v@5@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * v@5@[0, 0, 0] ) + ( 0.5 * v@5@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * v@5@[0, 0, 1] ) + ( 0.5 * v@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * v@5@[0, 0, 1] ) + ( 0.5 * v@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@5@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( p@5@[0, 0, 0] / rho ) ) ) - ( ( 0.003125 * 0.003125 ) * ( p@5@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * 0.003125 ) )
}

Equation vEquation@6 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6 ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) )
}

Equation wEquation@1 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@1@[0, 0, 0] - wOld@1 ) * ( ( 0.05 * 0.05 ) * ( 0.5 * ( 0.05 + 0.05 ) ) ) ) / dt ) + ( ( ( w@1@[0, 0, 0] - w@1@[-1, 0, 0] ) * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( w@1@[0, 0, 0] - w@1@[1, 0, 0] ) * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( w@1@[0, 0, 0] - w@1@[0, -1, 0] ) * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( w@1@[0, 0, 0] - w@1@[0, 1, 0] ) * ( ( 0.05 * ( 0.5 * ( 0.05 + 0.05 ) ) ) * nue ) ) / ( 0.5 * ( 0.05 + 0.05 ) ) ) ) + ( ( ( w@1@[0, 0, 0] - w@1@[0, 0, -1] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) + ( ( ( w@1@[0, 0, 0] - w@1@[0, 0, 1] ) * ( ( 0.05 * 0.05 ) * nue ) ) / 0.05 ) ) - ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 0, 0] ) + ( 0.5 * w@1@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 0, 0] ) + ( 0.5 * w@1@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[1, 0, 0] ) + ( 0.5 * w@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[1, 0, 0] ) + ( 0.5 * w@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@1@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 0, 0] ) + ( 0.5 * w@1@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 0, 0] ) + ( 0.5 * w@1@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 1, 0] ) + ( 0.5 * w@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.05 ) * ( 0.05 * ( ( ( ( 0.5 * w@1@[0, 1, 0] ) + ( 0.5 * w@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@1@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * w@1@[0, 0, 0] ) + ( 0.5 * w@1@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@1@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@1@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( ( ( ( 0.5 * w@1@[0, 0, 1] ) + ( 0.5 * w@1@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@1@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@1@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.05 * 0.05 ) * ( p@1@[0, 0, 0] / rho ) ) ) - ( ( 0.05 * 0.05 ) * ( p@1@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.05 * 0.05 ) * ( 0.5 * ( 0.05 + 0.05 ) ) ) )
}

Equation wEquation@2 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@2@[0, 0, 0] - wOld@2 ) * ( ( 0.025 * 0.025 ) * ( 0.5 * ( 0.025 + 0.025 ) ) ) ) / dt ) + ( ( ( w@2@[0, 0, 0] - w@2@[-1, 0, 0] ) * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( w@2@[0, 0, 0] - w@2@[1, 0, 0] ) * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( w@2@[0, 0, 0] - w@2@[0, -1, 0] ) * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( w@2@[0, 0, 0] - w@2@[0, 1, 0] ) * ( ( 0.025 * ( 0.5 * ( 0.025 + 0.025 ) ) ) * nue ) ) / ( 0.5 * ( 0.025 + 0.025 ) ) ) ) + ( ( ( w@2@[0, 0, 0] - w@2@[0, 0, -1] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) + ( ( ( w@2@[0, 0, 0] - w@2@[0, 0, 1] ) * ( ( 0.025 * 0.025 ) * nue ) ) / 0.025 ) ) - ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 0, 0] ) + ( 0.5 * w@2@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 0, 0] ) + ( 0.5 * w@2@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[1, 0, 0] ) + ( 0.5 * w@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[1, 0, 0] ) + ( 0.5 * w@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@2@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 0, 0] ) + ( 0.5 * w@2@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 0, 0] ) + ( 0.5 * w@2@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 1, 0] ) + ( 0.5 * w@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.025 ) * ( 0.025 * ( ( ( ( 0.5 * w@2@[0, 1, 0] ) + ( 0.5 * w@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@2@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * w@2@[0, 0, 0] ) + ( 0.5 * w@2@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@2@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@2@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( ( ( ( 0.5 * w@2@[0, 0, 1] ) + ( 0.5 * w@2@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@2@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@2@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.025 * 0.025 ) * ( p@2@[0, 0, 0] / rho ) ) ) - ( ( 0.025 * 0.025 ) * ( p@2@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.025 * 0.025 ) * ( 0.5 * ( 0.025 + 0.025 ) ) ) )
}

Equation wEquation@3 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@3@[0, 0, 0] - wOld@3 ) * ( ( 0.0125 * 0.0125 ) * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) / dt ) + ( ( ( w@3@[0, 0, 0] - w@3@[-1, 0, 0] ) * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( w@3@[0, 0, 0] - w@3@[1, 0, 0] ) * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( w@3@[0, 0, 0] - w@3@[0, -1, 0] ) * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( w@3@[0, 0, 0] - w@3@[0, 1, 0] ) * ( ( 0.0125 * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) * nue ) ) / ( 0.5 * ( 0.0125 + 0.0125 ) ) ) ) + ( ( ( w@3@[0, 0, 0] - w@3@[0, 0, -1] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) + ( ( ( w@3@[0, 0, 0] - w@3@[0, 0, 1] ) * ( ( 0.0125 * 0.0125 ) * nue ) ) / 0.0125 ) ) - ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 0, 0] ) + ( 0.5 * w@3@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 0, 0] ) + ( 0.5 * w@3@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[1, 0, 0] ) + ( 0.5 * w@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[1, 0, 0] ) + ( 0.5 * w@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@3@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 0, 0] ) + ( 0.5 * w@3@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 0, 0] ) + ( 0.5 * w@3@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 1, 0] ) + ( 0.5 * w@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0125 ) * ( 0.0125 * ( ( ( ( 0.5 * w@3@[0, 1, 0] ) + ( 0.5 * w@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@3@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * w@3@[0, 0, 0] ) + ( 0.5 * w@3@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@3@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@3@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( ( ( ( 0.5 * w@3@[0, 0, 1] ) + ( 0.5 * w@3@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@3@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@3@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0125 * 0.0125 ) * ( p@3@[0, 0, 0] / rho ) ) ) - ( ( 0.0125 * 0.0125 ) * ( p@3@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.0125 * 0.0125 ) * ( 0.5 * ( 0.0125 + 0.0125 ) ) ) )
}

Equation wEquation@4 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@4@[0, 0, 0] - wOld@4 ) * ( ( 0.00625 * 0.00625 ) * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) / dt ) + ( ( ( w@4@[0, 0, 0] - w@4@[-1, 0, 0] ) * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( w@4@[0, 0, 0] - w@4@[1, 0, 0] ) * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( w@4@[0, 0, 0] - w@4@[0, -1, 0] ) * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( w@4@[0, 0, 0] - w@4@[0, 1, 0] ) * ( ( 0.00625 * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) * nue ) ) / ( 0.5 * ( 0.00625 + 0.00625 ) ) ) ) + ( ( ( w@4@[0, 0, 0] - w@4@[0, 0, -1] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) + ( ( ( w@4@[0, 0, 0] - w@4@[0, 0, 1] ) * ( ( 0.00625 * 0.00625 ) * nue ) ) / 0.00625 ) ) - ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 0, 0] ) + ( 0.5 * w@4@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 0, 0] ) + ( 0.5 * w@4@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[1, 0, 0] ) + ( 0.5 * w@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[1, 0, 0] ) + ( 0.5 * w@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@4@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 0, 0] ) + ( 0.5 * w@4@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 0, 0] ) + ( 0.5 * w@4@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 1, 0] ) + ( 0.5 * w@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.00625 ) * ( 0.00625 * ( ( ( ( 0.5 * w@4@[0, 1, 0] ) + ( 0.5 * w@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@4@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * w@4@[0, 0, 0] ) + ( 0.5 * w@4@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@4@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@4@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( ( ( ( 0.5 * w@4@[0, 0, 1] ) + ( 0.5 * w@4@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@4@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@4@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.00625 * 0.00625 ) * ( p@4@[0, 0, 0] / rho ) ) ) - ( ( 0.00625 * 0.00625 ) * ( p@4@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.00625 * 0.00625 ) * ( 0.5 * ( 0.00625 + 0.00625 ) ) ) )
}

Equation wEquation@5 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@5@[0, 0, 0] - wOld@5 ) * ( ( 0.003125 * 0.003125 ) * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) / dt ) + ( ( ( w@5@[0, 0, 0] - w@5@[-1, 0, 0] ) * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( w@5@[0, 0, 0] - w@5@[1, 0, 0] ) * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( w@5@[0, 0, 0] - w@5@[0, -1, 0] ) * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( w@5@[0, 0, 0] - w@5@[0, 1, 0] ) * ( ( 0.003125 * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) * nue ) ) / ( 0.5 * ( 0.003125 + 0.003125 ) ) ) ) + ( ( ( w@5@[0, 0, 0] - w@5@[0, 0, -1] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) + ( ( ( w@5@[0, 0, 0] - w@5@[0, 0, 1] ) * ( ( 0.003125 * 0.003125 ) * nue ) ) / 0.003125 ) ) - ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 0, 0] ) + ( 0.5 * w@5@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 0, 0] ) + ( 0.5 * w@5@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[1, 0, 0] ) + ( 0.5 * w@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[1, 0, 0] ) + ( 0.5 * w@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@5@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 0, 0] ) + ( 0.5 * w@5@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 0, 0] ) + ( 0.5 * w@5@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 1, 0] ) + ( 0.5 * w@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.003125 ) * ( 0.003125 * ( ( ( ( 0.5 * w@5@[0, 1, 0] ) + ( 0.5 * w@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@5@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * w@5@[0, 0, 0] ) + ( 0.5 * w@5@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@5@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@5@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( ( ( ( 0.5 * w@5@[0, 0, 1] ) + ( 0.5 * w@5@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@5@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@5@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.003125 * 0.003125 ) * ( p@5@[0, 0, 0] / rho ) ) ) - ( ( 0.003125 * 0.003125 ) * ( p@5@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.003125 * 0.003125 ) * ( 0.5 * ( 0.003125 + 0.003125 ) ) ) )
}

Equation wEquation@6 {
	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6 ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) )
}

Globals {
	Var topVel : Real = 0.01
	Var gravity_x : Real = 0
	Var gravity_y : Real = 0
	Var gravity_z : Real = 0
	Var mue : Real = 8.9E-4
	Var rho : Real = 997.0479
	Val nue : Real = ( mue / rho )
	Val Re : Real = ( ( topVel * 0.1 ) / nue )
	Var dt : Real = 1.0
	Var curTime : Real = 0.0
	Var maxTime : Real = 10
	Var printInterval : Real = 1
	Var nextPrint : Real = 1.0E30
	Var totalNumCycles : Integer = 0
	Var totalNumTimeSteps : Integer = 0
}

Function Advance@1 {
	uOld@1 = u@1
	vOld@1 = v@1
	wOld@1 = w@1
	pOld@1 = p@1
}

Function Advance@5 {
	uOld@5 = u@5
	vOld@5 = v@5
	wOld@5 = w@5
	pOld@5 = p@5
}

Function Advance@2 {
	uOld@2 = u@2
	vOld@2 = v@2
	wOld@2 = w@2
	pOld@2 = p@2
}

Function Advance@6 {
	uOld@6 = u@6
	vOld@6 = v@6
	wOld@6 = w@6
	pOld@6 = p@6
}

Function Advance@3 {
	uOld@3 = u@3
	vOld@3 = v@3
	wOld@3 = w@3
	pOld@3 = p@3
}

Function Advance@4 {
	uOld@4 = u@4
	vOld@4 = v@4
	wOld@4 = w@4
	pOld@4 = p@4
}

Function InitFields {
	u@1 = 0.0
	u@2 = 0.0
	u@3 = 0.0
	u@4 = 0.0
	u@5 = 0.0
	u@6 = 0.0
	v@1 = 0.0
	v@2 = 0.0
	v@3 = 0.0
	v@4 = 0.0
	v@5 = 0.0
	v@6 = 0.0
	w@1 = 0.0
	w@2 = 0.0
	w@3 = 0.0
	w@4 = 0.0
	w@5 = 0.0
	w@6 = 0.0
	p@1 = 0.0
	p@2 = 0.0
	p@3 = 0.0
	p@4 = 0.0
	p@5 = 0.0
	p@6 = 0.0
	uOld@1 = 0.0
	uOld@2 = 0.0
	uOld@3 = 0.0
	uOld@4 = 0.0
	uOld@5 = 0.0
	uOld@6 = 0.0
	vOld@1 = 0.0
	vOld@2 = 0.0
	vOld@3 = 0.0
	vOld@4 = 0.0
	vOld@5 = 0.0
	vOld@6 = 0.0
	wOld@1 = 0.0
	wOld@2 = 0.0
	wOld@3 = 0.0
	wOld@4 = 0.0
	wOld@5 = 0.0
	wOld@6 = 0.0
	pOld@1 = 0.0
	pOld@2 = 0.0
	pOld@3 = 0.0
	pOld@4 = 0.0
	pOld@5 = 0.0
	pOld@6 = 0.0
	gen_rhs_u@1 = 0.0
	gen_residual_u@1 = 0.0
	gen_error_u@1 = 0.0
	gen_approx_u@1 = 0.0
	gen_rhs_u@2 = 0.0
	gen_residual_u@2 = 0.0
	gen_error_u@2 = 0.0
	gen_approx_u@2 = 0.0
	gen_rhs_u@3 = 0.0
	gen_residual_u@3 = 0.0
	gen_error_u@3 = 0.0
	gen_approx_u@3 = 0.0
	gen_rhs_u@4 = 0.0
	gen_residual_u@4 = 0.0
	gen_error_u@4 = 0.0
	gen_approx_u@4 = 0.0
	gen_rhs_u@5 = 0.0
	gen_residual_u@5 = 0.0
	gen_error_u@5 = 0.0
	gen_approx_u@5 = 0.0
	gen_residual_u@6 = 0.0
	gen_rhs_v@1 = 0.0
	gen_residual_v@1 = 0.0
	gen_error_v@1 = 0.0
	gen_approx_v@1 = 0.0
	gen_rhs_v@2 = 0.0
	gen_residual_v@2 = 0.0
	gen_error_v@2 = 0.0
	gen_approx_v@2 = 0.0
	gen_rhs_v@3 = 0.0
	gen_residual_v@3 = 0.0
	gen_error_v@3 = 0.0
	gen_approx_v@3 = 0.0
	gen_rhs_v@4 = 0.0
	gen_residual_v@4 = 0.0
	gen_error_v@4 = 0.0
	gen_approx_v@4 = 0.0
	gen_rhs_v@5 = 0.0
	gen_residual_v@5 = 0.0
	gen_error_v@5 = 0.0
	gen_approx_v@5 = 0.0
	gen_residual_v@6 = 0.0
	gen_rhs_w@1 = 0.0
	gen_residual_w@1 = 0.0
	gen_error_w@1 = 0.0
	gen_approx_w@1 = 0.0
	gen_rhs_w@2 = 0.0
	gen_residual_w@2 = 0.0
	gen_error_w@2 = 0.0
	gen_approx_w@2 = 0.0
	gen_rhs_w@3 = 0.0
	gen_residual_w@3 = 0.0
	gen_error_w@3 = 0.0
	gen_approx_w@3 = 0.0
	gen_rhs_w@4 = 0.0
	gen_residual_w@4 = 0.0
	gen_error_w@4 = 0.0
	gen_approx_w@4 = 0.0
	gen_rhs_w@5 = 0.0
	gen_residual_w@5 = 0.0
	gen_error_w@5 = 0.0
	gen_approx_w@5 = 0.0
	gen_residual_w@6 = 0.0
	gen_rhs_p@1 = 0.0
	gen_residual_p@1 = 0.0
	gen_error_p@1 = 0.0
	gen_approx_p@1 = 0.0
	gen_rhs_p@2 = 0.0
	gen_residual_p@2 = 0.0
	gen_error_p@2 = 0.0
	gen_approx_p@2 = 0.0
	gen_rhs_p@3 = 0.0
	gen_residual_p@3 = 0.0
	gen_error_p@3 = 0.0
	gen_approx_p@3 = 0.0
	gen_rhs_p@4 = 0.0
	gen_residual_p@4 = 0.0
	gen_error_p@4 = 0.0
	gen_approx_p@4 = 0.0
	gen_rhs_p@5 = 0.0
	gen_residual_p@5 = 0.0
	gen_error_p@5 = 0.0
	gen_approx_p@5 = 0.0
	gen_residual_p@6 = 0.0
}

Function gen_resNorm@6 : Real {
	Var gen_resNorm : Real = 0.0
	gen_resNorm += dot ( gen_residual_u@6, gen_residual_u@6 )
	gen_resNorm += dot ( gen_residual_v@6, gen_residual_v@6 )
	gen_resNorm += dot ( gen_residual_w@6, gen_residual_w@6 )
	gen_resNorm += dot ( gen_residual_p@6, gen_residual_p@6 )
	return sqrt ( gen_resNorm )
}

Function gen_solve@6 {
	gen_residual_u@6 = ( ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6 ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) )
	gen_residual_v@6 = ( ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6 ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) )
	gen_residual_w@6 = ( ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6 ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) )
	gen_residual_p@6 = ( 0.0 - ( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) )
	Var gen_initRes : Real = gen_resNorm@6 (  )
	Var gen_curRes : Real = gen_initRes
	Var gen_prevRes : Real = gen_curRes
	Var gen_curIt : Integer = 0
	repeat until ( ( gen_curIt > 0 ) && ( ( ( gen_curIt >= 20 ) || ( gen_curRes <= ( 1.0E-30 * gen_initRes ) ) ) || ( gen_curRes <= 1.0E-10 ) ) ) {
		gen_curIt += 1
		gen_mgCycle@6 (  )
		gen_residual_u@6 = ( ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6 ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) )
		gen_residual_v@6 = ( ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6 ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) )
		gen_residual_w@6 = ( ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6 ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) )
		gen_residual_p@6 = ( 0.0 - ( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) )
		gen_prevRes = gen_curRes
		gen_curRes = gen_resNorm@6 (  )
	}
	if ( ( ( gen_curRes != gen_curRes ) || ( gen_curRes > 1.0E-10 ) ) ) {
		curTime -= dt
		dt /= 2
		curTime += dt
		print ( "Error detected after", gen_curIt, "steps, residual is", gen_curRes, "- reducing time step size to", dt, "and trying again with adapted time", curTime )
		u@6 = uOld@6
		v@6 = vOld@6
		w@6 = wOld@6
		p@6 = pOld@6
		gen_solve (  )
	} else {
		print ( "  Residual at", curTime, "after", gen_curIt, "iterations is", gen_curRes, ", was initially", gen_initRes )
	}
}

Function gen_resNorm@1 : Real {
	Var gen_resNorm : Real = 0.0
	gen_resNorm += dot ( gen_residual_u@1, gen_residual_u@1 )
	gen_resNorm += dot ( gen_residual_v@1, gen_residual_v@1 )
	gen_resNorm += dot ( gen_residual_w@1, gen_residual_w@1 )
	gen_resNorm += dot ( gen_residual_p@1, gen_residual_p@1 )
	return sqrt ( gen_resNorm )
}

Function gen_mgCycle@1 {
	gen_residual_u@1 = ( gen_rhs_u@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[1, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[-1, 0, 0] / rho ) ) ) ) )
	gen_residual_v@1 = ( gen_rhs_v@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 1, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, -1, 0] / rho ) ) ) ) )
	gen_residual_w@1 = ( gen_rhs_w@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 1] * nue ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, -1] / rho ) ) ) ) )
	gen_residual_p@1 = ( gen_rhs_p@1 - ( ( ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 1] ) + ( 0.0025000000000000005 * gen_error_v@1@[0, 1, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[1, 0, 0] ) ) - ( ( 0.0025000000000000005 * gen_error_v@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 0] ) ) ) )
	Var gen_curRes : Real = gen_resNorm@1 (  )
	Var gen_initRes : Real = gen_curRes
	if ( ( gen_curRes <= 1.0E-12 ) ) {
		return
	}
	gen_resHat_gen_error_u@1 = gen_residual_u@1
	gen_resHat_gen_error_v@1 = gen_residual_v@1
	gen_resHat_gen_error_w@1 = gen_residual_w@1
	gen_resHat_gen_error_p@1 = gen_residual_p@1
	Var gen_rho : Real = 1.0
	Var gen_rhoOld : Real = 1.0
	Var gen_alpha : Real = 1.0
	Var gen_beta : Real = 1.0
	Var gen_omega : Real = 1.0
	gen_v_gen_error_u@1 = 0.0
	gen_v_gen_error_v@1 = 0.0
	gen_v_gen_error_w@1 = 0.0
	gen_v_gen_error_p@1 = 0.0
	gen_p_gen_error_u@1 = 0.0
	gen_p_gen_error_v@1 = 0.0
	gen_p_gen_error_w@1 = 0.0
	gen_p_gen_error_p@1 = 0.0
	Var gen_curStep : Integer = 0
	repeat 12800 times count gen_curStep {
		if ( ( ( gen_curStep > 0 ) && ( 0 == ( gen_curStep % 128 ) ) ) ) {
			gen_residual_u@1 = ( gen_rhs_u@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[1, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[-1, 0, 0] / rho ) ) ) ) )
			gen_residual_v@1 = ( gen_rhs_v@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 1, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, -1, 0] / rho ) ) ) ) )
			gen_residual_w@1 = ( gen_rhs_w@1 - ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 1] * nue ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, -1] / rho ) ) ) ) )
			gen_residual_p@1 = ( gen_rhs_p@1 - ( ( ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 1] ) + ( 0.0025000000000000005 * gen_error_v@1@[0, 1, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[1, 0, 0] ) ) - ( ( 0.0025000000000000005 * gen_error_v@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 0] ) ) ) )
			gen_resHat_gen_error_u@1 = gen_residual_u@1
			gen_resHat_gen_error_v@1 = gen_residual_v@1
			gen_resHat_gen_error_w@1 = gen_residual_w@1
			gen_resHat_gen_error_p@1 = gen_residual_p@1
			gen_rho = 1.0
			gen_rhoOld = 1.0
			gen_alpha = 1.0
			gen_beta = 1.0
			gen_omega = 1.0
			gen_v_gen_error_u@1 = 0.0
			gen_v_gen_error_v@1 = 0.0
			gen_v_gen_error_w@1 = 0.0
			gen_v_gen_error_p@1 = 0.0
			gen_p_gen_error_u@1 = 0.0
			gen_p_gen_error_v@1 = 0.0
			gen_p_gen_error_w@1 = 0.0
			gen_p_gen_error_p@1 = 0.0
		}
		gen_rhoOld = gen_rho
		gen_rho = 0.0
		gen_rho += dot ( gen_resHat_gen_error_u@1, gen_residual_u@1 )
		gen_rho += dot ( gen_resHat_gen_error_v@1, gen_residual_v@1 )
		gen_rho += dot ( gen_resHat_gen_error_w@1, gen_residual_w@1 )
		gen_rho += dot ( gen_resHat_gen_error_p@1, gen_residual_p@1 )
		gen_beta = ( ( gen_rho / gen_rhoOld ) * ( gen_alpha / gen_omega ) )
		gen_p_gen_error_u@1 = ( gen_residual_u@1 + ( gen_beta * ( gen_p_gen_error_u@1 - ( gen_omega * gen_v_gen_error_u@1 ) ) ) )
		gen_p_gen_error_v@1 = ( gen_residual_v@1 + ( gen_beta * ( gen_p_gen_error_v@1 - ( gen_omega * gen_v_gen_error_v@1 ) ) ) )
		gen_p_gen_error_w@1 = ( gen_residual_w@1 + ( gen_beta * ( gen_p_gen_error_w@1 - ( gen_omega * gen_v_gen_error_w@1 ) ) ) )
		gen_p_gen_error_p@1 = ( gen_residual_p@1 + ( gen_beta * ( gen_p_gen_error_p@1 - ( gen_omega * gen_v_gen_error_p@1 ) ) ) )
		gen_v_gen_error_u@1 = ( ( ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 1] * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 1] * frozen ( gen_p_gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 1, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 1, 0] * frozen ( gen_p_gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) * gen_p_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) * gen_p_gen_error_u@1@[1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) * gen_p_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) * gen_p_gen_error_u@1@[1, 0, 0] ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_u@1@[0, 0, 0] * nue ) + ( gen_p_gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_p_gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, -1] * frozen ( gen_p_gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, -1] * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, -1, 0] * frozen ( gen_p_gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_u@1@[0, -1, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) * gen_p_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) * gen_p_gen_error_u@1@[-1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[-1, 0, 0] ) * gen_p_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_u@1@[-1, 0, 0] ) * gen_p_gen_error_u@1@[-1, 0, 0] ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_u@1@[0, -1, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_u@1@[1, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_u@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[-1, 0, 0] / rho ) ) ) )
		gen_v_gen_error_v@1 = ( ( ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 1] * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 1] * frozen ( gen_p_gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) * gen_p_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) * gen_p_gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) * gen_p_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) * gen_p_gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[1, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[1, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, -1, 0] ) ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] * nue ) + ( gen_p_gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_p_gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, -1] * frozen ( gen_p_gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, -1] * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) * gen_p_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) * gen_p_gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, -1, 0] ) * gen_p_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_v@1@[0, -1, 0] ) * gen_p_gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[-1, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_v@1@[-1, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[0, 0, -1] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_v@1@[0, 1, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_v@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[0, -1, 0] / rho ) ) ) )
		gen_v_gen_error_w@1 = ( ( ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) * gen_p_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) * gen_p_gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) * gen_p_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 1] ) * gen_p_gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 1, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 1, 0] * frozen ( gen_p_gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[1, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[1, 0, 0] * frozen ( gen_p_gen_error_u@1@[1, 0, -1] ) ) + ( 0.05000000000000001 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] * nue ) + ( gen_p_gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_p_gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) * gen_p_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, 0] ) * gen_p_gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, -1] ) * gen_p_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_p_gen_error_w@1@[0, 0, -1] ) * gen_p_gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, -1, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, -1, 0] * frozen ( gen_p_gen_error_v@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_p_gen_error_w@1@[0, 0, 1] * nue ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[-1, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[0, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_p_gen_error_w@1@[-1, 0, 0] * frozen ( gen_p_gen_error_u@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_p_gen_error_w@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_p_gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_p_gen_error_p@1@[0, 0, -1] / rho ) ) ) )
		gen_v_gen_error_p@1 = ( ( ( 0.0025000000000000005 * gen_p_gen_error_w@1@[0, 0, 1] ) + ( 0.0025000000000000005 * gen_p_gen_error_v@1@[0, 1, 0] ) + ( 0.0025000000000000005 * gen_p_gen_error_u@1@[1, 0, 0] ) ) - ( ( 0.0025000000000000005 * gen_p_gen_error_v@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_p_gen_error_u@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_p_gen_error_w@1@[0, 0, 0] ) ) )
		Var gen_alphaDenom : Real = 0.0
		gen_alphaDenom += dot ( gen_resHat_gen_error_u@1, gen_v_gen_error_u@1 )
		gen_alphaDenom += dot ( gen_resHat_gen_error_v@1, gen_v_gen_error_v@1 )
		gen_alphaDenom += dot ( gen_resHat_gen_error_w@1, gen_v_gen_error_w@1 )
		gen_alphaDenom += dot ( gen_resHat_gen_error_p@1, gen_v_gen_error_p@1 )
		gen_alpha = ( gen_rho / gen_alphaDenom )
		gen_s_gen_error_u@1 = ( gen_residual_u@1 - ( gen_alpha * gen_v_gen_error_u@1 ) )
		gen_s_gen_error_v@1 = ( gen_residual_v@1 - ( gen_alpha * gen_v_gen_error_v@1 ) )
		gen_s_gen_error_w@1 = ( gen_residual_w@1 - ( gen_alpha * gen_v_gen_error_w@1 ) )
		gen_s_gen_error_p@1 = ( gen_residual_p@1 - ( gen_alpha * gen_v_gen_error_p@1 ) )
		gen_t_gen_error_u@1 = ( ( ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 1] * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 1] * frozen ( gen_s_gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 1, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 1, 0] * frozen ( gen_s_gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) * gen_s_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) * gen_s_gen_error_u@1@[1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) * gen_s_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) * gen_s_gen_error_u@1@[1, 0, 0] ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_u@1@[0, 0, 0] * nue ) + ( gen_s_gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_s_gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, -1] * frozen ( gen_s_gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, -1] * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, -1, 0] * frozen ( gen_s_gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_u@1@[0, -1, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) * gen_s_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) * gen_s_gen_error_u@1@[-1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[-1, 0, 0] ) * gen_s_gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_u@1@[-1, 0, 0] ) * gen_s_gen_error_u@1@[-1, 0, 0] ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_u@1@[0, -1, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_u@1@[1, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_u@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[-1, 0, 0] / rho ) ) ) )
		gen_t_gen_error_v@1 = ( ( ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 1] * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 1] * frozen ( gen_s_gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) * gen_s_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) * gen_s_gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) * gen_s_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) * gen_s_gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[1, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[1, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, -1, 0] ) ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] * nue ) + ( gen_s_gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_s_gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, -1] * frozen ( gen_s_gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, -1] * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) * gen_s_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) * gen_s_gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, -1, 0] ) * gen_s_gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_v@1@[0, -1, 0] ) * gen_s_gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[-1, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_v@1@[-1, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[0, 0, -1] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_v@1@[0, 1, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_v@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[0, -1, 0] / rho ) ) ) )
		gen_t_gen_error_w@1 = ( ( ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) * gen_s_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) * gen_s_gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) * gen_s_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 1] ) * gen_s_gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 1, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 1, 0] * frozen ( gen_s_gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[1, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[1, 0, 0] * frozen ( gen_s_gen_error_u@1@[1, 0, -1] ) ) + ( 0.05000000000000001 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] * nue ) + ( gen_s_gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_s_gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) * gen_s_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, 0] ) * gen_s_gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, -1] ) * gen_s_gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_s_gen_error_w@1@[0, 0, -1] ) * gen_s_gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, -1, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, -1, 0] * frozen ( gen_s_gen_error_v@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_s_gen_error_w@1@[0, 0, 1] * nue ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[-1, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[0, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_s_gen_error_w@1@[-1, 0, 0] * frozen ( gen_s_gen_error_u@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_s_gen_error_w@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_s_gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_s_gen_error_p@1@[0, 0, -1] / rho ) ) ) )
		gen_t_gen_error_p@1 = ( ( ( 0.0025000000000000005 * gen_s_gen_error_w@1@[0, 0, 1] ) + ( 0.0025000000000000005 * gen_s_gen_error_v@1@[0, 1, 0] ) + ( 0.0025000000000000005 * gen_s_gen_error_u@1@[1, 0, 0] ) ) - ( ( 0.0025000000000000005 * gen_s_gen_error_v@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_s_gen_error_u@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_s_gen_error_w@1@[0, 0, 0] ) ) )
		Var gen_omegaNom : Real = 0.0
		Var gen_omegaDenom : Real = 0.0
		gen_omegaNom += dot ( gen_t_gen_error_u@1, gen_s_gen_error_u@1 )
		gen_omegaDenom += dot ( gen_t_gen_error_u@1, gen_t_gen_error_u@1 )
		gen_omegaNom += dot ( gen_t_gen_error_v@1, gen_s_gen_error_v@1 )
		gen_omegaDenom += dot ( gen_t_gen_error_v@1, gen_t_gen_error_v@1 )
		gen_omegaNom += dot ( gen_t_gen_error_w@1, gen_s_gen_error_w@1 )
		gen_omegaDenom += dot ( gen_t_gen_error_w@1, gen_t_gen_error_w@1 )
		gen_omegaNom += dot ( gen_t_gen_error_p@1, gen_s_gen_error_p@1 )
		gen_omegaDenom += dot ( gen_t_gen_error_p@1, gen_t_gen_error_p@1 )
		gen_omega = ( gen_omegaNom / gen_omegaDenom )
		gen_error_u@1 = ( ( gen_error_u@1 + ( gen_alpha * gen_p_gen_error_u@1 ) ) + ( gen_omega * gen_s_gen_error_u@1 ) )
		gen_error_v@1 = ( ( gen_error_v@1 + ( gen_alpha * gen_p_gen_error_v@1 ) ) + ( gen_omega * gen_s_gen_error_v@1 ) )
		gen_error_w@1 = ( ( gen_error_w@1 + ( gen_alpha * gen_p_gen_error_w@1 ) ) + ( gen_omega * gen_s_gen_error_w@1 ) )
		gen_error_p@1 = ( ( gen_error_p@1 + ( gen_alpha * gen_p_gen_error_p@1 ) ) + ( gen_omega * gen_s_gen_error_p@1 ) )
		gen_residual_u@1 = ( gen_s_gen_error_u@1 - ( gen_omega * gen_t_gen_error_u@1 ) )
		gen_residual_v@1 = ( gen_s_gen_error_v@1 - ( gen_omega * gen_t_gen_error_v@1 ) )
		gen_residual_w@1 = ( gen_s_gen_error_w@1 - ( gen_omega * gen_t_gen_error_w@1 ) )
		gen_residual_p@1 = ( gen_s_gen_error_p@1 - ( gen_omega * gen_t_gen_error_p@1 ) )
		gen_curRes = gen_resNorm@1 (  )
		if ( ( ( gen_curRes <= ( 0.001 * gen_initRes ) ) || ( gen_curRes <= 1.0E-12 ) ) ) {
			return
		}
	}
	print ( "Maximum number of cgs iterations (", 12800, ") was exceeded" )
}

Function gen_mgCycle@2 {
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@2 relax 1.0 {
				gen_error_u@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@2@[0, 0, 0]
				gen_error_u@2@[1, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[1, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 1] * frozen ( gen_error_w@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 1, 0] * frozen ( gen_error_v@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[2, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[2, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[2, 0, 0] ) * gen_error_u@2@[2, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( gen_error_u@2@[1, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[1, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, -1] * frozen ( gen_error_w@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, -1, 0] * frozen ( gen_error_v@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[2, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@2@[1, 0, 0]
				gen_error_v@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@2@[0, 0, 0]
				gen_error_v@2@[0, 1, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 1, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 1] * frozen ( gen_error_w@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 2, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 2, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 2, 0] ) * gen_error_v@2@[0, 2, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 1, 0] * frozen ( gen_error_u@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 1, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( gen_error_v@2@[0, 1, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 1, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, -1] * frozen ( gen_error_w@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 1, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 1, 0] * frozen ( gen_error_u@2@[0, 1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 2, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 1, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@2@[0, 1, 0]
				gen_error_w@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@2@[0, 0, 0]
				gen_error_w@2@[0, 0, 1] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 1] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 2] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 2] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 2] ) * gen_error_w@2@[0, 0, 2] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 1] * frozen ( gen_error_v@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 1] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 1] * frozen ( gen_error_u@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 1] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( gen_error_w@2@[0, 0, 1] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 1] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 1] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 1] * frozen ( gen_error_v@2@[0, 0, 1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 2] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 1] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 1] * frozen ( gen_error_u@2@[0, 0, 1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 1] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@2@[0, 0, 1]
				gen_error_p@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_v@2@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[1, 0, 0] ) ) - ( ( 6.250000000000001E-4 * gen_error_v@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 0] ) ) ) == gen_rhs_p@2@[0, 0, 0]
			}
		}
	}
	gen_residual_u@2 = ( gen_rhs_u@2 - ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[-1, 0, 0] / rho ) ) ) ) )
	gen_residual_v@2 = ( gen_rhs_v@2 - ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, -1, 0] / rho ) ) ) ) )
	gen_residual_w@2 = ( gen_rhs_w@2 - ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, -1] / rho ) ) ) ) )
	gen_residual_p@2 = ( gen_rhs_p@2 - ( ( ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_v@2@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[1, 0, 0] ) ) - ( ( 6.250000000000001E-4 * gen_error_v@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 0] ) ) ) )
	gen_approx_u@1 = ( gen_restrictionForSol_u@2 * gen_error_u@2 )
	gen_approx_v@1 = ( gen_restrictionForSol_v@2 * gen_error_v@2 )
	gen_approx_w@1 = ( gen_restrictionForSol_w@2 * gen_error_w@2 )
	gen_approx_p@1 = ( gen_restrictionForSol_p@2 * gen_error_p@2 )
	gen_error_u@1 = gen_approx_u@1
	gen_error_v@1 = gen_approx_v@1
	gen_error_w@1 = gen_approx_w@1
	gen_error_p@1 = gen_approx_p@1
	gen_rhs_u@1 = ( ( gen_restrictionForRes_u@2 * gen_residual_u@2 ) + ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 1] * frozen ( gen_error_w@1@[-1, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 1, 0] * frozen ( gen_error_v@1@[-1, 1, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[1, 0, 0] ) * gen_error_u@1@[1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[0, 0, 0] * nue ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_u@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[-1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_u@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[0, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_u@1@[-1, 0, 0] ) * gen_error_u@1@[-1, 0, 0] ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@1@[0, -1, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[1, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_u@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[-1, 0, 0] / rho ) ) ) ) )
	gen_rhs_v@1 = ( ( gen_restrictionForRes_v@2 * gen_residual_v@2 ) + ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, 0, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 1] * frozen ( gen_error_w@1@[0, -1, 1] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 1, 0] ) * gen_error_v@1@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, -1, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 0] * nue ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_v@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, -1] * frozen ( gen_error_w@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, 0, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_v@1@[0, -1, 0] ) * gen_error_v@1@[0, -1, 0] ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, -1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_v@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[0, 0, -1] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, 1, 0] * nue ) + ( 0.05000000000000001 * gen_error_v@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, -1, 0] / rho ) ) ) ) )
	gen_rhs_w@1 = ( ( gen_restrictionForRes_w@2 * gen_residual_w@2 ) + ( ( ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, 0] / rho ) ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 1] ) * gen_error_w@1@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 1, 0] * frozen ( gen_error_v@1@[0, 1, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[1, 0, 0] * frozen ( gen_error_u@1@[1, 0, -1] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 0, 0] * nue ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) + ( gen_error_w@1@[0, 0, 0] * ( 6.250000000000001E-5 / dt ) ) ) - ( ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, 0] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, 0] ) + ( 6.250000000000001E-4 * frozen ( gen_error_w@1@[0, 0, -1] ) * gen_error_w@1@[0, 0, -1] ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, -1, 0] * frozen ( gen_error_v@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, 1] * nue ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, -1] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[0, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 6.250000000000001E-4 * gen_error_w@1@[-1, 0, 0] * frozen ( gen_error_u@1@[0, 0, 0] ) ) + ( 0.05000000000000001 * gen_error_w@1@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@1@[-1, 0, 0] * nue ) + ( 0.0025000000000000005 * ( gen_error_p@1@[0, 0, -1] / rho ) ) ) ) )
	gen_rhs_p@1 = ( ( gen_restrictionForRes_p@2 * gen_residual_p@2 ) + ( ( ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 1] ) + ( 0.0025000000000000005 * gen_error_v@1@[0, 1, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[1, 0, 0] ) ) - ( ( 0.0025000000000000005 * gen_error_v@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_u@1@[0, 0, 0] ) + ( 0.0025000000000000005 * gen_error_w@1@[0, 0, 0] ) ) ) )
	gen_mgCycle@1 (  )
	gen_error_u@1 -= gen_approx_u@1
	gen_error_v@1 -= gen_approx_v@1
	gen_error_w@1 -= gen_approx_w@1
	gen_error_p@1 -= gen_approx_p@1
	gen_error_u@2 += ( gen_prolongationForSol_u@1 * gen_error_u@1 )
	gen_error_v@2 += ( gen_prolongationForSol_v@1 * gen_error_v@1 )
	gen_error_w@2 += ( gen_prolongationForSol_w@1 * gen_error_w@1 )
	gen_error_p@2 += ( gen_prolongationForSol_p@1 * gen_error_p@1 )
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@2 relax 1.0 {
				gen_error_u@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@2@[0, 0, 0]
				gen_error_u@2@[1, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[1, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 1] * frozen ( gen_error_w@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 1, 0] * frozen ( gen_error_v@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[2, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[2, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[2, 0, 0] ) * gen_error_u@2@[2, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( gen_error_u@2@[1, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[1, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_w@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, -1] * frozen ( gen_error_w@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, 0, 0] * frozen ( gen_error_v@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[1, -1, 0] * frozen ( gen_error_v@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[1, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[2, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@2@[1, 0, 0]
				gen_error_v@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@2@[0, 0, 0]
				gen_error_v@2@[0, 1, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 1, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 1] * frozen ( gen_error_w@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 2, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 2, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 2, 0] ) * gen_error_v@2@[0, 2, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 1, 0] * frozen ( gen_error_u@2@[1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 1, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 0] * nue ) + ( gen_error_v@2@[0, 1, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 1, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_w@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, -1] * frozen ( gen_error_w@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 1, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 1, 0] * frozen ( gen_error_u@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 1, 0] * frozen ( gen_error_u@2@[0, 1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 1, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 2, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 1, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@2@[0, 1, 0]
				gen_error_w@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@2@[0, 0, 0]
				gen_error_w@2@[0, 0, 1] => ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 1] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 2] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 2] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 2] ) * gen_error_w@2@[0, 0, 2] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 1] * frozen ( gen_error_v@2@[0, 1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 1] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 1] * frozen ( gen_error_u@2@[1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 1] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 1] * nue ) + ( gen_error_w@2@[0, 0, 1] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 1] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 1] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_v@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 1] * frozen ( gen_error_v@2@[0, 0, 1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 2] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 1] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 1] * frozen ( gen_error_u@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 1] * frozen ( gen_error_u@2@[0, 0, 1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 1] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@2@[0, 0, 1]
				gen_error_p@2@[0, 0, 0] => ( ( ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_v@2@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[1, 0, 0] ) ) - ( ( 6.250000000000001E-4 * gen_error_v@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 0] ) ) ) == gen_rhs_p@2@[0, 0, 0]
			}
		}
	}
}

Function gen_mgCycle@3 {
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@3 relax 1.0 {
				gen_error_u@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@3@[0, 0, 0]
				gen_error_u@3@[1, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[1, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 1] * frozen ( gen_error_w@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 1, 0] * frozen ( gen_error_v@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[2, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[2, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[2, 0, 0] ) * gen_error_u@3@[2, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( gen_error_u@3@[1, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[1, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, -1] * frozen ( gen_error_w@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, -1, 0] * frozen ( gen_error_v@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[2, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@3@[1, 0, 0]
				gen_error_v@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@3@[0, 0, 0]
				gen_error_v@3@[0, 1, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 1, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 1] * frozen ( gen_error_w@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 2, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 2, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 2, 0] ) * gen_error_v@3@[0, 2, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 1, 0] * frozen ( gen_error_u@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 1, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( gen_error_v@3@[0, 1, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 1, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, -1] * frozen ( gen_error_w@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 1, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 1, 0] * frozen ( gen_error_u@3@[0, 1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 2, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 1, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@3@[0, 1, 0]
				gen_error_w@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@3@[0, 0, 0]
				gen_error_w@3@[0, 0, 1] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 1] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 2] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 2] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 2] ) * gen_error_w@3@[0, 0, 2] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 1] * frozen ( gen_error_v@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 1] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 1] * frozen ( gen_error_u@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 1] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( gen_error_w@3@[0, 0, 1] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 1] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 1] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 1] * frozen ( gen_error_v@3@[0, 0, 1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 2] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 1] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 1] * frozen ( gen_error_u@3@[0, 0, 1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 1] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@3@[0, 0, 1]
				gen_error_p@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_v@3@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[1, 0, 0] ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 0] ) ) ) == gen_rhs_p@3@[0, 0, 0]
			}
		}
	}
	gen_residual_u@3 = ( gen_rhs_u@3 - ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[-1, 0, 0] / rho ) ) ) ) )
	gen_residual_v@3 = ( gen_rhs_v@3 - ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, -1, 0] / rho ) ) ) ) )
	gen_residual_w@3 = ( gen_rhs_w@3 - ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, -1] / rho ) ) ) ) )
	gen_residual_p@3 = ( gen_rhs_p@3 - ( ( ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_v@3@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[1, 0, 0] ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 0] ) ) ) )
	gen_approx_u@2 = ( gen_restrictionForSol_u@3 * gen_error_u@3 )
	gen_approx_v@2 = ( gen_restrictionForSol_v@3 * gen_error_v@3 )
	gen_approx_w@2 = ( gen_restrictionForSol_w@3 * gen_error_w@3 )
	gen_approx_p@2 = ( gen_restrictionForSol_p@3 * gen_error_p@3 )
	gen_error_u@2 = gen_approx_u@2
	gen_error_v@2 = gen_approx_v@2
	gen_error_w@2 = gen_approx_w@2
	gen_error_p@2 = gen_approx_p@2
	gen_rhs_u@2 = ( ( gen_restrictionForRes_u@3 * gen_residual_u@3 ) + ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 1] * frozen ( gen_error_w@2@[-1, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 1, 0] * frozen ( gen_error_v@2@[-1, 1, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[1, 0, 0] ) * gen_error_u@2@[1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[0, 0, 0] * nue ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_u@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[-1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_u@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[0, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_u@2@[-1, 0, 0] ) * gen_error_u@2@[-1, 0, 0] ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@2@[0, -1, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[1, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_u@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[-1, 0, 0] / rho ) ) ) ) )
	gen_rhs_v@2 = ( ( gen_restrictionForRes_v@3 * gen_residual_v@3 ) + ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, 0, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 1] * frozen ( gen_error_w@2@[0, -1, 1] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 1, 0] ) * gen_error_v@2@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, -1, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 0] * nue ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_v@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, -1] * frozen ( gen_error_w@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, 0, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_v@2@[0, -1, 0] ) * gen_error_v@2@[0, -1, 0] ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, -1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_v@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[0, 0, -1] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, 1, 0] * nue ) + ( 0.025000000000000005 * gen_error_v@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, -1, 0] / rho ) ) ) ) )
	gen_rhs_w@2 = ( ( gen_restrictionForRes_w@3 * gen_residual_w@3 ) + ( ( ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, 0] / rho ) ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 1] ) * gen_error_w@2@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 1, 0] * frozen ( gen_error_v@2@[0, 1, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[1, 0, 0] * frozen ( gen_error_u@2@[1, 0, -1] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 0, 0] * nue ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) + ( gen_error_w@2@[0, 0, 0] * ( 7.812500000000002E-6 / dt ) ) ) - ( ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, 0] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, 0] ) + ( 1.5625000000000003E-4 * frozen ( gen_error_w@2@[0, 0, -1] ) * gen_error_w@2@[0, 0, -1] ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, -1, 0] * frozen ( gen_error_v@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, 1] * nue ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, -1] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[0, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 1.5625000000000003E-4 * gen_error_w@2@[-1, 0, 0] * frozen ( gen_error_u@2@[0, 0, 0] ) ) + ( 0.025000000000000005 * gen_error_w@2@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@2@[-1, 0, 0] * nue ) + ( 6.250000000000001E-4 * ( gen_error_p@2@[0, 0, -1] / rho ) ) ) ) )
	gen_rhs_p@2 = ( ( gen_restrictionForRes_p@3 * gen_residual_p@3 ) + ( ( ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 1] ) + ( 6.250000000000001E-4 * gen_error_v@2@[0, 1, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[1, 0, 0] ) ) - ( ( 6.250000000000001E-4 * gen_error_v@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_u@2@[0, 0, 0] ) + ( 6.250000000000001E-4 * gen_error_w@2@[0, 0, 0] ) ) ) )
	gen_mgCycle@2 (  )
	gen_error_u@2 -= gen_approx_u@2
	gen_error_v@2 -= gen_approx_v@2
	gen_error_w@2 -= gen_approx_w@2
	gen_error_p@2 -= gen_approx_p@2
	gen_error_u@3 += ( gen_prolongationForSol_u@2 * gen_error_u@2 )
	gen_error_v@3 += ( gen_prolongationForSol_v@2 * gen_error_v@2 )
	gen_error_w@3 += ( gen_prolongationForSol_w@2 * gen_error_w@2 )
	gen_error_p@3 += ( gen_prolongationForSol_p@2 * gen_error_p@2 )
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@3 relax 1.0 {
				gen_error_u@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@3@[0, 0, 0]
				gen_error_u@3@[1, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[1, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 1] * frozen ( gen_error_w@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 1, 0] * frozen ( gen_error_v@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[2, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[2, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[2, 0, 0] ) * gen_error_u@3@[2, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( gen_error_u@3@[1, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[1, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_w@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, -1] * frozen ( gen_error_w@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, 0, 0] * frozen ( gen_error_v@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[1, -1, 0] * frozen ( gen_error_v@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[1, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[2, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@3@[1, 0, 0]
				gen_error_v@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@3@[0, 0, 0]
				gen_error_v@3@[0, 1, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 1, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 1] * frozen ( gen_error_w@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 2, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 2, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 2, 0] ) * gen_error_v@3@[0, 2, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 1, 0] * frozen ( gen_error_u@3@[1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 1, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 0] * nue ) + ( gen_error_v@3@[0, 1, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 1, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_w@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, -1] * frozen ( gen_error_w@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 1, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 1, 0] * frozen ( gen_error_u@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 1, 0] * frozen ( gen_error_u@3@[0, 1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 1, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 2, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 1, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@3@[0, 1, 0]
				gen_error_w@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@3@[0, 0, 0]
				gen_error_w@3@[0, 0, 1] => ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 1] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 2] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 2] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 2] ) * gen_error_w@3@[0, 0, 2] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 1] * frozen ( gen_error_v@3@[0, 1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 1] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 1] * frozen ( gen_error_u@3@[1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 1] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 1] * nue ) + ( gen_error_w@3@[0, 0, 1] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 1] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 1] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_v@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 1] * frozen ( gen_error_v@3@[0, 0, 1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 2] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 1] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 1] * frozen ( gen_error_u@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 1] * frozen ( gen_error_u@3@[0, 0, 1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 1] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@3@[0, 0, 1]
				gen_error_p@3@[0, 0, 0] => ( ( ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_v@3@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[1, 0, 0] ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 0] ) ) ) == gen_rhs_p@3@[0, 0, 0]
			}
		}
	}
}

Function gen_mgCycle@4 {
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@4 relax 1.0 {
				gen_error_u@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@4@[0, 0, 0]
				gen_error_u@4@[1, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[1, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 1] * frozen ( gen_error_w@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 1, 0] * frozen ( gen_error_v@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[2, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[2, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[2, 0, 0] ) * gen_error_u@4@[2, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( gen_error_u@4@[1, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[1, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, -1] * frozen ( gen_error_w@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, -1, 0] * frozen ( gen_error_v@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[2, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@4@[1, 0, 0]
				gen_error_v@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@4@[0, 0, 0]
				gen_error_v@4@[0, 1, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 1, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 1] * frozen ( gen_error_w@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 2, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 2, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 2, 0] ) * gen_error_v@4@[0, 2, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 1, 0] * frozen ( gen_error_u@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 1, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( gen_error_v@4@[0, 1, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 1, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, -1] * frozen ( gen_error_w@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 1, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 1, 0] * frozen ( gen_error_u@4@[0, 1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 2, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 1, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@4@[0, 1, 0]
				gen_error_w@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@4@[0, 0, 0]
				gen_error_w@4@[0, 0, 1] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 1] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 2] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 2] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 2] ) * gen_error_w@4@[0, 0, 2] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 1] * frozen ( gen_error_v@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 1] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 1] * frozen ( gen_error_u@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 1] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( gen_error_w@4@[0, 0, 1] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 1] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 1] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 1] * frozen ( gen_error_v@4@[0, 0, 1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 2] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 1] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 1] * frozen ( gen_error_u@4@[0, 0, 1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 1] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@4@[0, 0, 1]
				gen_error_p@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_v@4@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[1, 0, 0] ) ) - ( ( 3.906250000000001E-5 * gen_error_v@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 0] ) ) ) == gen_rhs_p@4@[0, 0, 0]
			}
		}
	}
	gen_residual_u@4 = ( gen_rhs_u@4 - ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[-1, 0, 0] / rho ) ) ) ) )
	gen_residual_v@4 = ( gen_rhs_v@4 - ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, -1, 0] / rho ) ) ) ) )
	gen_residual_w@4 = ( gen_rhs_w@4 - ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, -1] / rho ) ) ) ) )
	gen_residual_p@4 = ( gen_rhs_p@4 - ( ( ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_v@4@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[1, 0, 0] ) ) - ( ( 3.906250000000001E-5 * gen_error_v@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 0] ) ) ) )
	gen_approx_u@3 = ( gen_restrictionForSol_u@4 * gen_error_u@4 )
	gen_approx_v@3 = ( gen_restrictionForSol_v@4 * gen_error_v@4 )
	gen_approx_w@3 = ( gen_restrictionForSol_w@4 * gen_error_w@4 )
	gen_approx_p@3 = ( gen_restrictionForSol_p@4 * gen_error_p@4 )
	gen_error_u@3 = gen_approx_u@3
	gen_error_v@3 = gen_approx_v@3
	gen_error_w@3 = gen_approx_w@3
	gen_error_p@3 = gen_approx_p@3
	gen_rhs_u@3 = ( ( gen_restrictionForRes_u@4 * gen_residual_u@4 ) + ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 1] * frozen ( gen_error_w@3@[-1, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 1, 0] * frozen ( gen_error_v@3@[-1, 1, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[1, 0, 0] ) * gen_error_u@3@[1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[0, 0, 0] * nue ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_u@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[-1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_u@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[0, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_u@3@[-1, 0, 0] ) * gen_error_u@3@[-1, 0, 0] ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@3@[0, -1, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[1, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_u@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[-1, 0, 0] / rho ) ) ) ) )
	gen_rhs_v@3 = ( ( gen_restrictionForRes_v@4 * gen_residual_v@4 ) + ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, 0, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 1] * frozen ( gen_error_w@3@[0, -1, 1] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 1, 0] ) * gen_error_v@3@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, -1, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 0] * nue ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_v@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, -1] * frozen ( gen_error_w@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, 0, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_v@3@[0, -1, 0] ) * gen_error_v@3@[0, -1, 0] ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, -1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_v@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[0, 0, -1] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, 1, 0] * nue ) + ( 0.012500000000000002 * gen_error_v@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, -1, 0] / rho ) ) ) ) )
	gen_rhs_w@3 = ( ( gen_restrictionForRes_w@4 * gen_residual_w@4 ) + ( ( ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, 0] / rho ) ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 1] ) * gen_error_w@3@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 1, 0] * frozen ( gen_error_v@3@[0, 1, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[1, 0, 0] * frozen ( gen_error_u@3@[1, 0, -1] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 0, 0] * nue ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) + ( gen_error_w@3@[0, 0, 0] * ( 9.765625000000002E-7 / dt ) ) ) - ( ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, 0] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, 0] ) + ( 3.906250000000001E-5 * frozen ( gen_error_w@3@[0, 0, -1] ) * gen_error_w@3@[0, 0, -1] ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, -1, 0] * frozen ( gen_error_v@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, 1] * nue ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, -1] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[0, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 3.906250000000001E-5 * gen_error_w@3@[-1, 0, 0] * frozen ( gen_error_u@3@[0, 0, 0] ) ) + ( 0.012500000000000002 * gen_error_w@3@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@3@[-1, 0, 0] * nue ) + ( 1.5625000000000003E-4 * ( gen_error_p@3@[0, 0, -1] / rho ) ) ) ) )
	gen_rhs_p@3 = ( ( gen_restrictionForRes_p@4 * gen_residual_p@4 ) + ( ( ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 1] ) + ( 1.5625000000000003E-4 * gen_error_v@3@[0, 1, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[1, 0, 0] ) ) - ( ( 1.5625000000000003E-4 * gen_error_v@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_u@3@[0, 0, 0] ) + ( 1.5625000000000003E-4 * gen_error_w@3@[0, 0, 0] ) ) ) )
	gen_mgCycle@3 (  )
	gen_error_u@3 -= gen_approx_u@3
	gen_error_v@3 -= gen_approx_v@3
	gen_error_w@3 -= gen_approx_w@3
	gen_error_p@3 -= gen_approx_p@3
	gen_error_u@4 += ( gen_prolongationForSol_u@3 * gen_error_u@3 )
	gen_error_v@4 += ( gen_prolongationForSol_v@3 * gen_error_v@3 )
	gen_error_w@4 += ( gen_prolongationForSol_w@3 * gen_error_w@3 )
	gen_error_p@4 += ( gen_prolongationForSol_p@3 * gen_error_p@3 )
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@4 relax 1.0 {
				gen_error_u@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@4@[0, 0, 0]
				gen_error_u@4@[1, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[1, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 1] * frozen ( gen_error_w@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 1, 0] * frozen ( gen_error_v@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[2, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[2, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[2, 0, 0] ) * gen_error_u@4@[2, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( gen_error_u@4@[1, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[1, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_w@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, -1] * frozen ( gen_error_w@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, 0, 0] * frozen ( gen_error_v@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[1, -1, 0] * frozen ( gen_error_v@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[1, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[2, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@4@[1, 0, 0]
				gen_error_v@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@4@[0, 0, 0]
				gen_error_v@4@[0, 1, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 1, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 1] * frozen ( gen_error_w@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 2, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 2, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 2, 0] ) * gen_error_v@4@[0, 2, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 1, 0] * frozen ( gen_error_u@4@[1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 1, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 0] * nue ) + ( gen_error_v@4@[0, 1, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 1, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_w@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, -1] * frozen ( gen_error_w@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 1, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 1, 0] * frozen ( gen_error_u@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 1, 0] * frozen ( gen_error_u@4@[0, 1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 1, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 2, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 1, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@4@[0, 1, 0]
				gen_error_w@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@4@[0, 0, 0]
				gen_error_w@4@[0, 0, 1] => ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 1] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 2] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 2] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 2] ) * gen_error_w@4@[0, 0, 2] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 1] * frozen ( gen_error_v@4@[0, 1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 1] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 1] * frozen ( gen_error_u@4@[1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 1] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 1] * nue ) + ( gen_error_w@4@[0, 0, 1] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 1] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 1] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_v@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 1] * frozen ( gen_error_v@4@[0, 0, 1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 2] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 1] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 1] * frozen ( gen_error_u@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 1] * frozen ( gen_error_u@4@[0, 0, 1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 1] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@4@[0, 0, 1]
				gen_error_p@4@[0, 0, 0] => ( ( ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_v@4@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[1, 0, 0] ) ) - ( ( 3.906250000000001E-5 * gen_error_v@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 0] ) ) ) == gen_rhs_p@4@[0, 0, 0]
			}
		}
	}
}

Function gen_mgCycle@5 {
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@5 relax 1.0 {
				gen_error_u@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@5@[0, 0, 0]
				gen_error_u@5@[1, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[1, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 1] * frozen ( gen_error_w@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 1, 0] * frozen ( gen_error_v@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[2, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[2, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[2, 0, 0] ) * gen_error_u@5@[2, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( gen_error_u@5@[1, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[1, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, -1] * frozen ( gen_error_w@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, -1, 0] * frozen ( gen_error_v@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[2, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@5@[1, 0, 0]
				gen_error_v@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@5@[0, 0, 0]
				gen_error_v@5@[0, 1, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 1, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 1] * frozen ( gen_error_w@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 2, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 2, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 2, 0] ) * gen_error_v@5@[0, 2, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 1, 0] * frozen ( gen_error_u@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 1, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( gen_error_v@5@[0, 1, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 1, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, -1] * frozen ( gen_error_w@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 1, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 1, 0] * frozen ( gen_error_u@5@[0, 1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 2, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 1, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@5@[0, 1, 0]
				gen_error_w@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@5@[0, 0, 0]
				gen_error_w@5@[0, 0, 1] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 1] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 2] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 2] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 2] ) * gen_error_w@5@[0, 0, 2] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 1] * frozen ( gen_error_v@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 1] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 1] * frozen ( gen_error_u@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 1] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( gen_error_w@5@[0, 0, 1] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 1] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 1] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 1] * frozen ( gen_error_v@5@[0, 0, 1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 2] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 1] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 1] * frozen ( gen_error_u@5@[0, 0, 1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 1] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@5@[0, 0, 1]
				gen_error_p@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_v@5@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[1, 0, 0] ) ) - ( ( 9.765625000000002E-6 * gen_error_v@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 0] ) ) ) == gen_rhs_p@5@[0, 0, 0]
			}
		}
	}
	gen_residual_u@5 = ( gen_rhs_u@5 - ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[-1, 0, 0] / rho ) ) ) ) )
	gen_residual_v@5 = ( gen_rhs_v@5 - ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, -1, 0] / rho ) ) ) ) )
	gen_residual_w@5 = ( gen_rhs_w@5 - ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, -1] / rho ) ) ) ) )
	gen_residual_p@5 = ( gen_rhs_p@5 - ( ( ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_v@5@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[1, 0, 0] ) ) - ( ( 9.765625000000002E-6 * gen_error_v@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 0] ) ) ) )
	gen_approx_u@4 = ( gen_restrictionForSol_u@5 * gen_error_u@5 )
	gen_approx_v@4 = ( gen_restrictionForSol_v@5 * gen_error_v@5 )
	gen_approx_w@4 = ( gen_restrictionForSol_w@5 * gen_error_w@5 )
	gen_approx_p@4 = ( gen_restrictionForSol_p@5 * gen_error_p@5 )
	gen_error_u@4 = gen_approx_u@4
	gen_error_v@4 = gen_approx_v@4
	gen_error_w@4 = gen_approx_w@4
	gen_error_p@4 = gen_approx_p@4
	gen_rhs_u@4 = ( ( gen_restrictionForRes_u@5 * gen_residual_u@5 ) + ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 1] * frozen ( gen_error_w@4@[-1, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 1, 0] * frozen ( gen_error_v@4@[-1, 1, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[1, 0, 0] ) * gen_error_u@4@[1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[0, 0, 0] * nue ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_u@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[-1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_u@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[0, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_u@4@[-1, 0, 0] ) * gen_error_u@4@[-1, 0, 0] ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@4@[0, -1, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[1, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_u@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[-1, 0, 0] / rho ) ) ) ) )
	gen_rhs_v@4 = ( ( gen_restrictionForRes_v@5 * gen_residual_v@5 ) + ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, 0, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 1] * frozen ( gen_error_w@4@[0, -1, 1] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 1, 0] ) * gen_error_v@4@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, -1, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 0] * nue ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_v@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, -1] * frozen ( gen_error_w@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, 0, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_v@4@[0, -1, 0] ) * gen_error_v@4@[0, -1, 0] ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, -1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_v@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[0, 0, -1] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, 1, 0] * nue ) + ( 0.006250000000000001 * gen_error_v@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, -1, 0] / rho ) ) ) ) )
	gen_rhs_w@4 = ( ( gen_restrictionForRes_w@5 * gen_residual_w@5 ) + ( ( ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, 0] / rho ) ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 1] ) * gen_error_w@4@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 1, 0] * frozen ( gen_error_v@4@[0, 1, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[1, 0, 0] * frozen ( gen_error_u@4@[1, 0, -1] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 0, 0] * nue ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) + ( gen_error_w@4@[0, 0, 0] * ( 1.2207031250000003E-7 / dt ) ) ) - ( ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, 0] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, 0] ) + ( 9.765625000000002E-6 * frozen ( gen_error_w@4@[0, 0, -1] ) * gen_error_w@4@[0, 0, -1] ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, -1, 0] * frozen ( gen_error_v@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, 1] * nue ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, -1] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[0, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 9.765625000000002E-6 * gen_error_w@4@[-1, 0, 0] * frozen ( gen_error_u@4@[0, 0, 0] ) ) + ( 0.006250000000000001 * gen_error_w@4@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@4@[-1, 0, 0] * nue ) + ( 3.906250000000001E-5 * ( gen_error_p@4@[0, 0, -1] / rho ) ) ) ) )
	gen_rhs_p@4 = ( ( gen_restrictionForRes_p@5 * gen_residual_p@5 ) + ( ( ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 1] ) + ( 3.906250000000001E-5 * gen_error_v@4@[0, 1, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[1, 0, 0] ) ) - ( ( 3.906250000000001E-5 * gen_error_v@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_u@4@[0, 0, 0] ) + ( 3.906250000000001E-5 * gen_error_w@4@[0, 0, 0] ) ) ) )
	gen_mgCycle@4 (  )
	gen_error_u@4 -= gen_approx_u@4
	gen_error_v@4 -= gen_approx_v@4
	gen_error_w@4 -= gen_approx_w@4
	gen_error_p@4 -= gen_approx_p@4
	gen_error_u@5 += ( gen_prolongationForSol_u@4 * gen_error_u@4 )
	gen_error_v@5 += ( gen_prolongationForSol_v@4 * gen_error_v@4 )
	gen_error_w@5 += ( gen_prolongationForSol_w@4 * gen_error_w@4 )
	gen_error_p@5 += ( gen_prolongationForSol_p@4 * gen_error_p@4 )
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at gen_error_p@5 relax 1.0 {
				gen_error_u@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[-1, 0, 0] / rho ) ) ) ) == gen_rhs_u@5@[0, 0, 0]
				gen_error_u@5@[1, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[1, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 1] * frozen ( gen_error_w@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 1, 0] * frozen ( gen_error_v@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[2, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[2, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[2, 0, 0] ) * gen_error_u@5@[2, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( gen_error_u@5@[1, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[1, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_w@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, -1] * frozen ( gen_error_w@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, 0, 0] * frozen ( gen_error_v@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[1, -1, 0] * frozen ( gen_error_v@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[1, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[2, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_u@5@[1, 0, 0]
				gen_error_v@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, -1, 0] / rho ) ) ) ) == gen_rhs_v@5@[0, 0, 0]
				gen_error_v@5@[0, 1, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 1, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 1] * frozen ( gen_error_w@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 2, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 2, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 2, 0] ) * gen_error_v@5@[0, 2, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 1, 0] * frozen ( gen_error_u@5@[1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 1, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 0] * nue ) + ( gen_error_v@5@[0, 1, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 1, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_w@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, -1] * frozen ( gen_error_w@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 1, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 1, 0] * frozen ( gen_error_u@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 1, 0] * frozen ( gen_error_u@5@[0, 1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 1, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 2, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 1, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_v@5@[0, 1, 0]
				gen_error_w@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, -1] / rho ) ) ) ) == gen_rhs_w@5@[0, 0, 0]
				gen_error_w@5@[0, 0, 1] => ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 1] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 2] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 2] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 2] ) * gen_error_w@5@[0, 0, 2] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 1] * frozen ( gen_error_v@5@[0, 1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 1] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 1] * frozen ( gen_error_u@5@[1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 1] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 1] * nue ) + ( gen_error_w@5@[0, 0, 1] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 1] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 1] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_v@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 1] * frozen ( gen_error_v@5@[0, 0, 1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 2] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 1] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 1] * frozen ( gen_error_u@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 1] * frozen ( gen_error_u@5@[0, 0, 1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 1] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) ) ) == gen_rhs_w@5@[0, 0, 1]
				gen_error_p@5@[0, 0, 0] => ( ( ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_v@5@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[1, 0, 0] ) ) - ( ( 9.765625000000002E-6 * gen_error_v@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 0] ) ) ) == gen_rhs_p@5@[0, 0, 0]
			}
		}
	}
}

Function gen_mgCycle@6 {
	startTimer ( "cycle" )
	totalNumCycles += 1
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at p@6 relax 1.0 {
				u@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6@[0, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) )
				u@6@[1, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[1, 0, 0] - uOld@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[1, 0, 0] - u@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[2, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[2, 0, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[2, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[1, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 1, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 1, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[1, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[1, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 1] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 1] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[1, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[1, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) )
				v@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6@[0, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) )
				v@6@[0, 1, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 1, 0] - vOld@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 1, 0] - v@6@[-1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 2, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 1, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 1, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[-1, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[-1, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 1, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 1, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 1, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 2, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 2, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 1, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 1, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 1, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 1] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 1] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 1, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 1, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) )
				w@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) )
				w@6@[0, 0, 1] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 1] - wOld@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 1] - w@6@[-1, 0, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[1, 0, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, -1, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 1, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 0, 2] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[-1, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[-1, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 1] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 1] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, -1, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, -1, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 1] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 1] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 2] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 2] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 1] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) )
				p@6@[0, 0, 0] => ( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) == 0.0
			}
		}
	}
	gen_residual_u@6 = ( ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6 ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) )
	gen_residual_v@6 = ( ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6 ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) )
	gen_residual_w@6 = ( ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6 ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) )
	gen_residual_p@6 = ( 0.0 - ( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) )
	gen_approx_u@5 = ( gen_restrictionForSol_u@6 * u@6 )
	gen_approx_v@5 = ( gen_restrictionForSol_v@6 * v@6 )
	gen_approx_w@5 = ( gen_restrictionForSol_w@6 * w@6 )
	gen_approx_p@5 = ( gen_restrictionForSol_p@6 * p@6 )
	gen_error_u@5 = gen_approx_u@5
	gen_error_v@5 = gen_approx_v@5
	gen_error_w@5 = gen_approx_w@5
	gen_error_p@5 = gen_approx_p@5
	gen_rhs_u@5 = ( ( gen_restrictionForRes_u@6 * gen_residual_u@6 ) + ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 1] * frozen ( gen_error_w@5@[-1, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 1, 0] * frozen ( gen_error_v@5@[-1, 1, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[1, 0, 0] ) * gen_error_u@5@[1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[0, 0, 0] * nue ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_u@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[-1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_u@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[0, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_u@5@[-1, 0, 0] ) * gen_error_u@5@[-1, 0, 0] ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_u@5@[0, -1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[1, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_u@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[-1, 0, 0] / rho ) ) ) ) )
	gen_rhs_v@5 = ( ( gen_restrictionForRes_v@6 * gen_residual_v@6 ) + ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, 0, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 1] * frozen ( gen_error_w@5@[0, -1, 1] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 1, 0] ) * gen_error_v@5@[0, 1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, -1, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 0] * nue ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_v@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, -1] * frozen ( gen_error_w@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, 0, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_v@5@[0, -1, 0] ) * gen_error_v@5@[0, -1, 0] ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, -1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_v@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, 1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[0, 0, -1] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, 1, 0] * nue ) + ( 0.0031250000000000006 * gen_error_v@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_v@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, -1, 0] / rho ) ) ) ) )
	gen_rhs_w@5 = ( ( gen_restrictionForRes_w@6 * gen_residual_w@6 ) + ( ( ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, 0] / rho ) ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 1] ) * gen_error_w@5@[0, 0, 1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 1, 0] * frozen ( gen_error_v@5@[0, 1, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[1, 0, 0] * frozen ( gen_error_u@5@[1, 0, -1] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 0, 0] * nue ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) + ( gen_error_w@5@[0, 0, 0] * ( 1.5258789062500004E-8 / dt ) ) ) - ( ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, 0] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, 0] ) + ( 2.4414062500000005E-6 * frozen ( gen_error_w@5@[0, 0, -1] ) * gen_error_w@5@[0, 0, -1] ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, -1, 0] * frozen ( gen_error_v@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, 1] * nue ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, -1] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[0, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 2.4414062500000005E-6 * gen_error_w@5@[-1, 0, 0] * frozen ( gen_error_u@5@[0, 0, 0] ) ) + ( 0.0031250000000000006 * gen_error_w@5@[0, 0, -1] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, 1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[0, -1, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 0.0015625000000000003 * gen_error_w@5@[-1, 0, 0] * nue ) + ( 9.765625000000002E-6 * ( gen_error_p@5@[0, 0, -1] / rho ) ) ) ) )
	gen_rhs_p@5 = ( ( gen_restrictionForRes_p@6 * gen_residual_p@6 ) + ( ( ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 1] ) + ( 9.765625000000002E-6 * gen_error_v@5@[0, 1, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[1, 0, 0] ) ) - ( ( 9.765625000000002E-6 * gen_error_v@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_u@5@[0, 0, 0] ) + ( 9.765625000000002E-6 * gen_error_w@5@[0, 0, 0] ) ) ) )
	gen_mgCycle@5 (  )
	gen_error_u@5 -= gen_approx_u@5
	gen_error_v@5 -= gen_approx_v@5
	gen_error_w@5 -= gen_approx_w@5
	gen_error_p@5 -= gen_approx_p@5
	u@6 += ( gen_prolongationForSol_u@5 * gen_error_u@5 )
	v@6 += ( gen_prolongationForSol_v@5 * gen_error_v@5 )
	w@6 += ( gen_prolongationForSol_w@5 * gen_error_w@5 )
	p@6 += ( gen_prolongationForSol_p@5 * gen_error_p@5 )
	repeat 3 times {
		color with {
			( ( i0 + i1 + i2 ) % 2 ),
			solve locally at p@6 relax 1.0 {
				u@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[0, 0, 0] - uOld@6@[0, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[0, 0, 0] - u@6@[-1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[1, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[0, 0, 0] - u@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[-1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[-1, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 1, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 0] ) + ( 0.5 * u@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[-1, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[0, 0, 1] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[-1, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) )
				u@6@[1, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( u@6@[1, 0, 0] - uOld@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) ) / dt ) + ( ( ( u@6@[1, 0, 0] - u@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[2, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, -1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( u@6@[1, 0, 0] - u@6@[1, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[2, 0, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( u@6@[2, 0, 0] ) ) + ( 0.5 * frozen ( u@6@[1, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[1, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 1, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 1, 0] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[1, 1, 0] ) ) ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 0] ) + ( 0.5 * u@6@[1, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[1, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 1] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * u@6@[1, 0, 1] ) + ( 0.5 * u@6@[1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[1, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[1, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_x * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * 0.0015625 ) )
				v@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 0, 0] - vOld@6@[0, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 0, 0] - v@6@[-1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[1, 0, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, -1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 1, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 0, 0] - v@6@[0, 0, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, -1, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 0, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( v@6@[0, -1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 0] ) + ( 0.5 * v@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, -1, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 0, 1] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, -1, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) )
				v@6@[0, 1, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( v@6@[0, 1, 0] - vOld@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) ) / dt ) + ( ( ( v@6@[0, 1, 0] - v@6@[-1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[1, 1, 0] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 2, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 1, -1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( v@6@[0, 1, 0] - v@6@[0, 1, 1] ) * ( ( ( 0.5 * ( 0.0015625 + 0.0015625 ) ) * 0.0015625 ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) - ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[-1, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[-1, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 1, 0] ) ) ) ) ) ) + ( 0.0015625 * ( ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 1, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) + ( ( 0.5 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[1, 1, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * v@6@[0, 2, 0] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( v@6@[0, 2, 0] ) ) + ( 0.5 * frozen ( v@6@[0, 1, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 1, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 0] ) + ( 0.5 * v@6@[0, 1, -1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 1, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 1] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 0, 1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * v@6@[0, 1, 1] ) + ( 0.5 * v@6@[0, 1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( w@6@[0, 1, 1] ) ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 1, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_y * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * 0.0015625 ) )
				w@6@[0, 0, 0] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 0] - wOld@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 0] - w@6@[-1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[1, 0, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, -1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 1, 0] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, -1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 0] - w@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[-1, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, -1, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, -1] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 0] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 0] ) + ( 0.5 * w@6@[0, 0, -1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) + ( 0.5 * frozen ( w@6@[0, 0, -1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, -1] / rho ) ) ) == ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) )
				w@6@[0, 0, 1] => ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( w@6@[0, 0, 1] - wOld@6@[0, 0, 1] ) * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) / dt ) + ( ( ( w@6@[0, 0, 1] - w@6@[-1, 0, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[1, 0, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, -1, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 1, 1] ) * ( ( 0.0015625 * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) * nue ) ) / ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 0, 0] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) + ( ( ( w@6@[0, 0, 1] - w@6@[0, 0, 2] ) * ( ( 0.0015625 * 0.0015625 ) * nue ) ) / 0.0015625 ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[-1, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[-1, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[0, 0, 1] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[1, 0, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( u@6@[1, 0, 1] ) ) ) ) ) ) - ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, -1, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, -1, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 0, 1] ) ) ) ) ) ) + ( ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 0] ) ) ) ) + ( ( 0.5 * 0.0015625 ) * ( 0.0015625 * ( ( ( ( 0.5 * w@6@[0, 1, 1] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * frozen ( v@6@[0, 1, 1] ) ) ) ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 1] ) + ( 0.5 * w@6@[0, 0, 0] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 0] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( ( ( ( 0.5 * w@6@[0, 0, 2] ) + ( 0.5 * w@6@[0, 0, 1] ) ) / ( 0.5 + 0.5 ) ) * ( ( ( 0.5 * frozen ( w@6@[0, 0, 2] ) ) + ( 0.5 * frozen ( w@6@[0, 0, 1] ) ) ) / ( 0.5 + 0.5 ) ) ) ) ) + ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 1] / rho ) ) ) - ( ( 0.0015625 * 0.0015625 ) * ( p@6@[0, 0, 0] / rho ) ) ) == ( gravity_z * ( ( 0.0015625 * 0.0015625 ) * ( 0.5 * ( 0.0015625 + 0.0015625 ) ) ) )
				p@6@[0, 0, 0] => ( ( ( ( ( ( ( 0.0015625 * 0.0015625 ) * u@6@[1, 0, 0] ) - ( ( 0.0015625 * 0.0015625 ) * u@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 1, 0] ) ) - ( ( 0.0015625 * 0.0015625 ) * v@6@[0, 0, 0] ) ) + ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 1] ) ) - ( ( 0.0015625 * 0.0015625 ) * w@6@[0, 0, 0] ) ) == 0.0
			}
		}
	}
	stopTimer ( "cycle" )
}

