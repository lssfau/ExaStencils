
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Globals {
	
}

/// main function

Function Application ( ) : Unit {

	// input matrices
	
	// should say filled
	classifyMatShape({{1,2},{3,4}})
	
	// should say diag
	classifyMatShape({{1, 0,   0},
    					   {0, -1, 0},
    				           {0,  0, 3}})
	

	// should say blockdiag, 2
	classifyMatShape({{1,  2, 0, 0},
 	   					{1, -1, 0, 0},
    						{0,  0, 3, 2},
 						{0,  0, 3, 2}})
	
	// should say schur, 4, blockdiag, 2
	classifyMatShape({{1,  2, 0, 0, 1},
	   				     {1, -1, 0, 0, 1},
    					     {0,  0, 3, 2, 1},
    					     {0,  0, 3, 2, 1},
    					     {1,  2, 3, 2, 1}})
	
	// should say schur, 9 blockdiag, 3
	classifyMatShape({{1.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0}, {4.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 1.0}, {1.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 5.0},{0.0, 0.0, 0.0, 4.0, 1.0, 3.0, 0.0, 0.0, 0.0, 3.0, 2.0}, {0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 5.0, 3.0}, {0.0, 0.0, 0.0, 4.0, 6.0, 7.0, 0.0, 0.0, 0.0, 7.0, 3.0},{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3.0, 5.0, 7.0, 4.0, 5.0},{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 1.0, 3.0, 1.0, 5.0}, {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 12.0, 5.0, 5.0, 5.0}, {4.0, 1.0, 7.0, 2.0, 4.0, 6.0, 2.0, 1.0, 5.0, 8.0, 1.0}, {4.0, 1.0, 7.0, 2.0, 5.0, 7.0, 2.0, 2.0, 1.0, 8.0, 4.0}})
	

	// Filled
	
	classifyMatShape({{1,  2, 0, 0},
 	   					{1, -1, 0, 0},
    						{0,  1, 3, 2},
 						{0,  0, 3, 2}})
	
	// Filled

	
	classifyMatShape({{1,  2, 0, 1},
 	   					{1, -1, 0, 1},
    						{0,  0, 3, 2},
 						{1,  1, 3, 2}})
	
	// Blockdiagonal
	
	classifyMatShape({{1,  2, 0, 0},
 	   					{0, -1, 0, 0},
    						{0,  0, 3, 2},
 						{0,  0, 3, 2}})
	
	// Schur, 4, Diagonal

	
	classifyMatShape({{1,  0, 0, 0, 1},
	   				     {0, 0, 0, 0, 0},
    					     {0,  0, 3, 0, 1},
    					     {0,  0, 0, 2, 1},
    					     {1,  0, 3, 2, 1}})
	// Filled
	
	classifyMatShape({{1,  1, 1, 0, 0},
	   				     {0, 1, 1, 0, 0},
    					     {1,  1, 3, 0, 0},
    					     {0,  0, 0, 2, 1},
    					     {0,  0, 0, 2, 1}})
	// Filled
	
	classifyMatShape({{1,  0, 0, 0, 1},
	   				     {0, 0, 0, 0, 0},
    					     {0,  0, 3, 0, 1},
    					     {0,  0, 0, 2, 1},
    					     {1,  0, 3, 2, 1}})

/*
	// runtime determine structure tests
	// blockdiagonal
	Var t1 : Matrix<Double, 6, 6> = {{12.13, 2, 1.13, 0, 0, 0}, {4.13, 3, 4.113, 0, 0, 0}, {3.13, 3.141, 1, 0, 0, 0}, {0, 0, 0, 1.214, 4.52, 6.35},{0, 0, 0, 3.345, -1.345, 6.534}, {0, 0, 0, 4.435, 1.34, 3.13}}
	Var t_inverse : Matrix<Real, 6, 6> 
	t_inverse = inverse(t1, "DetermineRuntime")
	Var t_solution : Matrix<Double, 6, 6> = {{0.10041312053975431802,-0.01568445517737215864,-0.048956662065390690905,0,0,0	},{-0.088515689936835386734,-0.08699121025519204841,0.45781757740822888212,0,0,0},{-0.036265285197831065708,0.32233173611673308059,-0.28477065837457405616,0,0,0},{0,0,0,-0.09657015674202578739	,-0.04199793803709922053,0.28358946404034187114},{0,0,0,0.13785626153360208154,-0.18145848713743964156,0.099125397513628562347},{0,0,0,0.077815097346919353911,0.13719336356508120214,-0.1247754970246576588}}
	Var prec : Double = 0.01	
	compare(t_inverse,t_solution, prec)

	// diagonal
	Var t2 : Matrix<Double, 6, 6> = {{1.123, 0, 0, 0, 0, 0}, {0, 2.156, 0, 0, 0, 0}, {0, 0, 3.135, 0, 0, 0}, {0, 0, 0, 4.532, 0, 0}, {0, 0, 0, 0, 2.131, 0}, {0, 0, 0, 0, 0, 5.213}}
	Var t2_inverse : Matrix<Double,6,6> 
	t2_inverse = inverse(t2, "DetermineRuntime")
	Var t2_sol : Matrix<Double, 6, 6> = {{0.89047195013357079252,0,0,0,0,0},{0,0.46382189239332096474,0,0,0,0},{0,0,0.31897926634768740031,0,0,0},{0,0,0,0.22065313327449249779	,0,0},{0,0,0,0,0.46926325668700140778,0},{0,0,0,0,0,0.1918281220026855937}}
	compare(t2_inverse,t2_sol,0.001)

	// filled 
	Var t3 : Matrix<Double, 4, 4> = {{1.0, 2, 1, 3}, {4, 2, 1, 2}, {4, 1, 3, 2}, {1, 1, 2, 3}}
	Var t3_inverse : Matrix<Double, 4 ,4>
	t3_inverse = inverse(t3, "DetermineRuntime")	
	Var t3_sol : Matrix<Real, 4, 4> = {{-0.7,0.6,-0.3,0.5},{2,-1,1,-2},{1,-1,1,-1},{-1.1,0.8,-0.9,1.5}}
	compare(t3_inverse,t3_sol,0.001)


	// schur
	Var t4 : Matrix<Double, 7, 7> = {{1.0, 2, 1, 0, 0, 0, 3}, {4, 2, 1, 0, 0, 0, 1}, {1,5,1,0,0,0,5},{0, 0, 0, 4, 1, 3, 2}, {0, 0, 0, 1, 1, 2, 3}, {0,0,0,4,6,7,3},{3,5,7,4,4,5,1}}
	Var t4_inverse : Matrix<Double, 7, 7> 
	t4_inverse = inverse(t4, "detShape=compiletime")
	Var t4_sol : Matrix<Real, 7, 7> = {{0.090647482,0.2834532,-0.1122302,0.0172661,-0.0230215827,0.02589,-0.0374100},{-0.75731,0.049880,0.44556,-0.017266,0.023021582,-0.025899,0.0374100},{0.51606714,-0.1587529,-0.2738609,-0.060431,0.08057,-0.090647482,0.1309352},{0.9784172,-0.115107,-0.2589928,0.4244604,-0.89928057,0.1366906,-0.0863309},{1.71223021,-0.201438,-0.45323741,-0.007194,-1.323741,0.489208,-0.151079},{-2.299280,0.270503,0.608633,-0.2474820,1.6633093,-0.37122,0.2028776},{0.6359712,-0.07482,-0.1683453,0.025899,-0.0345323,0.03884892,-0.0561151}}
	compare(t4_inverse,t4_sol,0.001)
*/
}

