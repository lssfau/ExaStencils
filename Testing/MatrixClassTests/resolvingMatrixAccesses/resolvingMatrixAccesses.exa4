
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Globals {

	Var comp_mat : Matrix<Real, 2, 3> = {{1,2,3},{4,5,6}}
	Var sol_set0 : Matrix<Real, 2, 2> = {{0,1},{2,0}}
	Var sol_set1 : Matrix<Real, 2, 2> = {{1,2},{4,5}}
	Var sol_set2 : Matrix<Real, 2, 2> = {{2,2},{2,2}}
	Var sol_set3 : Matrix<Real, 2, 2> = {{2,2},{3,3}}
	Var sol_set4 : Matrix<Real, 2, 2> = {{5,5},{3,3}}
	Var sol_set5 : Matrix<Real, 2, 2> = {{5,5},{4,5}}
	Var sol_set6 : Matrix<Real, 3, 1> = {{5},{6},{1}}
	Var sol_set7 : Matrix<Real, 3, 1> = {{-31},{6},{1}}
	Var comp_mat2 : Matrix<Real, 3, 1> = {{1},{2},{3}}

}
Stencil Centering{
	[1, 0] => 0.25
	[-1, 0] => 0.25
	[0, 1] => 0.25
	[0, -1] => 0.25
}

Layout mat_layout< Matrix<Real, 2, 2>, Node >@all {
  duplicateLayers = [0, 0]
  ghostLayers     = [0, 0]
}
Layout mat_layout2< Matrix<Real, 3, 1>, Node >@all {
  duplicateLayers = [0, 0]
  ghostLayers     = [0, 0]
}
Layout mat_layout3< Real, Node >@all {
  duplicateLayers = [0, 0]
  ghostLayers     = [0, 0]
}

Function set_real_field@finest : Unit {
  loop over mat_field_3 {
	mat_field_3 = 1
  }
}
Function set0_mat_field@finest : Unit {
  loop over mat_field {
	mat_field[0][1] = 1
	mat_field[1][0] = 2
  }
}
Function set1_mat_field@finest : Unit {
  loop over mat_field {
	mat_field = comp_mat[:][0:2]
  }
}
Function set2_mat_field@finest : Unit {
  loop over mat_field {
	mat_field[:][:] = 2
  }
}
Function set3_mat_field@finest : Unit {
  loop over mat_field {
	mat_field[1][:] = 3
  }
}
Function set4_mat_field@finest : Unit {
  loop over mat_field {
	mat_field[0:1][:] = 5
  }
}
Function set5_mat_field@finest : Unit {
  loop over mat_field {
	mat_field[1:2][:] = comp_mat[1][0:2]
  }
}
Function set6_mat_field@finest : Unit {
	loop over mat_field_2 {
		mat_field_2[0][:] = 5
		mat_field_2[1][:] = 6
		mat_field_2[2][:] = 1
	}
}



Field mat_field_2< global, mat_layout2, 0.0 >@all

Field mat_field_3< global, mat_layout3, 0.0 >@all

Field mat_field< global, mat_layout, 0.0 >@all



Function compare_set0@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set0, 0.1, false)
  }
}
Function compare_set1@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set1, 0.1, false)
  }
}
Function compare_set2@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set2, 0.1, false)
  }
}
Function compare_set3@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set3, 0.1, false)
  }
}
Function compare_set4@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set4, 0.1, false)
  }
}
Function compare_set5@finest : Unit {
  loop over mat_field {
	compare(mat_field, sol_set5, 0.1, false)
  }
}
Function compare_set6@finest : Unit {
  loop over mat_field_2 {
	compare(mat_field_2, sol_set6, 0.1, false)
  }
}
Function compare_set7@finest : Unit {
  loop over mat_field_2 {
	compare(mat_field_2, sol_set7, 0.1, false)
  }
}

/// main function

Function Application ( ) : Unit {
	Var mat : Matrix<Double, 2, 2> = {{1,2},{3,1}}
	Var mat5 : Matrix<Double, 2, 2> = {{1,2},{3,1}}

	Var idx : Int = 0
	mat[0][0] = 2
	compare(getElement(mat, 0, 0), 2, 0.0001)
	Var tmp : Real = mat[idx][1]
	compare(tmp, 2, 0.01)
	print('stage 0 done')

	Var idx1 : Int = 2
	mat[0:idx1][0:2] = 5
	Var sol : Matrix<Real, 2, 2> = {{5,5},{5,5}}
	compare(sol, mat, 0.0001)
	print('stage 1 done')

	mat[0:2][0:1] = 3
	Var sol2 : Matrix<Real, 2, 2> = {{3,5},{3,5}}
	compare(sol2, mat, 0.0001)
	print('stage 2 done')

	Var mat2 : Matrix<Real, 2, 2> = mat[0:2][0:2]
	compare(sol2, mat2, 0.001)
	print('stage 3 done')

	Var mat3 : Matrix<Real, 1, 2> = mat[0][0:2]
	Var sol3 : Matrix<Real, 1, 2> = {{3,5}}
	compare(sol3, mat3, 0.001)
	print('stage 4 done')

	initGlobals()
	initDomain ( )
	
	Var mat4 : Matrix<Real, 2, 1> = comp_mat[:][1]
	Var sol4 : Matrix<Real, 2, 1> = {{2},{5}}
	compare(sol4, mat4, 0.001)
	print('stage 5 done')

  	initFieldsWithZero ( )
	set0_mat_field@finest()
	compare_set0@finest()
	print('stage 6 done')

	set1_mat_field@finest()
	compare_set1@finest()
	print('stage 7 done')

	set2_mat_field@finest()
	compare_set2@finest()
	print('stage 8 done')
	

	set3_mat_field@finest()
	compare_set3@finest()
	print('stage 9 done')

	
	set4_mat_field@finest()
	compare_set4@finest()
	print('stage 10 done')
	
	set5_mat_field@finest()
	compare_set5@finest()
	print('stage 11 done')
		
	set6_mat_field@finest()
	compare_set6@finest()
	print('stage 12 done')
	

}

