Domain global< [0,0] to [1000,1000] >

Globals {
Var dt : Real = 0.1
Var t : Real = 0
Expr timeSteps = 2000
Expr g = 0.16
Expr printInterval = 200
Var print_count : Int = 0
Var it : Int = 0
Var errceta@3 : Real = 0
Var errcu@3 : Real = 0
Var errcv@3 : Real = 0
Expr RAMP = 1
}



Function InitTriInfo@all (  ) {
loop over bLower0 starting [-1, -1] ending [-1, -1] {
  bLower0 = -vf_nodePosition_0@[0, 0] + vf_nodePosition_0@[1, 0]
  bLower1 = -vf_nodePosition_0@[0, 0] + vf_nodePosition_0@[0, 1]
  bLower2 = -vf_nodePosition_1@[0, 0] + vf_nodePosition_1@[1, 0]
  bLower3 = -vf_nodePosition_1@[0, 0] + vf_nodePosition_1@[0, 1]
}
loop over detBLower0 starting [-1, -1] ending [-1, -1] {
  detBLower0 = fabs(bLower0@[0, 0]*bLower3@[0, 0] - bLower1@[0, 0]*bLower2@[0, 0])
}
loop over detBInvLower0 starting [-1, -1] ending [-1, -1] {
  detBInvLower0 = ( 1.0 / ( detBLower0@[0, 0] ) )
}
loop over sqrtDetBLower0 starting [-1, -1] ending [-1, -1] {
  sqrtDetBLower0 = sqrt ( detBLower0@[0, 0] )
}
loop over sqrtInvDetBLower0 starting [-1, -1] ending [-1, -1] {
  sqrtInvDetBLower0 = ( 1.0 / ( sqrtDetBLower0@[0, 0] ) )
}
loop over bUpper0 starting [-1, -1] ending [-1, -1] {
  bUpper0 = vf_nodePosition_0@[0, 1] - vf_nodePosition_0@[1, 1]
  bUpper1 = vf_nodePosition_0@[1, 0] - vf_nodePosition_0@[1, 1]
  bUpper2 = vf_nodePosition_1@[0, 1] - vf_nodePosition_1@[1, 1]
  bUpper3 = vf_nodePosition_1@[1, 0] - vf_nodePosition_1@[1, 1]
}
loop over detBUpper0 starting [-1, -1] ending [-1, -1] {
  detBUpper0 = fabs(bUpper0@[0, 0]*bUpper3@[0, 0] - bUpper1@[0, 0]*bUpper2@[0, 0])
}
loop over detBInvUpper0 starting [-1, -1] ending [-1, -1] {
  detBInvUpper0 = ( 1.0 / ( detBUpper0@[0, 0] ) )
}
loop over sqrtDetBUpper0 starting [-1, -1] ending [-1, -1] {
  sqrtDetBUpper0 = sqrt ( detBUpper0@[0, 0] )
}
loop over sqrtInvDetBUpper0 starting [-1, -1] ending [-1, -1] {
  sqrtInvDetBUpper0 = ( 1.0 / ( sqrtDetBUpper0@[0, 0] ) )
}
loop over edgeLenDiagonal0 starting [0, 0] ending [0, 0] {
  edgeLenDiagonal0 = sqrt ( ( ( vf_nodePosition_0@[0, 1] - vf_nodePosition_0@[1, 0] ) * ( vf_nodePosition_0@[0, 1] - vf_nodePosition_0@[1, 0] ) ) + ( ( vf_nodePosition_1@[0, 1] - vf_nodePosition_1@[1, 0] ) * ( vf_nodePosition_1@[0, 1] - vf_nodePosition_1@[1, 0] ) ) )
}
loop over edgeLenVertical0 starting [-1, 0] ending [-1, 0] {
  edgeLenVertical0 = sqrt ( ( ( vf_nodePosition_0@[0, 0] - vf_nodePosition_0@[0, 1] ) * ( vf_nodePosition_0@[0, 0] - vf_nodePosition_0@[0, 1] ) ) + ( ( vf_nodePosition_1@[0, 0] - vf_nodePosition_1@[0, 1] ) * ( vf_nodePosition_1@[0, 0] - vf_nodePosition_1@[0, 1] ) ) )
}
loop over edgeLenHorizontal0 starting [0, -1] ending [0, -1] {
  edgeLenHorizontal0 = sqrt ( ( ( vf_nodePosition_0@[0, 0] - vf_nodePosition_0@[1, 0] ) * ( vf_nodePosition_0@[0, 0] - vf_nodePosition_0@[1, 0] ) ) + ( ( vf_nodePosition_1@[0, 0] - vf_nodePosition_1@[1, 0] ) * ( vf_nodePosition_1@[0, 0] - vf_nodePosition_1@[1, 0] ) ) )
}
loop over edgeLenDiagonal0 starting [0, 0] ending [0, 0] {
  normalDiagonal0 = (vf_nodePosition_1@[0, 1] - vf_nodePosition_1@[1, 0])/edgeLenDiagonal0@[0, 0]
  normalDiagonal1 = (-vf_nodePosition_0@[0, 1] + vf_nodePosition_0@[1, 0])/edgeLenDiagonal0@[0, 0]
}
loop over edgeLenVertical0 starting [-1, 0] ending [-1, 0] {
  normalVertical0 = (vf_nodePosition_1@[0, 0] - vf_nodePosition_1@[0, 1])/edgeLenVertical0@[0, 0]
  normalVertical1 = (-vf_nodePosition_0@[0, 0] + vf_nodePosition_0@[0, 1])/edgeLenVertical0@[0, 0]
}
loop over edgeLenHorizontal0 starting [0, -1] ending [0, -1] {
  normalHorizontal0 = (-vf_nodePosition_1@[0, 0] + vf_nodePosition_1@[1, 0])/edgeLenHorizontal0@[0, 0]
  normalHorizontal1 = (vf_nodePosition_0@[0, 0] - vf_nodePosition_0@[1, 0])/edgeLenHorizontal0@[0, 0]
}
}




Function InitBath@all (  ) {
readField ( "../BSG/bath_b$blockId_9.txt", bath )
loop over bath only ghost [-1, 0] on boundary  {
  bath = bath@[1, 0]
  if ( bath < 0 ) {
  print ( "Negative bathymetry detected:", bath )
}
}
loop over bath only ghost [1, 0] on boundary  {
  bath = bath@[-1, 0]
  if ( bath < 0 ) {
  print ( "Negative bathymetry detected:", bath )
}
}
loop over bath only ghost [0, -1] on boundary  {
  bath = bath@[0, 1]
  if ( bath < 0 ) {
  print ( "Negative bathymetry detected:", bath )
}
}
loop over bath only ghost [0, 1] on boundary  {
  bath = bath@[0, -1]
  if ( bath < 0 ) {
  print ( "Negative bathymetry detected:", bath )
}
}
communicate bath
}




Function CheckGrid@all (  ) {
loop over detBLower0 starting [-1, 0] ending [-1, 0] {
  if ( detBLower0 <=  0 ) {
  print ( 'Warning:, detBLower0,  at ', 'fragmentIdx =', fragmentIdx, 'i0 =', i0, 'i1 =', i1, 'is', detBLower0 )
}
}
loop over detBLower0 starting [0, -1] ending [0, -1] {
  if ( detBLower0 <=  0 ) {
  print ( 'Warning:, detBLower0,  at ', 'fragmentIdx =', fragmentIdx, 'i0 =', i0, 'i1 =', i1, 'is', detBLower0 )
}
}
loop over detBUpper0 starting [-1, 0] ending [-1, 0] {
  if ( detBUpper0 <=  0 ) {
  print ( 'Warning:, detBUpper0,  at ', 'fragmentIdx =', fragmentIdx, 'i0 =', i0, 'i1 =', i1, 'is', detBUpper0 )
}
}
loop over detBUpper0 starting [0, -1] ending [0, -1] {
  if ( detBUpper0 <=  0 ) {
  print ( 'Warning:, detBUpper0,  at ', 'fragmentIdx =', fragmentIdx, 'i0 =', i0, 'i1 =', i1, 'is', detBUpper0 )
}
}
}




Function InitFieldsAnalytical@all (  ) {
startTimer ( 'InitFieldsAnalytical' )
loop over cetaLower0 {
  cetaLower0 = 0
  cuLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]
  cvLower0 = 0
  cetaUpper0 = 0
  cuUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]
  cvUpper0 = 0
}
stopTimer ( 'InitFieldsAnalytical' )
}




Function UpdateCTilde@all (  ) {
startTimer ( 'UpdateCTilde' )
loop over cuTildeLower0 {
  solve locally {
  cuTildeLower0 => cuTildeLower0*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + 1.41421356237310*cetaLower0*sqrtInvDetBLower0@[0, 0]) == cuLower0
}
  solve locally {
  cuTildeUpper0 => cuTildeUpper0*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + 1.41421356237310*cetaUpper0*sqrtInvDetBUpper0@[0, 0]) == cuUpper0
}
}
loop over cvTildeLower0 {
  solve locally {
  cvTildeLower0 => cvTildeLower0*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + 1.41421356237310*cetaLower0*sqrtInvDetBLower0@[0, 0]) == cvLower0
}
  solve locally {
  cvTildeUpper0 => cvTildeUpper0*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + 1.41421356237310*cetaUpper0*sqrtInvDetBUpper0@[0, 0]) == cvUpper0
}
}
stopTimer ( 'UpdateCTilde' )
}




Function CommunicateAll@all (  ) {
startTimer ( 'CommunicateAll' )
communicate cetaLower0
communicate cetaUpper0
communicate cuLower0
communicate cuUpper0
communicate cvLower0
communicate cvUpper0
communicate cuTildeLower0
communicate cuTildeUpper0
communicate cvTildeLower0
communicate cvTildeUpper0
stopTimer ( 'CommunicateAll' )
}




Function ApplyAllBc@all (  ) {
startTimer ( 'ApplyAllBc' )
loop over cetaUpper0 only ghost [-1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cetaUpper0 = cetaLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cetaUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*((0.5)*ETRI@[1, 0] + (0.5)*ETRI@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cetaUpper0 = 0
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 0 ) or -101 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cetaUpper0 = cetaLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 0 ) )
}
}
}
}
}
loop over cuUpper0 only ghost [-1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cuUpper0 = cuLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cuUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*(normalVertical0@[1, 0]*((0.5)*UNRI@[1, 0] + (0.5)*UNRI@[1, 1]) - normalVertical1@[1, 0]*((0.5)*UTRI@[1, 0] + (0.5)*UTRI@[1, 1]))*((0.5)*ETRI@[1, 0] + (0.5)*ETRI@[1, 1] + (0.5)*bath@[1, 0] + (0.5)*bath@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cuUpper0 = cuLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 0 ) or -101 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cuUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(-2.0*1.41421356237310*cuLower0@[1, 0]*( ( normalVertical0@[1, 0] ) * ( normalVertical0@[1, 0] ) )*sqrtInvDetBLower0@[1, 0] + 1.41421356237310*cuLower0@[1, 0]*sqrtInvDetBLower0@[1, 0] - 2.0*1.41421356237310*cvLower0@[1, 0]*normalVertical0@[1, 0]*normalVertical1@[1, 0]*sqrtInvDetBLower0@[1, 0])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 0 ) )
}
}
}
}
}
loop over cvUpper0 only ghost [-1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cvUpper0 = cvLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cvUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*(normalVertical0@[1, 0]*((0.5)*UTRI@[1, 0] + (0.5)*UTRI@[1, 1]) + normalVertical1@[1, 0]*((0.5)*UNRI@[1, 0] + (0.5)*UNRI@[1, 1]))*((0.5)*ETRI@[1, 0] + (0.5)*ETRI@[1, 1] + (0.5)*bath@[1, 0] + (0.5)*bath@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cvUpper0 = cvLower0@[1, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[1, 0]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 0 ) or -101 == getBoundaryConditionId ( fragmentIdx, 0 ) ) ) {
  cvUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(-2.0*1.41421356237310*cuLower0@[1, 0]*normalVertical0@[1, 0]*normalVertical1@[1, 0]*sqrtInvDetBLower0@[1, 0] - 2.0*1.41421356237310*cvLower0@[1, 0]*( ( normalVertical1@[1, 0] ) * ( normalVertical1@[1, 0] ) )*sqrtInvDetBLower0@[1, 0] + 1.41421356237310*cvLower0@[1, 0]*sqrtInvDetBLower0@[1, 0])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 0 ) )
}
}
}
}
}
loop over cetaLower0 only ghost [1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cetaLower0 = cetaUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cetaLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[0, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cetaLower0 = 0
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 1 ) or -101 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cetaLower0 = cetaUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 1 ) )
}
}
}
}
}
loop over cuLower0 only ghost [1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cuLower0 = cuUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cuLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*(-normalVertical0@[0, 0]*((0.5)*UNRI@[0, 0] + (0.5)*UNRI@[0, 1]) + normalVertical1@[0, 0]*((0.5)*UTRI@[0, 0] + (0.5)*UTRI@[0, 1]))*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[0, 1] + (0.5)*bath@[0, 0] + (0.5)*bath@[0, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cuLower0 = cuUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 1 ) or -101 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cuLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(-2.0*1.41421356237310*cuUpper0@[-1, 0]*( ( normalVertical0@[0, 0] ) * ( normalVertical0@[0, 0] ) )*sqrtInvDetBUpper0@[-1, 0] + 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0] - 2.0*1.41421356237310*cvUpper0@[-1, 0]*normalVertical0@[0, 0]*normalVertical1@[0, 0]*sqrtInvDetBUpper0@[-1, 0])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 1 ) )
}
}
}
}
}
loop over cvLower0 only ghost [1, 0] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cvLower0 = cvUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cvLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*(-normalVertical0@[0, 0]*((0.5)*UTRI@[0, 0] + (0.5)*UTRI@[0, 1]) - normalVertical1@[0, 0]*((0.5)*UNRI@[0, 0] + (0.5)*UNRI@[0, 1]))*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[0, 1] + (0.5)*bath@[0, 0] + (0.5)*bath@[0, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cvLower0 = cvUpper0@[-1, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[-1, 0]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 1 ) or -101 == getBoundaryConditionId ( fragmentIdx, 1 ) ) ) {
  cvLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(-2.0*1.41421356237310*cuUpper0@[-1, 0]*normalVertical0@[0, 0]*normalVertical1@[0, 0]*sqrtInvDetBUpper0@[-1, 0] - 2.0*1.41421356237310*cvUpper0@[-1, 0]*( ( normalVertical1@[0, 0] ) * ( normalVertical1@[0, 0] ) )*sqrtInvDetBUpper0@[-1, 0] + 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 1 ) )
}
}
}
}
}
loop over cetaUpper0 only ghost [0, -1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cetaUpper0 = cetaLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cetaUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*((0.5)*ETRI@[0, 1] + (0.5)*ETRI@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cetaUpper0 = 0
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 2 ) or -101 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cetaUpper0 = cetaLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 2 ) )
}
}
}
}
}
loop over cuUpper0 only ghost [0, -1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cuUpper0 = cuLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cuUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*(normalHorizontal0@[0, 1]*((0.5)*UNRI@[0, 1] + (0.5)*UNRI@[1, 1]) - normalHorizontal1@[0, 1]*((0.5)*UTRI@[0, 1] + (0.5)*UTRI@[1, 1]))*((0.5)*ETRI@[0, 1] + (0.5)*ETRI@[1, 1] + (0.5)*bath@[0, 1] + (0.5)*bath@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cuUpper0 = cuLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 2 ) or -101 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cuUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(-2.0*1.41421356237310*cuLower0@[0, 1]*( ( normalHorizontal0@[0, 1] ) * ( normalHorizontal0@[0, 1] ) )*sqrtInvDetBLower0@[0, 1] + 1.41421356237310*cuLower0@[0, 1]*sqrtInvDetBLower0@[0, 1] - 2.0*1.41421356237310*cvLower0@[0, 1]*normalHorizontal0@[0, 1]*normalHorizontal1@[0, 1]*sqrtInvDetBLower0@[0, 1])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 2 ) )
}
}
}
}
}
loop over cvUpper0 only ghost [0, -1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cvUpper0 = cvLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cvUpper0 = (0.5)*1.41421356237310*RAMP*sqrtDetBUpper0@[0, 0]*(normalHorizontal0@[0, 1]*((0.5)*UTRI@[0, 1] + (0.5)*UTRI@[1, 1]) + normalHorizontal1@[0, 1]*((0.5)*UNRI@[0, 1] + (0.5)*UNRI@[1, 1]))*((0.5)*ETRI@[0, 1] + (0.5)*ETRI@[1, 1] + (0.5)*bath@[0, 1] + (0.5)*bath@[1, 1])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cvUpper0 = cvLower0@[0, 1]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBLower0@[0, 1]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 2 ) or -101 == getBoundaryConditionId ( fragmentIdx, 2 ) ) ) {
  cvUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(-2.0*1.41421356237310*cuLower0@[0, 1]*normalHorizontal0@[0, 1]*normalHorizontal1@[0, 1]*sqrtInvDetBLower0@[0, 1] - 2.0*1.41421356237310*cvLower0@[0, 1]*( ( normalHorizontal1@[0, 1] ) * ( normalHorizontal1@[0, 1] ) )*sqrtInvDetBLower0@[0, 1] + 1.41421356237310*cvLower0@[0, 1]*sqrtInvDetBLower0@[0, 1])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 2 ) )
}
}
}
}
}
loop over cetaLower0 only ghost [0, 1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cetaLower0 = cetaUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cetaLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[1, 0])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cetaLower0 = 0
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 3 ) or -101 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cetaLower0 = cetaUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 3 ) )
}
}
}
}
}
loop over cuLower0 only ghost [0, 1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cuLower0 = cuUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cuLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*(-normalHorizontal0@[0, 0]*((0.5)*UNRI@[0, 0] + (0.5)*UNRI@[1, 0]) + normalHorizontal1@[0, 0]*((0.5)*UTRI@[0, 0] + (0.5)*UTRI@[1, 0]))*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[1, 0] + (0.5)*bath@[0, 0] + (0.5)*bath@[1, 0])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cuLower0 = cuUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 3 ) or -101 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cuLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(-2.0*1.41421356237310*cuUpper0@[0, -1]*( ( normalHorizontal0@[0, 0] ) * ( normalHorizontal0@[0, 0] ) )*sqrtInvDetBUpper0@[0, -1] + 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1] - 2.0*1.41421356237310*cvUpper0@[0, -1]*normalHorizontal0@[0, 0]*normalHorizontal1@[0, 0]*sqrtInvDetBUpper0@[0, -1])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 3 ) )
}
}
}
}
}
loop over cvLower0 only ghost [0, 1] on boundary {
  if ( ( -1300 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cvLower0 = cvUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  if ( ( -1200 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cvLower0 = (0.5)*1.41421356237310*RAMP*sqrtDetBLower0@[0, 0]*(-normalHorizontal0@[0, 0]*((0.5)*UTRI@[0, 0] + (0.5)*UTRI@[1, 0]) - normalHorizontal1@[0, 0]*((0.5)*UNRI@[0, 0] + (0.5)*UNRI@[1, 0]))*((0.5)*ETRI@[0, 0] + (0.5)*ETRI@[1, 0] + (0.5)*bath@[0, 0] + (0.5)*bath@[1, 0])
} else {
  if ( ( -1100 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cvLower0 = cvUpper0@[0, -1]*sqrtDetBLower0@[0, 0]*sqrtInvDetBUpper0@[0, -1]
} else {
  if ( ( -100 == getBoundaryConditionId ( fragmentIdx, 3 ) or -101 == getBoundaryConditionId ( fragmentIdx, 3 ) ) ) {
  cvLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(-2.0*1.41421356237310*cuUpper0@[0, -1]*normalHorizontal0@[0, 0]*normalHorizontal1@[0, 0]*sqrtInvDetBUpper0@[0, -1] - 2.0*1.41421356237310*cvUpper0@[0, -1]*( ( normalHorizontal1@[0, 0] ) * ( normalHorizontal1@[0, 0] ) )*sqrtInvDetBUpper0@[0, -1] + 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1])
} else {
  print ( "Invalid boundary condition id", getBoundaryConditionId ( fragmentIdx, 3 ) )
}
}
}
}
}
loop over cuTildeUpper0 only ghost [-1, 0] on boundary {
  cuTildeUpper0 = cuUpper0@[0, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]/((0.5)*bath@[1, 0] + (0.5)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])
}
loop over cvTildeUpper0 only ghost [-1, 0] on boundary {
  cvTildeUpper0 = cvUpper0@[0, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]/((0.5)*bath@[1, 0] + (0.5)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])
}
loop over cuTildeLower0 only ghost [1, 0] on boundary {
  cuTildeLower0 = cuLower0@[0, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]/((0.5)*bath@[0, 0] + (0.5)*bath@[0, 1] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])
}
loop over cvTildeLower0 only ghost [1, 0] on boundary {
  cvTildeLower0 = cvLower0@[0, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]/((0.5)*bath@[0, 0] + (0.5)*bath@[0, 1] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])
}
loop over cuTildeUpper0 only ghost [0, -1] on boundary {
  cuTildeUpper0 = cuUpper0@[0, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]/((0.5)*bath@[0, 1] + (0.5)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])
}
loop over cvTildeUpper0 only ghost [0, -1] on boundary {
  cvTildeUpper0 = cvUpper0@[0, 0]*sqrtDetBUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]/((0.5)*bath@[0, 1] + (0.5)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])
}
loop over cuTildeLower0 only ghost [0, 1] on boundary {
  cuTildeLower0 = cuLower0@[0, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]/((0.5)*bath@[0, 0] + (0.5)*bath@[1, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])
}
loop over cvTildeLower0 only ghost [0, 1] on boundary {
  cvTildeLower0 = cvLower0@[0, 0]*sqrtDetBLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]/((0.5)*bath@[0, 0] + (0.5)*bath@[1, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])
}
stopTimer ( 'ApplyAllBc' )
}




Function PrintDebugFields@all (  ) {
startTimer ( 'PrintDebugFields' )
  Var filename_ceta_Lower_0 : String
  buildString (filename_ceta_Lower_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_ceta_Lower_0_-_", print_count, ".txt" )
  printField ( filename_ceta_Lower_0 , cetaLower0 )
  Var filename_ceta_Upper_0 : String
  buildString (filename_ceta_Upper_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_ceta_Upper_0_-_", print_count, ".txt" )
  printField ( filename_ceta_Upper_0 , cetaUpper0 )

  Var filename_cu_Lower_0 : String
  buildString (filename_cu_Lower_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cu_Lower_0_-_", print_count, ".txt" )
  printField ( filename_cu_Lower_0 , cuLower0 )
  Var filename_cu_Upper_0 : String
  buildString (filename_cu_Upper_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cu_Upper_0_-_", print_count, ".txt" )
  printField ( filename_cu_Upper_0 , cuUpper0 )

  Var filename_cv_Lower_0 : String
  buildString (filename_cv_Lower_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cv_Lower_0_-_", print_count, ".txt" )
  printField ( filename_cv_Lower_0 , cvLower0 )
  Var filename_cv_Upper_0 : String
  buildString (filename_cv_Upper_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cv_Upper_0_-_", print_count, ".txt" )
  printField ( filename_cv_Upper_0 , cvUpper0 )

  Var filename_cuTilde_Lower_0 : String
  buildString (filename_cuTilde_Lower_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cuTilde_Lower_0_-_", print_count, ".txt" )
  printField ( filename_cuTilde_Lower_0 , cuTildeLower0 )
  Var filename_cuTilde_Upper_0 : String
  buildString (filename_cuTilde_Upper_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cuTilde_Upper_0_-_", print_count, ".txt" )
  printField ( filename_cuTilde_Upper_0 , cuTildeUpper0 )

  Var filename_cvTilde_Lower_0 : String
  buildString (filename_cvTilde_Lower_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cvTilde_Lower_0_-_", print_count, ".txt" )
  printField ( filename_cvTilde_Lower_0 , cvTildeLower0 )
  Var filename_cvTilde_Upper_0 : String
  buildString (filename_cvTilde_Upper_0, "../data/swe_o0_rk2_l3_supercritical_b1_f28_cvTilde_Upper_0_-_", print_count, ".txt" )
  printField ( filename_cvTilde_Upper_0 , cvTildeUpper0 )

stopTimer ( 'PrintDebugFields' )
}




Function SetupPhase@all (  ) {
startTimer ( 'SetupPhase' )
it = 0
t = 0
InitTriInfo (  )
InitBath (  )
CheckGrid (  )
readField ( "../BSG/etri_b$blockId_9.txt", ETRI )
readField ( "../BSG/unri_b$blockId_9.txt", UNRI )
readField ( "../BSG/utri_b$blockId_9.txt", UTRI )
InitFieldsAnalytical (  )
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
PrintDebugFields (  )
print_count += 1
stopTimer ( 'SetupPhase' )
}




Function UpdateUnknowns@all (  ) {
startTimer ( 'UpdateUnknowns' )
loop over fragments  {
  loop over cetaEdgeDLower0 only inner [0, 0] {
  Var tmp0 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp1 : Real = 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp2 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp3 : Real = 1.41421356237310*cuUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp4 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp5 : Real = 1.41421356237310*cvUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp6 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp7 : Real = 1.41421356237310*cuTildeUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp8 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp9 : Real = 1.41421356237310*cvTildeUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp10 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp11 : Real = 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp12 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp13 : Real = 1.41421356237310*cuUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp14 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp15 : Real = 1.41421356237310*cvUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp16 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp17 : Real = 1.41421356237310*cuTildeUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var tmp18 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp19 : Real = 1.41421356237310*cvTildeUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0]
  Var lam0 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 1] + 0.5*bath@[1, 0] + tmp10, 0.5*bath@[0, 1] + 0.5*bath@[1, 0] + tmp11)) ) + fmax(fabs(normalDiagonal0@[0, 0]*tmp16 + normalDiagonal1@[0, 0]*tmp18), fabs(normalDiagonal0@[0, 0]*tmp17 + normalDiagonal1@[0, 0]*tmp19))
  Var tmp20 : Real = normalDiagonal0@[0, 0]*tmp2 + normalDiagonal1@[0, 0]*tmp4
  Var tmp21 : Real = normalDiagonal0@[0, 0]*tmp3 + normalDiagonal1@[0, 0]*tmp5
  Var tmp22 : Real = (0.5)*g*normalDiagonal0@[0, 0]*tmp0*(bath@[0, 1] - bath@[1, 0]) + normalDiagonal0@[0, 0]*(bath@[1, 0]*g*tmp0 + (0.5)*g*( ( tmp0 ) * ( tmp0 ) ) + tmp2*tmp6) + normalDiagonal1@[0, 0]*tmp2*tmp8
  Var tmp23 : Real = (0.5)*g*normalDiagonal0@[0, 0]*tmp1*(bath@[0, 1] - bath@[1, 0]) + normalDiagonal0@[0, 0]*(bath@[1, 0]*g*tmp1 + (0.5)*g*( ( tmp1 ) * ( tmp1 ) ) + tmp3*tmp7) + normalDiagonal1@[0, 0]*tmp3*tmp9
  Var tmp24 : Real = (0.5)*g*normalDiagonal1@[0, 0]*tmp0*(bath@[0, 1] - bath@[1, 0]) + normalDiagonal0@[0, 0]*tmp4*tmp6 + normalDiagonal1@[0, 0]*(bath@[1, 0]*g*tmp0 + (0.5)*g*( ( tmp0 ) * ( tmp0 ) ) + tmp4*tmp8)
  Var tmp25 : Real = (0.5)*g*normalDiagonal1@[0, 0]*tmp1*(bath@[0, 1] - bath@[1, 0]) + normalDiagonal0@[0, 0]*tmp5*tmp7 + normalDiagonal1@[0, 0]*(bath@[1, 0]*g*tmp1 + (0.5)*g*( ( tmp1 ) * ( tmp1 ) ) + tmp5*tmp9)
  cetaEdgeDLower0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(tmp0 - tmp1) + (0.5)*tmp20 + (0.5)*tmp21)
  cuEdgeDLower0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(tmp2 - tmp3) + (0.5)*tmp22 + (0.5)*tmp23)
  cvEdgeDLower0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(tmp4 - tmp5) + (0.5)*tmp24 + (0.5)*tmp25)
  cetaEdgeDUpper0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(-tmp0 + tmp1) - 0.5*tmp20 - 0.5*tmp21)
  cuEdgeDUpper0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(-tmp2 + tmp3) - 0.5*tmp22 - 0.5*tmp23)
  cvEdgeDUpper0 = 1.41421356237310*edgeLenDiagonal0@[0, 0]*((0.5)*lam0*(-tmp4 + tmp5) - 0.5*tmp24 - 0.5*tmp25)
}
  loop over cetaEdgeVLower0 only inner [0, 0] {
  Var tmp26 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp27 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp28 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp29 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp30 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp31 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp32 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp33 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp34 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp35 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp36 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp37 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp38 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp39 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp40 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp41 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp42 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp43 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp44 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp45 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp36, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp37)) ) + fmax(fabs(normalVertical0@[0, 0]*tmp42 + normalVertical1@[0, 0]*tmp44), fabs(normalVertical0@[0, 0]*tmp43 + normalVertical1@[0, 0]*tmp45))
  Var tmp46 : Real = normalVertical0@[0, 0]*tmp28 + normalVertical1@[0, 0]*tmp30
  Var tmp47 : Real = normalVertical0@[0, 0]*tmp29 + normalVertical1@[0, 0]*tmp31
  Var tmp48 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp26*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp26 + (0.5)*g*( ( tmp26 ) * ( tmp26 ) ) + tmp28*tmp32) + normalVertical1@[0, 0]*tmp28*tmp34
  Var tmp49 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp27*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp27 + (0.5)*g*( ( tmp27 ) * ( tmp27 ) ) + tmp29*tmp33) + normalVertical1@[0, 0]*tmp29*tmp35
  Var tmp50 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp26*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp30*tmp32 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp26 + (0.5)*g*( ( tmp26 ) * ( tmp26 ) ) + tmp30*tmp34)
  Var tmp51 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp27*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp31*tmp33 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp27 + (0.5)*g*( ( tmp27 ) * ( tmp27 ) ) + tmp31*tmp35)
  cetaEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp26 - tmp27) + (0.5)*tmp46 + (0.5)*tmp47)
  cuEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp28 - tmp29) + (0.5)*tmp48 + (0.5)*tmp49)
  cvEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp30 - tmp31) + (0.5)*tmp50 + (0.5)*tmp51)
  cetaEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp26 + tmp27) - 0.5*tmp46 - 0.5*tmp47)
  cuEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp28 + tmp29) - 0.5*tmp48 - 0.5*tmp49)
  cvEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp30 + tmp31) - 0.5*tmp50 - 0.5*tmp51)
}
  if ( ( getNeighFragEdge ( fragmentIdx, 0 ) < 0 or getNeighFragEdge ( fragmentIdx, 0 ) == 0 or getNeighFragEdge ( fragmentIdx, 0 ) == 1 ) ) {
  loop over cetaEdgeVLower0 only dup [-1, 0] {
  Var tmp52 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp53 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp54 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp55 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp56 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp57 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp58 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp59 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp60 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp61 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp62 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp63 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp64 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp65 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp66 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp67 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp68 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp69 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp70 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp71 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp62, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp63)) ) + fmax(fabs(normalVertical0@[0, 0]*tmp68 + normalVertical1@[0, 0]*tmp70), fabs(normalVertical0@[0, 0]*tmp69 + normalVertical1@[0, 0]*tmp71))
  Var tmp72 : Real = normalVertical0@[0, 0]*tmp54 + normalVertical1@[0, 0]*tmp56
  Var tmp73 : Real = normalVertical0@[0, 0]*tmp55 + normalVertical1@[0, 0]*tmp57
  Var tmp74 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp52*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp52 + (0.5)*g*( ( tmp52 ) * ( tmp52 ) ) + tmp54*tmp58) + normalVertical1@[0, 0]*tmp54*tmp60
  Var tmp75 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp53*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp53 + (0.5)*g*( ( tmp53 ) * ( tmp53 ) ) + tmp55*tmp59) + normalVertical1@[0, 0]*tmp55*tmp61
  Var tmp76 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp52*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp56*tmp58 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp52 + (0.5)*g*( ( tmp52 ) * ( tmp52 ) ) + tmp56*tmp60)
  Var tmp77 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp53*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp57*tmp59 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp53 + (0.5)*g*( ( tmp53 ) * ( tmp53 ) ) + tmp57*tmp61)
  cetaEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp52 - tmp53) + (0.5)*tmp72 + (0.5)*tmp73)
  cuEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp54 - tmp55) + (0.5)*tmp74 + (0.5)*tmp75)
  cvEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp56 - tmp57) + (0.5)*tmp76 + (0.5)*tmp77)
}
} else {
  loop over cetaEdgeVLower0 only dup [-1, 0] {
  Var tmp78 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp79 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp80 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp81 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp82 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp83 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp84 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp85 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp86 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp87 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp88 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp89 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp90 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp91 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp92 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp93 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp94 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp95 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp96 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp97 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp88, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp89)) ) + fmax(fabs(normalVertical0@[0, 0]*tmp94 + normalVertical1@[0, 0]*tmp96), fabs(normalVertical0@[0, 0]*tmp95 + normalVertical1@[0, 0]*tmp97))
  Var tmp98 : Real = normalVertical0@[0, 0]*tmp80 + normalVertical1@[0, 0]*tmp82
  Var tmp99 : Real = normalVertical0@[0, 0]*tmp81 + normalVertical1@[0, 0]*tmp83
  Var tmp100 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp78*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp78 + (0.5)*g*( ( tmp78 ) * ( tmp78 ) ) + tmp80*tmp84) + normalVertical1@[0, 0]*tmp80*tmp86
  Var tmp101 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp79*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp79 + (0.5)*g*( ( tmp79 ) * ( tmp79 ) ) + tmp81*tmp85) + normalVertical1@[0, 0]*tmp81*tmp87
  Var tmp102 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp78*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp82*tmp84 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp78 + (0.5)*g*( ( tmp78 ) * ( tmp78 ) ) + tmp82*tmp86)
  Var tmp103 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp79*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp83*tmp85 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp79 + (0.5)*g*( ( tmp79 ) * ( tmp79 ) ) + tmp83*tmp87)
  cetaEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp78 - tmp79) + (0.5)*tmp98 + (0.5)*tmp99)
  cuEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp80 - tmp81) + (0.5)*tmp100 + (0.5)*tmp101)
  cvEdgeVLower0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(tmp82 - tmp83) + (0.5)*tmp102 + (0.5)*tmp103)
}
}
  if ( ( getNeighFragEdge ( fragmentIdx, 1 ) < 0 or getNeighFragEdge ( fragmentIdx, 1 ) == 0 or getNeighFragEdge ( fragmentIdx, 1 ) == 1 ) ) {
  loop over cetaEdgeVLower0 only dup [1, 0] {
  Var tmp104 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp105 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp106 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp107 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp108 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp109 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp110 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp111 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp112 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp113 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp114 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp115 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp116 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp117 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp118 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp119 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp120 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp121 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp122 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp123 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp114, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp115)) ) + fmax(fabs(normalVertical0@[0, 0]*tmp120 + normalVertical1@[0, 0]*tmp122), fabs(normalVertical0@[0, 0]*tmp121 + normalVertical1@[0, 0]*tmp123))
  Var tmp124 : Real = normalVertical0@[0, 0]*tmp106 + normalVertical1@[0, 0]*tmp108
  Var tmp125 : Real = normalVertical0@[0, 0]*tmp107 + normalVertical1@[0, 0]*tmp109
  Var tmp126 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp104*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp104 + (0.5)*g*( ( tmp104 ) * ( tmp104 ) ) + tmp106*tmp110) + normalVertical1@[0, 0]*tmp106*tmp112
  Var tmp127 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp105*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp105 + (0.5)*g*( ( tmp105 ) * ( tmp105 ) ) + tmp107*tmp111) + normalVertical1@[0, 0]*tmp107*tmp113
  Var tmp128 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp104*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp108*tmp110 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp104 + (0.5)*g*( ( tmp104 ) * ( tmp104 ) ) + tmp108*tmp112)
  Var tmp129 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp105*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp109*tmp111 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp105 + (0.5)*g*( ( tmp105 ) * ( tmp105 ) ) + tmp109*tmp113)
  cetaEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp104 + tmp105) - 0.5*tmp124 - 0.5*tmp125)
  cuEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp106 + tmp107) - 0.5*tmp126 - 0.5*tmp127)
  cvEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp108 + tmp109) - 0.5*tmp128 - 0.5*tmp129)
}
} else {
  loop over cetaEdgeVLower0 only dup [1, 0] {
  Var tmp130 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp131 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp132 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp133 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp134 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp135 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp136 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp137 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp138 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp139 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp140 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp141 : Real = 1.41421356237310*cetaUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp142 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp143 : Real = 1.41421356237310*cuUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp144 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp145 : Real = 1.41421356237310*cvUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp146 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp147 : Real = 1.41421356237310*cuTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var tmp148 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp149 : Real = 1.41421356237310*cvTildeUpper0@[-1, 0]*sqrtInvDetBUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp140, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp141)) ) + fmax(fabs(normalVertical0@[0, 0]*tmp146 + normalVertical1@[0, 0]*tmp148), fabs(normalVertical0@[0, 0]*tmp147 + normalVertical1@[0, 0]*tmp149))
  Var tmp150 : Real = normalVertical0@[0, 0]*tmp132 + normalVertical1@[0, 0]*tmp134
  Var tmp151 : Real = normalVertical0@[0, 0]*tmp133 + normalVertical1@[0, 0]*tmp135
  Var tmp152 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp130*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp130 + (0.5)*g*( ( tmp130 ) * ( tmp130 ) ) + tmp132*tmp136) + normalVertical1@[0, 0]*tmp132*tmp138
  Var tmp153 : Real = (0.5)*g*normalVertical0@[0, 0]*tmp131*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*(bath@[0, 1]*g*tmp131 + (0.5)*g*( ( tmp131 ) * ( tmp131 ) ) + tmp133*tmp137) + normalVertical1@[0, 0]*tmp133*tmp139
  Var tmp154 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp130*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp134*tmp136 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp130 + (0.5)*g*( ( tmp130 ) * ( tmp130 ) ) + tmp134*tmp138)
  Var tmp155 : Real = (0.5)*g*normalVertical1@[0, 0]*tmp131*(bath@[0, 0] - bath@[0, 1]) + normalVertical0@[0, 0]*tmp135*tmp137 + normalVertical1@[0, 0]*(bath@[0, 1]*g*tmp131 + (0.5)*g*( ( tmp131 ) * ( tmp131 ) ) + tmp135*tmp139)
  cetaEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp130 + tmp131) - 0.5*tmp150 - 0.5*tmp151)
  cuEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp132 + tmp133) - 0.5*tmp152 - 0.5*tmp153)
  cvEdgeVUpper0 = 1.41421356237310*edgeLenVertical0@[0, 0]*((0.5)*lam1*(-tmp134 + tmp135) - 0.5*tmp154 - 0.5*tmp155)
}
}
  loop over cetaEdgeHLower0 only inner [0, 0] {
  Var tmp156 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp157 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp158 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp159 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp160 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp161 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp162 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp163 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp164 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp165 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp166 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp167 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp168 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp169 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp170 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp171 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp172 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp173 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp174 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp175 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp166, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp167)) ) + fmax(fabs(normalHorizontal0@[0, 0]*tmp172 + normalHorizontal1@[0, 0]*tmp174), fabs(normalHorizontal0@[0, 0]*tmp173 + normalHorizontal1@[0, 0]*tmp175))
  Var tmp176 : Real = normalHorizontal0@[0, 0]*tmp158 + normalHorizontal1@[0, 0]*tmp160
  Var tmp177 : Real = normalHorizontal0@[0, 0]*tmp159 + normalHorizontal1@[0, 0]*tmp161
  Var tmp178 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp156*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp156 + (0.5)*g*( ( tmp156 ) * ( tmp156 ) ) + tmp158*tmp162) + normalHorizontal1@[0, 0]*tmp158*tmp164
  Var tmp179 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp157*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp157 + (0.5)*g*( ( tmp157 ) * ( tmp157 ) ) + tmp159*tmp163) + normalHorizontal1@[0, 0]*tmp159*tmp165
  Var tmp180 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp156*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp160*tmp162 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp156 + (0.5)*g*( ( tmp156 ) * ( tmp156 ) ) + tmp160*tmp164)
  Var tmp181 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp157*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp161*tmp163 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp157 + (0.5)*g*( ( tmp157 ) * ( tmp157 ) ) + tmp161*tmp165)
  cetaEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp156 - tmp157) + (0.5)*tmp176 + (0.5)*tmp177)
  cuEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp158 - tmp159) + (0.5)*tmp178 + (0.5)*tmp179)
  cvEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp160 - tmp161) + (0.5)*tmp180 + (0.5)*tmp181)
  cetaEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp156 + tmp157) - 0.5*tmp176 - 0.5*tmp177)
  cuEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp158 + tmp159) - 0.5*tmp178 - 0.5*tmp179)
  cvEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp160 + tmp161) - 0.5*tmp180 - 0.5*tmp181)
}
  if ( ( getNeighFragEdge ( fragmentIdx, 2 ) < 0 or getNeighFragEdge ( fragmentIdx, 2 ) == 2 or getNeighFragEdge ( fragmentIdx, 2 ) == 3 ) ) {
  loop over cetaEdgeHLower0 only dup [0, -1] {
  Var tmp182 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp183 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp184 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp185 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp186 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp187 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp188 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp189 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp190 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp191 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp192 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp193 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp194 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp195 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp196 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp197 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp198 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp199 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp200 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp201 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp192, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp193)) ) + fmax(fabs(normalHorizontal0@[0, 0]*tmp198 + normalHorizontal1@[0, 0]*tmp200), fabs(normalHorizontal0@[0, 0]*tmp199 + normalHorizontal1@[0, 0]*tmp201))
  Var tmp202 : Real = normalHorizontal0@[0, 0]*tmp184 + normalHorizontal1@[0, 0]*tmp186
  Var tmp203 : Real = normalHorizontal0@[0, 0]*tmp185 + normalHorizontal1@[0, 0]*tmp187
  Var tmp204 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp182*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp182 + (0.5)*g*( ( tmp182 ) * ( tmp182 ) ) + tmp184*tmp188) + normalHorizontal1@[0, 0]*tmp184*tmp190
  Var tmp205 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp183*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp183 + (0.5)*g*( ( tmp183 ) * ( tmp183 ) ) + tmp185*tmp189) + normalHorizontal1@[0, 0]*tmp185*tmp191
  Var tmp206 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp182*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp186*tmp188 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp182 + (0.5)*g*( ( tmp182 ) * ( tmp182 ) ) + tmp186*tmp190)
  Var tmp207 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp183*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp187*tmp189 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp183 + (0.5)*g*( ( tmp183 ) * ( tmp183 ) ) + tmp187*tmp191)
  cetaEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp182 - tmp183) + (0.5)*tmp202 + (0.5)*tmp203)
  cuEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp184 - tmp185) + (0.5)*tmp204 + (0.5)*tmp205)
  cvEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp186 - tmp187) + (0.5)*tmp206 + (0.5)*tmp207)
}
} else {
  loop over cetaEdgeHLower0 only dup [0, -1] {
  Var tmp208 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp209 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp210 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp211 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp212 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp213 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp214 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp215 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp216 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp217 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp218 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp219 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp220 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp221 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp222 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp223 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp224 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp225 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp226 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp227 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp218, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp219)) ) + fmax(fabs(normalHorizontal0@[0, 0]*tmp224 + normalHorizontal1@[0, 0]*tmp226), fabs(normalHorizontal0@[0, 0]*tmp225 + normalHorizontal1@[0, 0]*tmp227))
  Var tmp228 : Real = normalHorizontal0@[0, 0]*tmp210 + normalHorizontal1@[0, 0]*tmp212
  Var tmp229 : Real = normalHorizontal0@[0, 0]*tmp211 + normalHorizontal1@[0, 0]*tmp213
  Var tmp230 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp208*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp208 + (0.5)*g*( ( tmp208 ) * ( tmp208 ) ) + tmp210*tmp214) + normalHorizontal1@[0, 0]*tmp210*tmp216
  Var tmp231 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp209*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp209 + (0.5)*g*( ( tmp209 ) * ( tmp209 ) ) + tmp211*tmp215) + normalHorizontal1@[0, 0]*tmp211*tmp217
  Var tmp232 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp208*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp212*tmp214 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp208 + (0.5)*g*( ( tmp208 ) * ( tmp208 ) ) + tmp212*tmp216)
  Var tmp233 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp209*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp213*tmp215 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp209 + (0.5)*g*( ( tmp209 ) * ( tmp209 ) ) + tmp213*tmp217)
  cetaEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp208 - tmp209) + (0.5)*tmp228 + (0.5)*tmp229)
  cuEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp210 - tmp211) + (0.5)*tmp230 + (0.5)*tmp231)
  cvEdgeHLower0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(tmp212 - tmp213) + (0.5)*tmp232 + (0.5)*tmp233)
}
}
  if ( ( getNeighFragEdge ( fragmentIdx, 3 ) < 0 or getNeighFragEdge ( fragmentIdx, 3 ) == 2 or getNeighFragEdge ( fragmentIdx, 3 ) == 3 ) ) {
  loop over cetaEdgeHLower0 only dup [0, 1] {
  Var tmp234 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp235 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp236 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp237 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp238 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp239 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp240 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp241 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp242 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp243 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp244 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp245 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp246 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp247 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp248 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp249 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp250 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp251 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp252 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp253 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp244, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp245)) ) + fmax(fabs(normalHorizontal0@[0, 0]*tmp250 + normalHorizontal1@[0, 0]*tmp252), fabs(normalHorizontal0@[0, 0]*tmp251 + normalHorizontal1@[0, 0]*tmp253))
  Var tmp254 : Real = normalHorizontal0@[0, 0]*tmp236 + normalHorizontal1@[0, 0]*tmp238
  Var tmp255 : Real = normalHorizontal0@[0, 0]*tmp237 + normalHorizontal1@[0, 0]*tmp239
  Var tmp256 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp234*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp234 + (0.5)*g*( ( tmp234 ) * ( tmp234 ) ) + tmp236*tmp240) + normalHorizontal1@[0, 0]*tmp236*tmp242
  Var tmp257 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp235*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp235 + (0.5)*g*( ( tmp235 ) * ( tmp235 ) ) + tmp237*tmp241) + normalHorizontal1@[0, 0]*tmp237*tmp243
  Var tmp258 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp234*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp238*tmp240 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp234 + (0.5)*g*( ( tmp234 ) * ( tmp234 ) ) + tmp238*tmp242)
  Var tmp259 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp235*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp239*tmp241 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp235 + (0.5)*g*( ( tmp235 ) * ( tmp235 ) ) + tmp239*tmp243)
  cetaEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp234 + tmp235) - 0.5*tmp254 - 0.5*tmp255)
  cuEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp236 + tmp237) - 0.5*tmp256 - 0.5*tmp257)
  cvEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp238 + tmp239) - 0.5*tmp258 - 0.5*tmp259)
}
} else {
  loop over cetaEdgeHLower0 only dup [0, 1] {
  Var tmp260 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp261 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp262 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp263 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp264 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp265 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp266 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp267 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp268 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp269 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp270 : Real = 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp271 : Real = 1.41421356237310*cetaUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp272 : Real = 1.41421356237310*cuLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp273 : Real = 1.41421356237310*cuUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp274 : Real = 1.41421356237310*cvLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp275 : Real = 1.41421356237310*cvUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp276 : Real = 1.41421356237310*cuTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp277 : Real = 1.41421356237310*cuTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var tmp278 : Real = 1.41421356237310*cvTildeLower0@[0, 0]*sqrtInvDetBLower0@[0, 0]
  Var tmp279 : Real = 1.41421356237310*cvTildeUpper0@[0, -1]*sqrtInvDetBUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp270, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp271)) ) + fmax(fabs(normalHorizontal0@[0, 0]*tmp276 + normalHorizontal1@[0, 0]*tmp278), fabs(normalHorizontal0@[0, 0]*tmp277 + normalHorizontal1@[0, 0]*tmp279))
  Var tmp280 : Real = normalHorizontal0@[0, 0]*tmp262 + normalHorizontal1@[0, 0]*tmp264
  Var tmp281 : Real = normalHorizontal0@[0, 0]*tmp263 + normalHorizontal1@[0, 0]*tmp265
  Var tmp282 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp260*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp260 + (0.5)*g*( ( tmp260 ) * ( tmp260 ) ) + tmp262*tmp266) + normalHorizontal1@[0, 0]*tmp262*tmp268
  Var tmp283 : Real = (0.5)*g*normalHorizontal0@[0, 0]*tmp261*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*(bath@[0, 0]*g*tmp261 + (0.5)*g*( ( tmp261 ) * ( tmp261 ) ) + tmp263*tmp267) + normalHorizontal1@[0, 0]*tmp263*tmp269
  Var tmp284 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp260*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp264*tmp266 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp260 + (0.5)*g*( ( tmp260 ) * ( tmp260 ) ) + tmp264*tmp268)
  Var tmp285 : Real = (0.5)*g*normalHorizontal1@[0, 0]*tmp261*(-bath@[0, 0] + bath@[1, 0]) + normalHorizontal0@[0, 0]*tmp265*tmp267 + normalHorizontal1@[0, 0]*(bath@[0, 0]*g*tmp261 + (0.5)*g*( ( tmp261 ) * ( tmp261 ) ) + tmp265*tmp269)
  cetaEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp260 + tmp261) - 0.5*tmp280 - 0.5*tmp281)
  cuEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp262 + tmp263) - 0.5*tmp282 - 0.5*tmp283)
  cvEdgeHUpper0 = 1.41421356237310*edgeLenHorizontal0@[0, 0]*((0.5)*lam2*(-tmp264 + tmp265) - 0.5*tmp284 - 0.5*tmp285)
}
}
  loop over cetaNewLower0 {
  cetaNewLower0 = -sqrtInvDetBLower0@[0, 0]*(cetaEdgeDLower0@[0, 0] + cetaEdgeHLower0@[0, 0] + cetaEdgeVLower0@[0, 0])
  cuNewLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(1.41421356237310*cetaLower0@[0, 0]*detBInvLower0@[0, 0]*g*sqrtInvDetBLower0@[0, 0]*(-bLower2@[0, 0]*(-bath@[0, 0] + bath@[0, 1]) + bLower3@[0, 0]*(-bath@[0, 0] + bath@[1, 0])) + detBInvLower0@[0, 0]*g*(-bLower2@[0, 0]*(-tidal@[0, 0] + tidal@[0, 1]) + bLower3@[0, 0]*(-tidal@[0, 0] + tidal@[1, 0]))*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])) - sqrtInvDetBLower0@[0, 0]*(cuEdgeDLower0@[0, 0] + cuEdgeHLower0@[0, 0] + cuEdgeVLower0@[0, 0])
  cvNewLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(1.41421356237310*cetaLower0@[0, 0]*detBInvLower0@[0, 0]*g*sqrtInvDetBLower0@[0, 0]*(bLower0@[0, 0]*(-bath@[0, 0] + bath@[0, 1]) - bLower1@[0, 0]*(-bath@[0, 0] + bath@[1, 0])) + detBInvLower0@[0, 0]*g*(bLower0@[0, 0]*(-tidal@[0, 0] + tidal@[0, 1]) - bLower1@[0, 0]*(-tidal@[0, 0] + tidal@[1, 0]))*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0])) - sqrtInvDetBLower0@[0, 0]*(cvEdgeDLower0@[0, 0] + cvEdgeHLower0@[0, 0] + cvEdgeVLower0@[0, 0])
}
  loop over cetaNewUpper0 {
  cetaNewUpper0 = -sqrtInvDetBUpper0@[0, 0]*(cetaEdgeDUpper0@[0, 0] + cetaEdgeHUpper0@[0, 1] + cetaEdgeVUpper0@[1, 0])
  cuNewUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(1.41421356237310*cetaUpper0@[0, 0]*detBInvUpper0@[0, 0]*g*sqrtInvDetBUpper0@[0, 0]*(-bUpper2@[0, 0]*(bath@[1, 0] - bath@[1, 1]) + bUpper3@[0, 0]*(bath@[0, 1] - bath@[1, 1])) + detBInvUpper0@[0, 0]*g*(-bUpper2@[0, 0]*(tidal@[1, 0] - tidal@[1, 1]) + bUpper3@[0, 0]*(tidal@[0, 1] - tidal@[1, 1]))*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])) - sqrtInvDetBUpper0@[0, 0]*(cuEdgeDUpper0@[0, 0] + cuEdgeHUpper0@[0, 1] + cuEdgeVUpper0@[1, 0])
  cvNewUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(1.41421356237310*cetaUpper0@[0, 0]*detBInvUpper0@[0, 0]*g*sqrtInvDetBUpper0@[0, 0]*(bUpper0@[0, 0]*(bath@[1, 0] - bath@[1, 1]) - bUpper1@[0, 0]*(bath@[0, 1] - bath@[1, 1])) + detBInvUpper0@[0, 0]*g*(bUpper0@[0, 0]*(tidal@[1, 0] - tidal@[1, 1]) - bUpper1@[0, 0]*(tidal@[0, 1] - tidal@[1, 1]))*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0])) - sqrtInvDetBUpper0@[0, 0]*(cvEdgeDUpper0@[0, 0] + cvEdgeHUpper0@[0, 1] + cvEdgeVUpper0@[1, 0])
}
}
stopTimer ( 'UpdateUnknowns' )
}




Function MinDepth@all (  ) {
startTimer ( 'MinDepth' )
loop over cetaLower0 {
  if ( ( bath@[0, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0] < 0.05 or bath@[1, 0] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0] < 0.05 or bath@[0, 1] + 1.41421356237310*cetaLower0@[0, 0]*sqrtInvDetBLower0@[0, 0] < 0.05 ) ) {
  print ( 'water is too shallow at (', (0.333333333333333)*vf_nodePosition_0@[0, 0] + (0.333333333333333)*vf_nodePosition_0@[0, 1] + (0.333333333333333)*vf_nodePosition_0@[1, 0], ',', (0.333333333333333)*vf_nodePosition_1@[0, 0] + (0.333333333333333)*vf_nodePosition_1@[0, 1] + (0.333333333333333)*vf_nodePosition_1@[1, 0], ')' )
  cetaLower0 = (0.5)*1.41421356237310*sqrtDetBLower0@[0, 0]*(0.05 - fmin(bath@[0, 0], fmin(bath@[0, 1], bath@[1, 0])))
  cuLower0 = 0
  cvLower0 = 0
}
  if ( ( bath@[1, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0] < 0.05 or bath@[0, 1] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0] < 0.05 or bath@[1, 0] + 1.41421356237310*cetaUpper0@[0, 0]*sqrtInvDetBUpper0@[0, 0] < 0.05 ) ) {
  print ( 'water is too shallow at (', (0.333333333333333)*vf_nodePosition_0@[0, 1] + (0.333333333333333)*vf_nodePosition_0@[1, 0] + (0.333333333333333)*vf_nodePosition_0@[1, 1], ',', (0.333333333333333)*vf_nodePosition_1@[0, 1] + (0.333333333333333)*vf_nodePosition_1@[1, 0] + (0.333333333333333)*vf_nodePosition_1@[1, 1], ')' )
  cetaUpper0 = (0.5)*1.41421356237310*sqrtDetBUpper0@[0, 0]*(0.05 - fmin(bath@[0, 1], fmin(bath@[1, 0], bath@[1, 1])))
  cuUpper0 = 0
  cvUpper0 = 0
}
}
stopTimer ( 'MinDepth' )
}




Function AdvanceRK2@all (  ) {
startTimer ( 'AdvanceRK2' )
UpdateUnknowns (  )
loop over cetaLower0 {
  cetaOldLower0 = cetaLower0
  cetaLower0 += cetaNewLower0*dt
  cuOldLower0 = cuLower0
  cuLower0 += cuNewLower0*dt
  cvOldLower0 = cvLower0
  cvLower0 += cvNewLower0*dt
  cetaOldUpper0 = cetaUpper0
  cetaUpper0 += cetaNewUpper0*dt
  cuOldUpper0 = cuUpper0
  cuUpper0 += cuNewUpper0*dt
  cvOldUpper0 = cvUpper0
  cvUpper0 += cvNewUpper0*dt
}
t += dt
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
UpdateUnknowns (  )
loop over cetaLower0 {
  cetaLower0 = (0.5)*cetaLower0 + (0.5)*cetaNewLower0*dt + (0.5)*cetaOldLower0
  cuLower0 = (0.5)*cuLower0 + (0.5)*cuNewLower0*dt + (0.5)*cuOldLower0
  cvLower0 = (0.5)*cvLower0 + (0.5)*cvNewLower0*dt + (0.5)*cvOldLower0
  cetaUpper0 = (0.5)*cetaNewUpper0*dt + (0.5)*cetaOldUpper0 + (0.5)*cetaUpper0
  cuUpper0 = (0.5)*cuNewUpper0*dt + (0.5)*cuOldUpper0 + (0.5)*cuUpper0
  cvUpper0 = (0.5)*cvNewUpper0*dt + (0.5)*cvOldUpper0 + (0.5)*cvUpper0
}
MinDepth (  )
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
stopTimer ( 'AdvanceRK2' )
}




Function SolvePhase@all (  ) {
startTimer ( 'SolvePhase' )
repeat while it < timeSteps {
  startTimer ( 'timeLoop' )
  AdvanceRK2 (  )
  it += 1
  stopTimer ( 'timeLoop' )
  if ( ( fmod( t , printInterval ) < 0.1*dt or fmod( t , printInterval ) > -0.1*dt + printInterval ) ) {
  startTimer ( 'print' )
  PrintDebugFields (  )
  stopTimer ( 'print' )
  print_count += 1
}
}
stopTimer ( 'SolvePhase' )
}




Function Application (  ) {
initGlobals (  )
startTimer ( 'setup' )
readParameterFile ( "../swe_o0_rk2_l3_supercritical_b1_f28.parameter" )
initDomain (  )
initGeometry (  )
stopTimer ( 'setup' )
SetupPhase@3 (  )
SolvePhase@3 (  )
reduceTimers (  )
destroyGlobals (  )
}




Layout DefaultNodeLayout< Real, Node >@all {
          duplicateLayers = [1, 1] with communication
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultCellLayout< Real, Cell >@all {
          duplicateLayers = [0, 0]
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultFaceXLayout< Real, Face_x >@all {
          duplicateLayers = [1, 0] with communication
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultFaceYLayout< Real, Face_y >@all {
          duplicateLayers = [0, 1] with communication
          ghostLayers = [1, 1] with communication
        }


Field edgeLenDiagonal0< global, DefaultCellLayout, None >@all
Field edgeLenVertical0< global, DefaultFaceXLayout, None >@all
Field edgeLenHorizontal0< global, DefaultFaceYLayout, None >@all
Field normalDiagonal0< global, DefaultCellLayout, None >@all
Field normalDiagonal1< global, DefaultCellLayout, None >@all
Field normalVertical0< global, DefaultFaceXLayout, None >@all
Field normalVertical1< global, DefaultFaceXLayout, None >@all
Field normalHorizontal0< global, DefaultFaceYLayout, None >@all
Field normalHorizontal1< global, DefaultFaceYLayout, None >@all
Field bLower0< global, DefaultCellLayout, None >@all
Field bLower1< global, DefaultCellLayout, None >@all
Field bLower2< global, DefaultCellLayout, None >@all
Field bLower3< global, DefaultCellLayout, None >@all
Field bUpper0< global, DefaultCellLayout, None >@all
Field bUpper1< global, DefaultCellLayout, None >@all
Field bUpper2< global, DefaultCellLayout, None >@all
Field bUpper3< global, DefaultCellLayout, None >@all
FieldCombination b0 : "Triangles" = bLower0, bUpper0
FieldCombination b1 : "Triangles" = bLower1, bUpper1
FieldCombination b2 : "Triangles" = bLower2, bUpper2
FieldCombination b3 : "Triangles" = bLower3, bUpper3
Field detBLower0< global, DefaultCellLayout, None >@all
Field detBUpper0< global, DefaultCellLayout, None >@all
FieldCombination detB0 : "Triangles" = detBLower0, detBUpper0
Field detBInvLower0< global, DefaultCellLayout, None >@all
Field detBInvUpper0< global, DefaultCellLayout, None >@all
FieldCombination detBInv0 : "Triangles" = detBInvLower0, detBInvUpper0
Field sqrtDetBLower0< global, DefaultCellLayout, None >@all
Field sqrtDetBUpper0< global, DefaultCellLayout, None >@all
FieldCombination sqrtDetB0 : "Triangles" = sqrtDetBLower0, sqrtDetBUpper0
Field sqrtInvDetBLower0< global, DefaultCellLayout, None >@all
Field sqrtInvDetBUpper0< global, DefaultCellLayout, None >@all
FieldCombination sqrtInvDetB0 : "Triangles" = sqrtInvDetBLower0, sqrtInvDetBUpper0
Field bath< global, DefaultNodeLayout, None >@all
Field ETRI< global, DefaultNodeLayout, None >@all
Field UNRI< global, DefaultNodeLayout, None >@all
Field UTRI< global, DefaultNodeLayout, None >@all
Field cetaLower0< global, DefaultCellLayout, None >@all
Field cetaUpper0< global, DefaultCellLayout, None >@all
FieldCombination ceta0 : "Triangles" = cetaLower0, cetaUpper0
Field cuLower0< global, DefaultCellLayout, None >@all
Field cuUpper0< global, DefaultCellLayout, None >@all
FieldCombination cu0 : "Triangles" = cuLower0, cuUpper0
Field cvLower0< global, DefaultCellLayout, None >@all
Field cvUpper0< global, DefaultCellLayout, None >@all
FieldCombination cv0 : "Triangles" = cvLower0, cvUpper0
Field cuTildeLower0< global, DefaultCellLayout, None >@all
Field cuTildeUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuTilde0 : "Triangles" = cuTildeLower0, cuTildeUpper0
Field cvTildeLower0< global, DefaultCellLayout, None >@all
Field cvTildeUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvTilde0 : "Triangles" = cvTildeLower0, cvTildeUpper0
Field local_orderLower0< global, DefaultCellLayout, None >@all
Field local_orderUpper0< global, DefaultCellLayout, None >@all
FieldCombination local_order0 : "Triangles" = local_orderLower0, local_orderUpper0
Field adaptivity_nlockLower0< global, DefaultCellLayout, None >@all
Field adaptivity_nlockUpper0< global, DefaultCellLayout, None >@all
FieldCombination adaptivity_nlock0 : "Triangles" = adaptivity_nlockLower0, adaptivity_nlockUpper0
Field cetaOldLower0< global, DefaultCellLayout, None >@all
Field cetaOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cetaOld0 : "Triangles" = cetaOldLower0, cetaOldUpper0
Field cuOldLower0< global, DefaultCellLayout, None >@all
Field cuOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuOld0 : "Triangles" = cuOldLower0, cuOldUpper0
Field cvOldLower0< global, DefaultCellLayout, None >@all
Field cvOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvOld0 : "Triangles" = cvOldLower0, cvOldUpper0
Field cetaNewLower0< global, DefaultCellLayout, None >@all
Field cetaNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cetaNew0 : "Triangles" = cetaNewLower0, cetaNewUpper0
Field cuNewLower0< global, DefaultCellLayout, None >@all
Field cuNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuNew0 : "Triangles" = cuNewLower0, cuNewUpper0
Field cvNewLower0< global, DefaultCellLayout, None >@all
Field cvNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvNew0 : "Triangles" = cvNewLower0, cvNewUpper0
Field cetaEdgeDLower0< global, DefaultCellLayout, None >@all
Field cuEdgeDLower0< global, DefaultCellLayout, None >@all
Field cvEdgeDLower0< global, DefaultCellLayout, None >@all
Field cetaEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cuEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cvEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cetaEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cuEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cvEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cetaEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cuEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cvEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cetaEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cuEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cvEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cetaEdgeHUpper0< global, DefaultFaceYLayout, None >@all
Field cuEdgeHUpper0< global, DefaultFaceYLayout, None >@all
Field cvEdgeHUpper0< global, DefaultFaceYLayout, None >@all
Field tidal< global, DefaultNodeLayout, None >@all


