
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Globals {
	
}

/// main function

Function Application ( ) : Unit {

	Var m1 : Matrix<Double, 2, 2> = {{1, 2}, {3, 4}}
	Var m2 : Matrix<Double, 2, 2> = {{1, 2}, {3, 4}}
	Var m3 : Matrix<Double, 2, 2> = {{1,1},{1,1}}
	Var prec : Double = 0.0001
	Var index : Int = 1


	// setSlice
	// setSlice(matrix, offsetRows, offsetCols, nRows, nCols, newValue) : Unit
	Var offset : Int = 0
	Var value : Int = 5
	setSlice(m1,offset,0,2,2,5)
	Var setSlice_sol1 : Matrix<Double, 2, 2> = {{5, 5}, {5, 5}}
	compare(m1,setSlice_sol1,prec)
	print('stage 0 done')

	setSlice(m1,0,1,2,1,3)
	Var setSlice_sol2 : Matrix<Double, 2, 2> = {{5, 3}, {5, 3}}
	compare(m1,setSlice_sol2,prec)
	setSlice(m1,0,0,2,2,{{1,1},{1,1}})
	compare(m1,m3,0.1)
	setSlice(m1,0,0,2,2,m2)
	compare(m1,m2,0.1)

	print('stage 1 done')
	// getSlice
	// getSlice(matrix, offsetRows, offsetCols, nRows, nCols) : Matrix
	Var slice1 : Matrix<Double, 2, 2> = getSlice(m2,0,0,2,2)
	Var getSlice_sol1 : Matrix<Double, 2, 2> = {{1, 2}, {3, 4}}
	compare(slice1,getSlice_sol1,prec)
	print('stage 2 done')

	Var slice2 : Matrix<Double, 1, 2> 
	slice2 = getSlice(m2,1,0,1,2)
	Var slice2_sol : Matrix<Double, 1, 2> = {{3,4}}
	compare(slice2,slice2_sol,prec)
	print('stage 3 done')
/*
	// rt datatype required
	Var runtime_dependent: Int = 1
	Var slice3 : Matrix<Double, 1, 2> = getSlice(m2,0,0,runtime_dependent,2)
	compare(slice3,slice2_sol,prec)
	print('stage 4 done')
*/

	// get and setElement
	Var elem1 : Double = getElement(m2,index,0)
	compare(elem1,3,0.001)	
	print('stage 5 done')

	setElement(m1, 1, 1, 5)
	Var elem2 : Double = getElement(m1,1,1)
	compare(5,elem2,prec)
	print('stage 6 done')

	Var m : Matrix<Double, 3, 3> = {{1, 2, 3}, {4,5,6},{7,8,9}}
	// retrieve the first two entries of the last row of m with getSlice
	// place them at the last two entries of the second row
	setSlice(m,index,1,1,2, getSlice(m,2,0,1,2))
	Var m_sol : Matrix<Double, 3, 3> = {{1, 2, 3}, {4,7,8},{7,8,9}}
	
	compare(m_sol,m,prec)
	print('stage 7 done')
	


}

