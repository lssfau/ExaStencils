
Domain global< [ 0, 0 ] to [ 0.1, 0.1 ] >

Globals {
	
}

/// main function

Function Application ( ) : Unit {
	// input matrices
	Var m1 : Matrix<Real, 2, 2> = {{1, 2}, {3, 4}}
	Var m2 : Matrix<Real, 2, 2> = {{1, 2}, {3, 4}}
	Var prec : Double = 0.0001
/*
	// dotProduct
	Var res_init : Matrix<Real, 2, 2> = dotProduct(m1,m2)
	Var res_split : Matrix<Real, 2, 2>
	res_split = dotProduct(m1,m2)
	Var mult_sol : Matrix<Double, 2, 2> = {{7,10},{15,22}}	
	compare(res_split,mult_sol,prec)
	compare(res_init,mult_sol,prec)

	// add scalar
	Var addScalar_res1 : Matrix<Double, 2, 2> = 1 + m1
	Var addScalar_res2 : Matrix<Double, 2, 2> = m1 + 1
	Var addScalar_sol : Matrix<Double, 2, 2> = {{2,3},{4,5}}
	compare(addScalar_res1,addScalar_sol,prec)
	compare(addScalar_res2,addScalar_sol,prec)
*/
	// add matrices
	Var addMatrices_res : Matrix<Double, 2, 2> = m1 + 1 + m2 + m1 + 2
	Var addMatrices_sol : Matrix<Double, 2, 2> = {{6, 9},{12, 15}}
	compare(addMatrices_res, addMatrices_sol,prec)

/*
	Var m1_inverse_init : Matrix<Real,2,2> = inverse(m1)
	Var m1_inverse_split : Matrix<Real,2,2> 
	m1_inverse_split = inverse(m1)

    	Var mat_large : Matrix<Real, 7, 7> = {{1, 2, 1, 0, 0, 0, 3}, {4, 2, 1, 0, 0, 0, 1}, {1,5,1,0,0,0,5},{0, 0, 0, 4, 1, 3, 2}, {0, 0, 0, 1, 1, 2, 3}, {0,0,0,4,6,7,3},{3,5,7,4,4,5,1}}
	Var mat_large_inv_init : Matrix<Real, 7, 7> = inverse(mat_large)
	Var mat_large_inv_split : Matrix<Real, 7, 7> 
	mat_large_inv_split = inverse(mat_large)

  	Var mat : Matrix<Real, 4, 4> = {{1, 2, 1, 3}, {4, 2, 1, 2}, {4, 1, 3, 2}, {1, 1, 2, 3}}
	Var mat_inverse_init : Matrix<Real, 4, 4> = inverse(mat)
	Var mat_inverse_split : Matrix<Real, 4, 4>
	mat_inverse_split = inverse(mat)
*/
}

