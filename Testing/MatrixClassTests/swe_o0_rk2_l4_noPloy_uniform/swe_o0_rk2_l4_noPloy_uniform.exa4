Domain global< [0,0] to [1000,1000] >

Globals {
Var dt : Real = 0.01
Var t : Real = 0
Expr tMax = 1500
Expr g = 0.16
Expr printInterval = 100
Var print_count : Int = 0
Var it : Int = 0
Var errceta@4 : Real = 0
Var errcu@4 : Real = 0
Var errcv@4 : Real = 0
}



Function InitTriInfo@all (  ) {

}




Function InitBath@all (  ) {
loop over bath starting [-1, -1] ending [-1, -1] {
  bath = 0.001*vf_nodePosition_0@[0, 0] + 0.002*vf_nodePosition_1@[0, 0] + 15.0
}
communicate bath
}




Function CheckGrid@all (  ) {

}




Function InitFieldsAnalytical@all (  ) {
startTimer ( 'InitFieldsAnalytical' )
loop over cetaLower0 {
  cetaLower0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))
  cuLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6)
  cvLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)
  cetaUpper0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))
  cuUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6)
  cvUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)
}
stopTimer ( 'InitFieldsAnalytical' )
}




Function UpdateCTilde@all (  ) {
startTimer ( 'UpdateCTilde' )
loop over cuTildeLower0 {
  solve locally {
  cuTildeLower0 => cuTildeLower0*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.016)*1.41421356237310*cetaLower0) == cuLower0
}
  solve locally {
  cuTildeUpper0 => cuTildeUpper0*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + (0.016)*1.41421356237310*cetaUpper0) == cuUpper0
}
}
loop over cvTildeLower0 {
  solve locally {
  cvTildeLower0 => cvTildeLower0*((0.333333333333333)*bath@[0, 0] + (0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.016)*1.41421356237310*cetaLower0) == cvLower0
}
  solve locally {
  cvTildeUpper0 => cvTildeUpper0*((0.333333333333333)*bath@[0, 1] + (0.333333333333333)*bath@[1, 0] + (0.333333333333333)*bath@[1, 1] + (0.016)*1.41421356237310*cetaUpper0) == cvUpper0
}
}
stopTimer ( 'UpdateCTilde' )
}




Function CommunicateAll@all (  ) {
startTimer ( 'CommunicateAll' )
communicate cetaLower0
communicate cetaUpper0
communicate cuLower0
communicate cuUpper0
communicate cvLower0
communicate cvUpper0
communicate cuTildeLower0
communicate cuTildeUpper0
communicate cvTildeLower0
communicate cvTildeUpper0
stopTimer ( 'CommunicateAll' )
}




Function ApplyAllBc@all (  ) {
startTimer ( 'ApplyAllBc' )
loop over cetaUpper0 only ghost [-1, 0] on boundary {
  cetaUpper0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])))
}
loop over cuUpper0 only ghost [-1, 0] on boundary {
  cuUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) + 0.6)
}
loop over cvUpper0 only ghost [-1, 0] on boundary {
  cvUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) + 0.3)
}
loop over cetaLower0 only ghost [1, 0] on boundary {
  cetaLower0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])))
}
loop over cuLower0 only ghost [1, 0] on boundary {
  cuLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) + 0.6)
}
loop over cvLower0 only ghost [1, 0] on boundary {
  cvLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) + 0.3)
}
loop over cetaUpper0 only ghost [0, -1] on boundary {
  cetaUpper0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])))
}
loop over cuUpper0 only ghost [0, -1] on boundary {
  cuUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) + 0.6)
}
loop over cvUpper0 only ghost [0, -1] on boundary {
  cvUpper0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) + 0.3)
}
loop over cetaLower0 only ghost [0, 1] on boundary {
  cetaLower0 = (31.25)*1.41421356237310*(2.3 - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])))
}
loop over cuLower0 only ghost [0, 1] on boundary {
  cuLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) + 0.6)
}
loop over cvLower0 only ghost [0, 1] on boundary {
  cvLower0 = (31.25)*1.41421356237310*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) + 0.3)
}
loop over cuTildeUpper0 only ghost [-1, 0] on boundary {
  solve locally {
  cuTildeUpper0 => cuTildeUpper0*(bath@[1, 0] + bath@[1, 1] + (0.032)*1.41421356237310*cetaUpper0) == 2.0*cuUpper0
}
}
loop over cvTildeUpper0 only ghost [-1, 0] on boundary {
  solve locally {
  cvTildeUpper0 => cvTildeUpper0*(bath@[1, 0] + bath@[1, 1] + (0.032)*1.41421356237310*cetaUpper0) == 2.0*cvUpper0
}
}
loop over cuTildeLower0 only ghost [1, 0] on boundary {
  solve locally {
  cuTildeLower0 => cuTildeLower0*(bath@[0, 0] + bath@[0, 1] + (0.032)*1.41421356237310*cetaLower0) == 2.0*cuLower0
}
}
loop over cvTildeLower0 only ghost [1, 0] on boundary {
  solve locally {
  cvTildeLower0 => cvTildeLower0*(bath@[0, 0] + bath@[0, 1] + (0.032)*1.41421356237310*cetaLower0) == 2.0*cvLower0
}
}
loop over cuTildeUpper0 only ghost [0, -1] on boundary {
  solve locally {
  cuTildeUpper0 => cuTildeUpper0*(bath@[0, 1] + bath@[1, 1] + (0.032)*1.41421356237310*cetaUpper0) == 2.0*cuUpper0
}
}
loop over cvTildeUpper0 only ghost [0, -1] on boundary {
  solve locally {
  cvTildeUpper0 => cvTildeUpper0*(bath@[0, 1] + bath@[1, 1] + (0.032)*1.41421356237310*cetaUpper0) == 2.0*cvUpper0
}
}
loop over cuTildeLower0 only ghost [0, 1] on boundary {
  solve locally {
  cuTildeLower0 => cuTildeLower0*(bath@[0, 0] + bath@[1, 0] + (0.032)*1.41421356237310*cetaLower0) == 2.0*cuLower0
}
}
loop over cvTildeLower0 only ghost [0, 1] on boundary {
  solve locally {
  cvTildeLower0 => cvTildeLower0*(bath@[0, 0] + bath@[1, 0] + (0.032)*1.41421356237310*cetaLower0) == 2.0*cvLower0
}
}
stopTimer ( 'ApplyAllBc' )
}




Function PrintError@all (  ) {
Var normErr_ceta_Lower : Real = 0
loop over cetaLower0 with reduction ( + : normErr_ceta_Lower ) {
  normErr_ceta_Lower += (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaLower0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) )
}
print ( 'Error for cetaLower:', sqrt ( normErr_ceta_Lower ) )
Var normErr_ceta_Upper : Real = 0
loop over cetaUpper0 with reduction ( + : normErr_ceta_Upper ) {
  normErr_ceta_Upper += (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 2.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 2.3 ) * ( (0.016)*1.41421356237310*cetaUpper0@[0, 0] + 0.4*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 2.3 ) )
}
print ( 'Error for cetaUpper:', sqrt ( normErr_ceta_Upper ) )
errceta@current = sqrt ( normErr_ceta_Lower + normErr_ceta_Upper )
print ( 'Error for ceta:', errceta@current )
Var normErr_cu_Lower : Real = 0
loop over cuLower0 with reduction ( + : normErr_cu_Lower ) {
  normErr_cu_Lower += (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) )
}
print ( 'Error for cuLower:', sqrt ( normErr_cu_Lower ) )
Var normErr_cu_Upper : Real = 0
loop over cuUpper0 with reduction ( + : normErr_cu_Upper ) {
  normErr_cu_Upper += (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.6 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.6 ) * ( (0.016)*1.41421356237310*cuUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.6 ) )
}
print ( 'Error for cuUpper:', sqrt ( normErr_cu_Upper ) )
errcu@current = sqrt ( normErr_cu_Lower + normErr_cu_Upper )
print ( 'Error for cu:', errcu@current )
Var normErr_cv_Lower : Real = 0
loop over cvLower0 with reduction ( + : normErr_cv_Lower ) {
  normErr_cv_Lower += (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 0] + (0.00166666666666667)*vf_nodePosition_1@[0, 0])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvLower0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) )
}
print ( 'Error for cvLower:', sqrt ( normErr_cv_Lower ) )
Var normErr_cv_Upper : Real = 0
loop over cvUpper0 with reduction ( + : normErr_cv_Upper ) {
  normErr_cv_Upper += (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[0, 1] + (0.00166666666666667)*vf_nodePosition_1@[0, 1])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 0] + (0.00166666666666667)*vf_nodePosition_1@[1, 0])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.00166666666666667)*vf_nodePosition_0@[1, 1] + (0.00166666666666667)*vf_nodePosition_1@[1, 1])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[0, 1] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[0, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.3 ) ) + (325.520833333333)*( ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.3 ) * ( (0.016)*1.41421356237310*cvUpper0@[0, 0] - 0.04*sin(M_PI*(0.000333333333333333*t + (0.000833333333333333)*vf_nodePosition_0@[1, 0] + (0.000833333333333333)*vf_nodePosition_0@[1, 1] + (0.000833333333333333)*vf_nodePosition_1@[1, 0] + (0.000833333333333333)*vf_nodePosition_1@[1, 1])) - 0.3 ) )
}
print ( 'Error for cvUpper:', sqrt ( normErr_cv_Upper ) )
errcv@current = sqrt ( normErr_cv_Lower + normErr_cv_Upper )
print ( 'Error for cv:', errcv@current )
}




Function PrintDebugFields@all (  ) {

}




Function PrintVTK@finest (  ) {
loop over cetaLower0 {
  etaDiscLower0 = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  uDiscLower0 = (0.016)*1.41421356237310*cuLower0@[0, 0]
  vDiscLower0 = (0.016)*1.41421356237310*cvLower0@[0, 0]
  etaDiscLower1 = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  uDiscLower1 = (0.016)*1.41421356237310*cuLower0@[0, 0]
  vDiscLower1 = (0.016)*1.41421356237310*cvLower0@[0, 0]
  etaDiscLower2 = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  uDiscLower2 = (0.016)*1.41421356237310*cuLower0@[0, 0]
  vDiscLower2 = (0.016)*1.41421356237310*cvLower0@[0, 0]
  etaDiscUpper0 = (0.016)*1.41421356237310*cetaUpper0@[0, 0]
  uDiscUpper0 = (0.016)*1.41421356237310*cuUpper0@[0, 0]
  vDiscUpper0 = (0.016)*1.41421356237310*cvUpper0@[0, 0]
  etaDiscUpper1 = (0.016)*1.41421356237310*cetaUpper0@[0, 0]
  uDiscUpper1 = (0.016)*1.41421356237310*cuUpper0@[0, 0]
  vDiscUpper1 = (0.016)*1.41421356237310*cvUpper0@[0, 0]
  etaDiscUpper2 = (0.016)*1.41421356237310*cetaUpper0@[0, 0]
  uDiscUpper2 = (0.016)*1.41421356237310*cuUpper0@[0, 0]
  vDiscUpper2 = (0.016)*1.41421356237310*cvUpper0@[0, 0]
}
Var filename_vtk : String = ""
buildString ( filename_vtk, "../../data/swe_o0_rk2_l4_noPloy_uniform_-_", print_count, ".vtk" )
printVtkSWE ( filename_vtk, levels@current ( ) )
}




Function SetupPhase@all (  ) {
startTimer ( 'SetupPhase' )
it = 0
t = 0
print ( 't:', t )
InitTriInfo (  )
InitBath (  )
CheckGrid (  )
InitFieldsAnalytical (  )
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
PrintError (  )
PrintDebugFields (  )
PrintVTK (  )
print_count += 1
print ( '------------------' )
stopTimer ( 'SetupPhase' )
}




Function UpdateUnknowns@all (  ) {
startTimer ( 'UpdateUnknowns' )
loop over fragments  {
  loop over cetaEdgeDLower0 only inner [0, 0] {
  Var tmp0 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp1 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, 0]
  Var tmp2 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp3 : Real = (0.016)*1.41421356237310*cuUpper0@[0, 0]
  Var tmp4 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp5 : Real = (0.016)*1.41421356237310*cvUpper0@[0, 0]
  Var tmp6 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp7 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, 0]
  Var tmp8 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp9 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, 0]
  Var tmp10 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp11 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, 0]
  Var tmp12 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp13 : Real = (0.016)*1.41421356237310*cuUpper0@[0, 0]
  Var tmp14 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp15 : Real = (0.016)*1.41421356237310*cvUpper0@[0, 0]
  Var tmp16 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp17 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, 0]
  Var tmp18 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp19 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, 0]
  Var lam0 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 1] + 0.5*bath@[1, 0] + tmp10, 0.5*bath@[0, 1] + 0.5*bath@[1, 0] + tmp11)) ) + fmax(fabs((1.0/2.0)*M_SQRT2*tmp16 + (1.0/2.0)*M_SQRT2*tmp18), fabs((1.0/2.0)*M_SQRT2*tmp17 + (1.0/2.0)*M_SQRT2*tmp19))
  Var tmp20 : Real = (0.5)*1.41421356237310*tmp2 + (0.5)*1.41421356237310*tmp4
  Var tmp21 : Real = (0.5)*1.41421356237310*tmp3 + (0.5)*1.41421356237310*tmp5
  Var tmp22 : Real = (0.25)*1.41421356237310*bath@[0, 1]*g*tmp0 + (0.25)*1.41421356237310*bath@[1, 0]*g*tmp0 + (0.25)*1.41421356237310*g*( ( tmp0 ) * ( tmp0 ) ) + (0.5)*1.41421356237310*tmp2*tmp6 + (0.5)*1.41421356237310*tmp2*tmp8
  Var tmp23 : Real = (0.25)*1.41421356237310*bath@[0, 1]*g*tmp1 + (0.25)*1.41421356237310*bath@[1, 0]*g*tmp1 + (0.25)*1.41421356237310*g*( ( tmp1 ) * ( tmp1 ) ) + (0.5)*1.41421356237310*tmp3*tmp7 + (0.5)*1.41421356237310*tmp3*tmp9
  Var tmp24 : Real = (0.25)*1.41421356237310*bath@[0, 1]*g*tmp0 + (0.25)*1.41421356237310*bath@[1, 0]*g*tmp0 + (0.25)*1.41421356237310*g*( ( tmp0 ) * ( tmp0 ) ) + (0.5)*1.41421356237310*tmp4*tmp6 + (0.5)*1.41421356237310*tmp4*tmp8
  Var tmp25 : Real = (0.25)*1.41421356237310*bath@[0, 1]*g*tmp1 + (0.25)*1.41421356237310*bath@[1, 0]*g*tmp1 + (0.25)*1.41421356237310*g*( ( tmp1 ) * ( tmp1 ) ) + (0.5)*1.41421356237310*tmp5*tmp7 + (0.5)*1.41421356237310*tmp5*tmp9
  cetaEdgeDLower0 = (62.5)*lam0*(tmp0 - tmp1) + (62.5)*tmp20 + (62.5)*tmp21
  cuEdgeDLower0 = (62.5)*lam0*(tmp2 - tmp3) + (62.5)*tmp22 + (62.5)*tmp23
  cvEdgeDLower0 = (62.5)*lam0*(tmp4 - tmp5) + (62.5)*tmp24 + (62.5)*tmp25
  cetaEdgeDUpper0 = (62.5)*lam0*(-tmp0 + tmp1) - 62.5*tmp20 - 62.5*tmp21
  cuEdgeDUpper0 = (62.5)*lam0*(-tmp2 + tmp3) - 62.5*tmp22 - 62.5*tmp23
  cvEdgeDUpper0 = (62.5)*lam0*(-tmp4 + tmp5) - 62.5*tmp24 - 62.5*tmp25
}
  loop over cetaEdgeVLower0 only inner [0, 0] {
  Var tmp26 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp27 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp28 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp29 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp30 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp31 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp32 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp33 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp34 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp35 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var tmp36 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp37 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp38 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp39 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp40 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp41 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp42 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp43 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp44 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp45 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp36, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp37)) ) + fmax(fabs(-tmp42), fabs(-tmp43))
  Var tmp46 : Real = -tmp28
  Var tmp47 : Real = -tmp29
  Var tmp48 : Real = -0.5*bath@[0, 0]*g*tmp26 - 0.5*bath@[0, 1]*g*tmp26 - 0.5*g*( ( tmp26 ) * ( tmp26 ) ) - tmp28*tmp32
  Var tmp49 : Real = -0.5*bath@[0, 0]*g*tmp27 - 0.5*bath@[0, 1]*g*tmp27 - 0.5*g*( ( tmp27 ) * ( tmp27 ) ) - tmp29*tmp33
  Var tmp50 : Real = -tmp30*tmp32
  Var tmp51 : Real = -tmp31*tmp33
  cetaEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp26 - tmp27) + (0.5)*tmp46 + (0.5)*tmp47)
  cuEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp28 - tmp29) + (0.5)*tmp48 + (0.5)*tmp49)
  cvEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp30 - tmp31) + (0.5)*tmp50 + (0.5)*tmp51)
  cetaEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp26 + tmp27) - 0.5*tmp46 - 0.5*tmp47)
  cuEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp28 + tmp29) - 0.5*tmp48 - 0.5*tmp49)
  cvEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp30 + tmp31) - 0.5*tmp50 - 0.5*tmp51)
}
  if ( ( getNeighFragEdge ( fragmentIdx, 0 ) < 0 or getNeighFragEdge ( fragmentIdx, 0 ) == 0 or getNeighFragEdge ( fragmentIdx, 0 ) == 1 ) ) {
  loop over cetaEdgeVLower0 only dup [-1, 0] {
  Var tmp52 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp53 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp54 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp55 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp56 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp57 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp58 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp59 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp60 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp61 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var tmp62 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp63 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp64 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp65 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp66 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp67 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp68 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp69 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp70 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp71 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp62, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp63)) ) + fmax(fabs(-tmp68), fabs(-tmp69))
  Var tmp72 : Real = -tmp54
  Var tmp73 : Real = -tmp55
  Var tmp74 : Real = -0.5*bath@[0, 0]*g*tmp52 - 0.5*bath@[0, 1]*g*tmp52 - 0.5*g*( ( tmp52 ) * ( tmp52 ) ) - tmp54*tmp58
  Var tmp75 : Real = -0.5*bath@[0, 0]*g*tmp53 - 0.5*bath@[0, 1]*g*tmp53 - 0.5*g*( ( tmp53 ) * ( tmp53 ) ) - tmp55*tmp59
  Var tmp76 : Real = -tmp56*tmp58
  Var tmp77 : Real = -tmp57*tmp59
  cetaEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp52 - tmp53) + (0.5)*tmp72 + (0.5)*tmp73)
  cuEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp54 - tmp55) + (0.5)*tmp74 + (0.5)*tmp75)
  cvEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp56 - tmp57) + (0.5)*tmp76 + (0.5)*tmp77)
}
} else {
  loop over cetaEdgeVLower0 only dup [-1, 0] {
  Var tmp78 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp79 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp80 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp81 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp82 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp83 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp84 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp85 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp86 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp87 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var tmp88 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp89 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp90 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp91 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp92 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp93 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp94 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp95 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp96 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp97 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp88, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp89)) ) + fmax(fabs(-tmp94), fabs(-tmp95))
  Var tmp98 : Real = -tmp80
  Var tmp99 : Real = -tmp81
  Var tmp100 : Real = -0.5*bath@[0, 0]*g*tmp78 - 0.5*bath@[0, 1]*g*tmp78 - 0.5*g*( ( tmp78 ) * ( tmp78 ) ) - tmp80*tmp84
  Var tmp101 : Real = -0.5*bath@[0, 0]*g*tmp79 - 0.5*bath@[0, 1]*g*tmp79 - 0.5*g*( ( tmp79 ) * ( tmp79 ) ) - tmp81*tmp85
  Var tmp102 : Real = -tmp82*tmp84
  Var tmp103 : Real = -tmp83*tmp85
  cetaEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp78 - tmp79) + (0.5)*tmp98 + (0.5)*tmp99)
  cuEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp80 - tmp81) + (0.5)*tmp100 + (0.5)*tmp101)
  cvEdgeVLower0 = (62.5)*1.41421356237310*((0.5)*lam1*(tmp82 - tmp83) + (0.5)*tmp102 + (0.5)*tmp103)
}
}
  if ( ( getNeighFragEdge ( fragmentIdx, 1 ) < 0 or getNeighFragEdge ( fragmentIdx, 1 ) == 0 or getNeighFragEdge ( fragmentIdx, 1 ) == 1 ) ) {
  loop over cetaEdgeVLower0 only dup [1, 0] {
  Var tmp104 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp105 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp106 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp107 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp108 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp109 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp110 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp111 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp112 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp113 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var tmp114 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp115 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp116 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp117 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp118 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp119 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp120 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp121 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp122 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp123 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp114, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp115)) ) + fmax(fabs(-tmp120), fabs(-tmp121))
  Var tmp124 : Real = -tmp106
  Var tmp125 : Real = -tmp107
  Var tmp126 : Real = -0.5*bath@[0, 0]*g*tmp104 - 0.5*bath@[0, 1]*g*tmp104 - 0.5*g*( ( tmp104 ) * ( tmp104 ) ) - tmp106*tmp110
  Var tmp127 : Real = -0.5*bath@[0, 0]*g*tmp105 - 0.5*bath@[0, 1]*g*tmp105 - 0.5*g*( ( tmp105 ) * ( tmp105 ) ) - tmp107*tmp111
  Var tmp128 : Real = -tmp108*tmp110
  Var tmp129 : Real = -tmp109*tmp111
  cetaEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp104 + tmp105) - 0.5*tmp124 - 0.5*tmp125)
  cuEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp106 + tmp107) - 0.5*tmp126 - 0.5*tmp127)
  cvEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp108 + tmp109) - 0.5*tmp128 - 0.5*tmp129)
}
} else {
  loop over cetaEdgeVLower0 only dup [1, 0] {
  Var tmp130 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp131 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp132 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp133 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp134 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp135 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp136 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp137 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp138 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp139 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var tmp140 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp141 : Real = (0.016)*1.41421356237310*cetaUpper0@[-1, 0]
  Var tmp142 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp143 : Real = (0.016)*1.41421356237310*cuUpper0@[-1, 0]
  Var tmp144 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp145 : Real = (0.016)*1.41421356237310*cvUpper0@[-1, 0]
  Var tmp146 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp147 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[-1, 0]
  Var tmp148 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp149 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[-1, 0]
  Var lam1 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp140, 0.5*bath@[0, 0] + 0.5*bath@[0, 1] + tmp141)) ) + fmax(fabs(-tmp146), fabs(-tmp147))
  Var tmp150 : Real = -tmp132
  Var tmp151 : Real = -tmp133
  Var tmp152 : Real = -0.5*bath@[0, 0]*g*tmp130 - 0.5*bath@[0, 1]*g*tmp130 - 0.5*g*( ( tmp130 ) * ( tmp130 ) ) - tmp132*tmp136
  Var tmp153 : Real = -0.5*bath@[0, 0]*g*tmp131 - 0.5*bath@[0, 1]*g*tmp131 - 0.5*g*( ( tmp131 ) * ( tmp131 ) ) - tmp133*tmp137
  Var tmp154 : Real = -tmp134*tmp136
  Var tmp155 : Real = -tmp135*tmp137
  cetaEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp130 + tmp131) - 0.5*tmp150 - 0.5*tmp151)
  cuEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp132 + tmp133) - 0.5*tmp152 - 0.5*tmp153)
  cvEdgeVUpper0 = (62.5)*1.41421356237310*((0.5)*lam1*(-tmp134 + tmp135) - 0.5*tmp154 - 0.5*tmp155)
}
}
  loop over cetaEdgeHLower0 only inner [0, 0] {
  Var tmp156 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp157 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp158 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp159 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp160 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp161 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp162 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp163 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp164 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp165 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var tmp166 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp167 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp168 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp169 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp170 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp171 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp172 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp173 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp174 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp175 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp166, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp167)) ) + fmax(fabs(-tmp174), fabs(-tmp175))
  Var tmp176 : Real = -tmp160
  Var tmp177 : Real = -tmp161
  Var tmp178 : Real = -tmp158*tmp164
  Var tmp179 : Real = -tmp159*tmp165
  Var tmp180 : Real = -0.5*bath@[0, 0]*g*tmp156 - 0.5*bath@[1, 0]*g*tmp156 - 0.5*g*( ( tmp156 ) * ( tmp156 ) ) - tmp160*tmp164
  Var tmp181 : Real = -0.5*bath@[0, 0]*g*tmp157 - 0.5*bath@[1, 0]*g*tmp157 - 0.5*g*( ( tmp157 ) * ( tmp157 ) ) - tmp161*tmp165
  cetaEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp156 - tmp157) + (0.5)*tmp176 + (0.5)*tmp177)
  cuEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp158 - tmp159) + (0.5)*tmp178 + (0.5)*tmp179)
  cvEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp160 - tmp161) + (0.5)*tmp180 + (0.5)*tmp181)
  cetaEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp156 + tmp157) - 0.5*tmp176 - 0.5*tmp177)
  cuEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp158 + tmp159) - 0.5*tmp178 - 0.5*tmp179)
  cvEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp160 + tmp161) - 0.5*tmp180 - 0.5*tmp181)
}
  if ( ( getNeighFragEdge ( fragmentIdx, 2 ) < 0 or getNeighFragEdge ( fragmentIdx, 2 ) == 2 or getNeighFragEdge ( fragmentIdx, 2 ) == 3 ) ) {
  loop over cetaEdgeHLower0 only dup [0, -1] {
  Var tmp182 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp183 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp184 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp185 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp186 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp187 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp188 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp189 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp190 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp191 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var tmp192 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp193 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp194 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp195 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp196 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp197 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp198 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp199 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp200 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp201 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp192, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp193)) ) + fmax(fabs(-tmp200), fabs(-tmp201))
  Var tmp202 : Real = -tmp186
  Var tmp203 : Real = -tmp187
  Var tmp204 : Real = -tmp184*tmp190
  Var tmp205 : Real = -tmp185*tmp191
  Var tmp206 : Real = -0.5*bath@[0, 0]*g*tmp182 - 0.5*bath@[1, 0]*g*tmp182 - 0.5*g*( ( tmp182 ) * ( tmp182 ) ) - tmp186*tmp190
  Var tmp207 : Real = -0.5*bath@[0, 0]*g*tmp183 - 0.5*bath@[1, 0]*g*tmp183 - 0.5*g*( ( tmp183 ) * ( tmp183 ) ) - tmp187*tmp191
  cetaEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp182 - tmp183) + (0.5)*tmp202 + (0.5)*tmp203)
  cuEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp184 - tmp185) + (0.5)*tmp204 + (0.5)*tmp205)
  cvEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp186 - tmp187) + (0.5)*tmp206 + (0.5)*tmp207)
}
} else {
  loop over cetaEdgeHLower0 only dup [0, -1] {
  Var tmp208 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp209 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp210 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp211 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp212 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp213 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp214 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp215 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp216 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp217 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var tmp218 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp219 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp220 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp221 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp222 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp223 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp224 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp225 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp226 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp227 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp218, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp219)) ) + fmax(fabs(-tmp226), fabs(-tmp227))
  Var tmp228 : Real = -tmp212
  Var tmp229 : Real = -tmp213
  Var tmp230 : Real = -tmp210*tmp216
  Var tmp231 : Real = -tmp211*tmp217
  Var tmp232 : Real = -0.5*bath@[0, 0]*g*tmp208 - 0.5*bath@[1, 0]*g*tmp208 - 0.5*g*( ( tmp208 ) * ( tmp208 ) ) - tmp212*tmp216
  Var tmp233 : Real = -0.5*bath@[0, 0]*g*tmp209 - 0.5*bath@[1, 0]*g*tmp209 - 0.5*g*( ( tmp209 ) * ( tmp209 ) ) - tmp213*tmp217
  cetaEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp208 - tmp209) + (0.5)*tmp228 + (0.5)*tmp229)
  cuEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp210 - tmp211) + (0.5)*tmp230 + (0.5)*tmp231)
  cvEdgeHLower0 = (62.5)*1.41421356237310*((0.5)*lam2*(tmp212 - tmp213) + (0.5)*tmp232 + (0.5)*tmp233)
}
}
  if ( ( getNeighFragEdge ( fragmentIdx, 3 ) < 0 or getNeighFragEdge ( fragmentIdx, 3 ) == 2 or getNeighFragEdge ( fragmentIdx, 3 ) == 3 ) ) {
  loop over cetaEdgeHLower0 only dup [0, 1] {
  Var tmp234 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp235 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp236 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp237 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp238 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp239 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp240 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp241 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp242 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp243 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var tmp244 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp245 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp246 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp247 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp248 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp249 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp250 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp251 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp252 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp253 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp244, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp245)) ) + fmax(fabs(-tmp252), fabs(-tmp253))
  Var tmp254 : Real = -tmp238
  Var tmp255 : Real = -tmp239
  Var tmp256 : Real = -tmp236*tmp242
  Var tmp257 : Real = -tmp237*tmp243
  Var tmp258 : Real = -0.5*bath@[0, 0]*g*tmp234 - 0.5*bath@[1, 0]*g*tmp234 - 0.5*g*( ( tmp234 ) * ( tmp234 ) ) - tmp238*tmp242
  Var tmp259 : Real = -0.5*bath@[0, 0]*g*tmp235 - 0.5*bath@[1, 0]*g*tmp235 - 0.5*g*( ( tmp235 ) * ( tmp235 ) ) - tmp239*tmp243
  cetaEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp234 + tmp235) - 0.5*tmp254 - 0.5*tmp255)
  cuEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp236 + tmp237) - 0.5*tmp256 - 0.5*tmp257)
  cvEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp238 + tmp239) - 0.5*tmp258 - 0.5*tmp259)
}
} else {
  loop over cetaEdgeHLower0 only dup [0, 1] {
  Var tmp260 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp261 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp262 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp263 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp264 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp265 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp266 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp267 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp268 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp269 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var tmp270 : Real = (0.016)*1.41421356237310*cetaLower0@[0, 0]
  Var tmp271 : Real = (0.016)*1.41421356237310*cetaUpper0@[0, -1]
  Var tmp272 : Real = (0.016)*1.41421356237310*cuLower0@[0, 0]
  Var tmp273 : Real = (0.016)*1.41421356237310*cuUpper0@[0, -1]
  Var tmp274 : Real = (0.016)*1.41421356237310*cvLower0@[0, 0]
  Var tmp275 : Real = (0.016)*1.41421356237310*cvUpper0@[0, -1]
  Var tmp276 : Real = (0.016)*1.41421356237310*cuTildeLower0@[0, 0]
  Var tmp277 : Real = (0.016)*1.41421356237310*cuTildeUpper0@[0, -1]
  Var tmp278 : Real = (0.016)*1.41421356237310*cvTildeLower0@[0, 0]
  Var tmp279 : Real = (0.016)*1.41421356237310*cvTildeUpper0@[0, -1]
  Var lam2 : Real = sqrt ( g )*sqrt ( fmax(0, fmax(0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp270, 0.5*bath@[0, 0] + 0.5*bath@[1, 0] + tmp271)) ) + fmax(fabs(-tmp278), fabs(-tmp279))
  Var tmp280 : Real = -tmp264
  Var tmp281 : Real = -tmp265
  Var tmp282 : Real = -tmp262*tmp268
  Var tmp283 : Real = -tmp263*tmp269
  Var tmp284 : Real = -0.5*bath@[0, 0]*g*tmp260 - 0.5*bath@[1, 0]*g*tmp260 - 0.5*g*( ( tmp260 ) * ( tmp260 ) ) - tmp264*tmp268
  Var tmp285 : Real = -0.5*bath@[0, 0]*g*tmp261 - 0.5*bath@[1, 0]*g*tmp261 - 0.5*g*( ( tmp261 ) * ( tmp261 ) ) - tmp265*tmp269
  cetaEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp260 + tmp261) - 0.5*tmp280 - 0.5*tmp281)
  cuEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp262 + tmp263) - 0.5*tmp282 - 0.5*tmp283)
  cvEdgeHUpper0 = (62.5)*1.41421356237310*((0.5)*lam2*(-tmp264 + tmp265) - 0.5*tmp284 - 0.5*tmp285)
}
}
  loop over cetaNewLower0 {
  cetaNewLower0 = -0.016*cetaEdgeDLower0@[0, 0] - 0.016*cetaEdgeHLower0@[0, 0] - 0.016*cetaEdgeVLower0@[0, 0]
  cuNewLower0 = -0.016*cuEdgeDLower0@[0, 0] - 0.016*cuEdgeHLower0@[0, 0] - 0.016*cuEdgeVLower0@[0, 0] + (31.25)*1.41421356237310*(1.6e-5*1.41421356237310*cetaLower0@[0, 0]*g - 0.000666666666666667*M_PI*g*(0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + (-(-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.001)*( ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6 ) * ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6 ) ) - (-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.002)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6) + (6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))*(0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6)*(0.000666666666666667*vf_nodePosition_0@[0, 0] + 0.000666666666666667*vf_nodePosition_0@[0, 1] + 0.000666666666666667*vf_nodePosition_0@[1, 0] + 0.00133333333333333*vf_nodePosition_1@[0, 0] + 0.00133333333333333*vf_nodePosition_1@[0, 1] + 0.00133333333333333*vf_nodePosition_1@[1, 0] - 0.8*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 34.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))/( ( 0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3 ) * ( 0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3 ) ) + 1.33333333333333e-5*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))
  cvNewLower0 = -0.016*cvEdgeDLower0@[0, 0] - 0.016*cvEdgeHLower0@[0, 0] - 0.016*cvEdgeVLower0@[0, 0] + (31.25)*1.41421356237310*(3.2e-5*1.41421356237310*cetaLower0@[0, 0]*g - 0.000666666666666667*M_PI*g*(0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + (-(-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.001)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6) - (-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.002)*( ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3 ) * ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3 ) ) + (6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))*(0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 0.3)*(0.000666666666666667*vf_nodePosition_0@[0, 0] + 0.000666666666666667*vf_nodePosition_0@[0, 1] + 0.000666666666666667*vf_nodePosition_0@[1, 0] + 0.00133333333333333*vf_nodePosition_1@[0, 0] + 0.00133333333333333*vf_nodePosition_1@[0, 1] + 0.00133333333333333*vf_nodePosition_1@[1, 0] - 0.8*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 34.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))/( ( 0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3 ) * ( 0.000333333333333333*vf_nodePosition_0@[0, 0] + 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 0] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])) + 17.3 ) ) + 1.33333333333333e-5*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 0] + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 0] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0])))
}
  loop over cetaNewUpper0 {
  cetaNewUpper0 = -0.016*cetaEdgeDUpper0@[0, 0] - 0.016*cetaEdgeHUpper0@[0, 1] - 0.016*cetaEdgeVUpper0@[1, 0]
  cuNewUpper0 = -0.016*cuEdgeDUpper0@[0, 0] - 0.016*cuEdgeHUpper0@[0, 1] - 0.016*cuEdgeVUpper0@[1, 0] + (31.25)*1.41421356237310*(1.6e-5*1.41421356237310*cetaUpper0@[0, 0]*g - 0.000666666666666667*M_PI*g*(0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + (-(-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.001)*( ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6 ) * ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6 ) ) - (-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.002)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6) + (6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))*(0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6)*(0.000666666666666667*vf_nodePosition_0@[0, 1] + 0.000666666666666667*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_0@[1, 1] + 0.00133333333333333*vf_nodePosition_1@[0, 1] + 0.00133333333333333*vf_nodePosition_1@[1, 0] + 0.00133333333333333*vf_nodePosition_1@[1, 1] - 0.8*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 34.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))/( ( 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3 ) * ( 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3 ) ) + 1.33333333333333e-5*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))
  cvNewUpper0 = -0.016*cvEdgeDUpper0@[0, 0] - 0.016*cvEdgeHUpper0@[0, 1] - 0.016*cvEdgeVUpper0@[1, 0] + (31.25)*1.41421356237310*(3.2e-5*1.41421356237310*cetaUpper0@[0, 0]*g - 0.000666666666666667*M_PI*g*(0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + (-(-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.001)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6) - (-0.000666666666666667*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.002)*( ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3 ) * ( 0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3 ) ) + (6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))*(0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3) + 6.66666666666667e-5*M_PI*(0.04*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 0.3)*(0.000666666666666667*vf_nodePosition_0@[0, 1] + 0.000666666666666667*vf_nodePosition_0@[1, 0] + 0.000666666666666667*vf_nodePosition_0@[1, 1] + 0.00133333333333333*vf_nodePosition_1@[0, 1] + 0.00133333333333333*vf_nodePosition_1@[1, 0] + 0.00133333333333333*vf_nodePosition_1@[1, 1] - 0.8*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 34.6)*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))/( ( 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3 ) * ( 0.000333333333333333*vf_nodePosition_0@[0, 1] + 0.000333333333333333*vf_nodePosition_0@[1, 0] + 0.000333333333333333*vf_nodePosition_0@[1, 1] + 0.000666666666666667*vf_nodePosition_1@[0, 1] + 0.000666666666666667*vf_nodePosition_1@[1, 0] + 0.000666666666666667*vf_nodePosition_1@[1, 1] - 0.4*sin(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])) + 17.3 ) ) + 1.33333333333333e-5*M_PI*cos(M_PI*(0.000333333333333333*t + (0.000555555555555556)*vf_nodePosition_0@[0, 1] + (0.000555555555555556)*vf_nodePosition_0@[1, 0] + (0.000555555555555556)*vf_nodePosition_0@[1, 1] + (0.000555555555555556)*vf_nodePosition_1@[0, 1] + (0.000555555555555556)*vf_nodePosition_1@[1, 0] + (0.000555555555555556)*vf_nodePosition_1@[1, 1])))
}
}
stopTimer ( 'UpdateUnknowns' )
}




Function AdvanceRK2@all (  ) {
startTimer ( 'AdvanceRK2' )
UpdateUnknowns (  )
loop over cetaLower0 {
  cetaOldLower0 = cetaLower0
  cetaLower0 += cetaNewLower0*dt
  cuOldLower0 = cuLower0
  cuLower0 += cuNewLower0*dt
  cvOldLower0 = cvLower0
  cvLower0 += cvNewLower0*dt
  cetaOldUpper0 = cetaUpper0
  cetaUpper0 += cetaNewUpper0*dt
  cuOldUpper0 = cuUpper0
  cuUpper0 += cuNewUpper0*dt
  cvOldUpper0 = cvUpper0
  cvUpper0 += cvNewUpper0*dt
}
t += dt
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
UpdateUnknowns (  )
loop over cetaLower0 {
  cetaLower0 = (0.5)*cetaLower0 + (0.5)*cetaNewLower0*dt + (0.5)*cetaOldLower0
  cuLower0 = (0.5)*cuLower0 + (0.5)*cuNewLower0*dt + (0.5)*cuOldLower0
  cvLower0 = (0.5)*cvLower0 + (0.5)*cvNewLower0*dt + (0.5)*cvOldLower0
  cetaUpper0 = (0.5)*cetaNewUpper0*dt + (0.5)*cetaOldUpper0 + (0.5)*cetaUpper0
  cuUpper0 = (0.5)*cuNewUpper0*dt + (0.5)*cuOldUpper0 + (0.5)*cuUpper0
  cvUpper0 = (0.5)*cvNewUpper0*dt + (0.5)*cvOldUpper0 + (0.5)*cvUpper0
}
UpdateCTilde (  )
CommunicateAll (  )
ApplyAllBc (  )
stopTimer ( 'AdvanceRK2' )
}




Function SolvePhase@all (  ) {
startTimer ( 'SolvePhase' )
repeat while t < tMax - 1.0e-7 {
  startTimer ( 'timeLoop' )
  AdvanceRK2 (  )
  it += 1
  stopTimer ( 'timeLoop' )
  if ( ( fmod( t , printInterval ) < 0.1*dt or fmod( t , printInterval ) > -0.1*dt + printInterval ) ) {
  startTimer ( 'print' )
  print ( 't:', t, ', dt', dt )
  PrintError (  )
  print ( '------------------' )
  PrintDebugFields (  )
  PrintVTK (  )
  stopTimer ( 'print' )
  print_count += 1
}
}
stopTimer ( 'SolvePhase' )
}




Function Application (  ) {
initGlobals (  )
startTimer ( 'setup' )
readParameterFile ( "../swe_o0_rk2_l4_noPloy_uniform.parameter" )
initDomain (  )
initFieldsWithZero (  )
initGeometry (  )
stopTimer ( 'setup' )
SetupPhase@4 (  )
SolvePhase@4 (  )
reduceTimers (  )
printAllTimers (  )
destroyGlobals (  )
}




Layout DefaultNodeLayout< Real, Node >@all {
          duplicateLayers = [1, 1] with communication
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultCellLayout< Real, Cell >@all {
          duplicateLayers = [0, 0]
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultFaceXLayout< Real, Face_x >@all {
          duplicateLayers = [1, 0] with communication
          ghostLayers = [1, 1] with communication
        }

        Layout DefaultFaceYLayout< Real, Face_y >@all {
          duplicateLayers = [0, 1] with communication
          ghostLayers = [1, 1] with communication
        }


Field bath< global, DefaultNodeLayout, None >@all
Field cetaLower0< global, DefaultCellLayout, None >@all
Field cetaUpper0< global, DefaultCellLayout, None >@all
FieldCombination ceta0 : "Triangles" = cetaLower0, cetaUpper0
Field cuLower0< global, DefaultCellLayout, None >@all
Field cuUpper0< global, DefaultCellLayout, None >@all
FieldCombination cu0 : "Triangles" = cuLower0, cuUpper0
Field cvLower0< global, DefaultCellLayout, None >@all
Field cvUpper0< global, DefaultCellLayout, None >@all
FieldCombination cv0 : "Triangles" = cvLower0, cvUpper0
Field cuTildeLower0< global, DefaultCellLayout, None >@all
Field cuTildeUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuTilde0 : "Triangles" = cuTildeLower0, cuTildeUpper0
Field cvTildeLower0< global, DefaultCellLayout, None >@all
Field cvTildeUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvTilde0 : "Triangles" = cvTildeLower0, cvTildeUpper0
Field local_orderLower0< global, DefaultCellLayout, None >@all
Field local_orderUpper0< global, DefaultCellLayout, None >@all
FieldCombination local_order0 : "Triangles" = local_orderLower0, local_orderUpper0
Field adaptivity_nlockLower0< global, DefaultCellLayout, None >@all
Field adaptivity_nlockUpper0< global, DefaultCellLayout, None >@all
FieldCombination adaptivity_nlock0 : "Triangles" = adaptivity_nlockLower0, adaptivity_nlockUpper0
Field etaDiscLower0< global, DefaultCellLayout, None >@all
Field etaDiscLower1< global, DefaultCellLayout, None >@all
Field etaDiscLower2< global, DefaultCellLayout, None >@all
Field etaDiscUpper0< global, DefaultCellLayout, None >@all
Field etaDiscUpper1< global, DefaultCellLayout, None >@all
Field etaDiscUpper2< global, DefaultCellLayout, None >@all
FieldCombination etaDisc0 : "Triangles" = etaDiscLower0, etaDiscUpper0
FieldCombination etaDisc1 : "Triangles" = etaDiscLower1, etaDiscUpper1
FieldCombination etaDisc2 : "Triangles" = etaDiscLower2, etaDiscUpper2
Field uDiscLower0< global, DefaultCellLayout, None >@all
Field uDiscLower1< global, DefaultCellLayout, None >@all
Field uDiscLower2< global, DefaultCellLayout, None >@all
Field uDiscUpper0< global, DefaultCellLayout, None >@all
Field uDiscUpper1< global, DefaultCellLayout, None >@all
Field uDiscUpper2< global, DefaultCellLayout, None >@all
FieldCombination uDisc0 : "Triangles" = uDiscLower0, uDiscUpper0
FieldCombination uDisc1 : "Triangles" = uDiscLower1, uDiscUpper1
FieldCombination uDisc2 : "Triangles" = uDiscLower2, uDiscUpper2
Field vDiscLower0< global, DefaultCellLayout, None >@all
Field vDiscLower1< global, DefaultCellLayout, None >@all
Field vDiscLower2< global, DefaultCellLayout, None >@all
Field vDiscUpper0< global, DefaultCellLayout, None >@all
Field vDiscUpper1< global, DefaultCellLayout, None >@all
Field vDiscUpper2< global, DefaultCellLayout, None >@all
FieldCombination vDisc0 : "Triangles" = vDiscLower0, vDiscUpper0
FieldCombination vDisc1 : "Triangles" = vDiscLower1, vDiscUpper1
FieldCombination vDisc2 : "Triangles" = vDiscLower2, vDiscUpper2
Field cetaOldLower0< global, DefaultCellLayout, None >@all
Field cetaOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cetaOld0 : "Triangles" = cetaOldLower0, cetaOldUpper0
Field cuOldLower0< global, DefaultCellLayout, None >@all
Field cuOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuOld0 : "Triangles" = cuOldLower0, cuOldUpper0
Field cvOldLower0< global, DefaultCellLayout, None >@all
Field cvOldUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvOld0 : "Triangles" = cvOldLower0, cvOldUpper0
Field cetaNewLower0< global, DefaultCellLayout, None >@all
Field cetaNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cetaNew0 : "Triangles" = cetaNewLower0, cetaNewUpper0
Field cuNewLower0< global, DefaultCellLayout, None >@all
Field cuNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cuNew0 : "Triangles" = cuNewLower0, cuNewUpper0
Field cvNewLower0< global, DefaultCellLayout, None >@all
Field cvNewUpper0< global, DefaultCellLayout, None >@all
FieldCombination cvNew0 : "Triangles" = cvNewLower0, cvNewUpper0
Field cetaEdgeDLower0< global, DefaultCellLayout, None >@all
Field cuEdgeDLower0< global, DefaultCellLayout, None >@all
Field cvEdgeDLower0< global, DefaultCellLayout, None >@all
Field cetaEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cuEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cvEdgeDUpper0< global, DefaultCellLayout, None >@all
Field cetaEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cuEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cvEdgeVLower0< global, DefaultFaceXLayout, None >@all
Field cetaEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cuEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cvEdgeVUpper0< global, DefaultFaceXLayout, None >@all
Field cetaEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cuEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cvEdgeHLower0< global, DefaultFaceYLayout, None >@all
Field cetaEdgeHUpper0< global, DefaultFaceYLayout, None >@all
Field cuEdgeHUpper0< global, DefaultFaceYLayout, None >@all
Field cvEdgeHUpper0< global, DefaultFaceYLayout, None >@all


